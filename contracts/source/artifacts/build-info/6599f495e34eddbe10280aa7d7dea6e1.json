{
	"id": "6599f495e34eddbe10280aa7d7dea6e1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.12",
	"solcLongVersion": "0.8.12+commit.f00d7308",
	"input": {
		"language": "Solidity",
		"sources": {
			"source/Farm.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        require(!paused(), \"Pausable: paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        require(paused(), \"Pausable: not paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\ncontract Farm is ReentrancyGuard, Pausable, Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakedToken {\r\n        address staker;\r\n        uint256 tokenId;\r\n        uint256 stackeUtx;          // Время когда застейкали\r\n    }\r\n    // Staker info\r\n    struct Staker {\r\n        uint256 amountStaked;\r\n        StakedToken[] stakedTokens;\r\n        uint256 timeOfLastUpdate;\r\n        uint256 unclaimedRewards;\r\n    }\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC721 public nftCollection;\r\n    address private nftCollectionAddress;\r\n    // Rewards per hour per token deposited in wei\r\n    uint256 public rewardsPerHour = 100000;\r\n\r\n    uint256 public version = 3;\r\n\r\n    bool public lockEnabled = false;      // v3\r\n    uint256 public lockTime = 0;          // v3\r\n    \r\n    mapping(address => Staker) public stakers;\r\n    // Mapping of tokenId to staker. For remember who to send back ther token\r\n    mapping(uint256 => address) public stakerAddress;\r\n    // Mapping of tokenId to start stake time\r\n    mapping(uint256 => uint256) public tokenStartStakeTime;     // v3\r\n\r\n    constructor(\r\n        address _nftCollection,\r\n        IERC20 _rewardsToken,\r\n        uint256 _rewardsPerHour,\r\n        bool _lockEnabled,         // v3\r\n        uint _lockTime             // v3\r\n    ) {\r\n        nftCollection = IERC721(_nftCollection);\r\n        nftCollectionAddress = _nftCollection;\r\n        rewardsToken = _rewardsToken;\r\n        rewardsPerHour = _rewardsPerHour;\r\n        lockTime = _lockTime;           // v3\r\n        lockEnabled = _lockEnabled;     // v3\r\n    }\r\n\r\n    // v3\r\n    function setLockEnabled(bool _lockEnabled) external onlyOwner {\r\n        lockEnabled = _lockEnabled;\r\n    }\r\n    // v3\r\n    function setLockTime(uint256 _lockTime) external onlyOwner {\r\n        lockTime = _lockTime;\r\n    }\r\n    function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {\r\n        rewardsPerHour = _rewardsPerHour;\r\n    }\r\n\r\n    function _stake(address _staker, uint256 _tokenId) internal {\r\n        require(\r\n            nftCollection.ownerOf(_tokenId) == _staker,\r\n            \"You don't own this token!\"\r\n        );\r\n\r\n        if (stakers[_staker].amountStaked > 0) {\r\n            uint256 rewards = calculateRewards(_staker);\r\n            stakers[_staker].unclaimedRewards += rewards;\r\n        }\r\n\r\n        nftCollection.transferFrom(_staker, address(this), _tokenId);\r\n\r\n        StakedToken memory stakedToken = StakedToken(\r\n            /* staker */        _staker,\r\n            /* tokenId */       _tokenId,\r\n            /* stackeUtx */     block.timestamp  // v3\r\n        );\r\n        stakers[_staker].stakedTokens.push(stakedToken);\r\n        stakers[_staker].amountStaked++;\r\n        stakerAddress[_tokenId] = _staker;\r\n        tokenStartStakeTime[_tokenId] = block.timestamp;        // v3\r\n        stakers[_staker].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    function adminWithdrawRewards() external onlyOwner whenPaused {\r\n        uint256 _balance = rewardsToken.balanceOf(address(this));\r\n        rewardsToken.safeTransfer(msg.sender, _balance);\r\n    }\r\n\r\n    function stake(uint256 _tokenId) external nonReentrant whenNotPaused {\r\n        _stake(msg.sender, _tokenId);\r\n    }\r\n\r\n    function withdraw(uint256 _tokenId) external nonReentrant {\r\n        require(\r\n            stakers[msg.sender].amountStaked > 0,\r\n            \"You have no tokens staked\"\r\n        );\r\n        require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\");\r\n\r\n        require(\r\n            (lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp)) || !lockEnabled,\r\n            \"Token lock time has not yet expired\"\r\n        );\r\n\r\n        // Update the rewards for this user, as the amount of rewards decreases with less tokens.\r\n        uint256 rewards = calculateRewards(msg.sender);\r\n        stakers[msg.sender].unclaimedRewards += rewards;\r\n\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r\n            if (\r\n                stakers[msg.sender].stakedTokens[i].tokenId == _tokenId \r\n                && \r\n                stakers[msg.sender].stakedTokens[i].staker != address(0)\r\n            ) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        stakers[msg.sender].stakedTokens[index].staker = address(0);\r\n        stakers[msg.sender].amountStaked--;\r\n        stakerAddress[_tokenId] = address(0);\r\n        tokenStartStakeTime[_tokenId] = 0;\r\n\r\n        nftCollection.transferFrom(address(this), msg.sender, _tokenId);\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    function calculateRewards(address _staker)\r\n        internal\r\n        view\r\n        returns (uint256 _rewards)\r\n    {\r\n        return (((\r\n            ((block.timestamp - stakers[_staker].timeOfLastUpdate) *\r\n                stakers[_staker].amountStaked)\r\n        ) * rewardsPerHour) / 3600);\r\n    }\r\n\r\n    function claimRewards() external {\r\n        uint256 rewards = calculateRewards(msg.sender) +\r\n            stakers[msg.sender].unclaimedRewards;\r\n        require(rewards > 0, \"You have no rewards to claim\");\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n        stakers[msg.sender].unclaimedRewards = 0;\r\n        rewardsToken.safeTransfer(msg.sender, rewards);\r\n    }\r\n\r\n    function getStakedTokens(address _user) public view returns (StakedToken[] memory) {\r\n        if (stakers[_user].amountStaked > 0) {\r\n            StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked);\r\n            uint256 _index = 0;\r\n\r\n            for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {\r\n                if (stakers[_user].stakedTokens[j].staker != (address(0))) {\r\n                    _stakedTokens[_index] = stakers[_user].stakedTokens[j];\r\n                    _index++;\r\n                }\r\n            }\r\n\r\n            return _stakedTokens;\r\n        } else {\r\n            return new StakedToken[](0);\r\n        }\r\n    }\r\n\r\n    function availableRewards(address _staker) public view returns (uint256) {\r\n        uint256 rewards = calculateRewards(_staker) +\r\n            stakers[_staker].unclaimedRewards;\r\n        return rewards;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 99999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"source/Farm.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":5159:12020  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":5159:12020  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122040676e2fdcd441580dce9fa955fd70da46ead383a329299c905165e8f12a80d664736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040676e2fdcd441580dce9fa955fd70da46ead383a329299c905165e8f12a80d664736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH8 0x6E2FDCD441580DCE SWAP16 0xA9 SSTORE REVERT PUSH17 0xDA46EAD383A329299C905165E8F12A80D6 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "5159:6861:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;5159:6861:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040676e2fdcd441580dce9fa955fd70da46ead383a329299c905165e8f12a80d664736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH8 0x6E2FDCD441580DCE SWAP16 0xA9 SSTORE REVERT PUSH17 0xDA46EAD383A329299C905165E8F12A80D6 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "5159:6861:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5159,
									"end": 12020,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040676e2fdcd441580dce9fa955fd70da46ead383a329299c905165e8f12a80d664736f6c634300080c0033",
									".code": [
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 12020,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Farm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftCollection",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardsPerHour",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_lockEnabled",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "adminWithdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "availableRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakedTokens",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "staker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stackeUtx",
											"type": "uint256"
										}
									],
									"internalType": "struct Farm.StakedToken[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftCollection",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsPerHour",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_lockEnabled",
									"type": "bool"
								}
							],
							"name": "setLockEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lockTime",
									"type": "uint256"
								}
							],
							"name": "setLockTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardsPerHour",
									"type": "uint256"
								}
							],
							"name": "setRewardsPerHour",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeOfLastUpdate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unclaimedRewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenStartStakeTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":28878:35184  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"source/Farm.sol\":29555:29561  100000 */\n  0x0186a0\n    /* \"source/Farm.sol\":29523:29561  uint256 public rewardsPerHour = 100000 */\n  0x05\n  sstore\n    /* \"source/Farm.sol\":29595:29596  3 */\n  0x03\n    /* \"source/Farm.sol\":29570:29596  uint256 public version = 3 */\n  0x06\n  sstore\n    /* \"source/Farm.sol\":29605:29636  bool public lockEnabled = false */\n  0x07\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  0x00\n    /* \"source/Farm.sol\":29654:29681  uint256 public lockTime = 0 */\n  0x08\n  sstore\n    /* \"source/Farm.sol\":30011:30495  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"source/Farm.sol\":17794:17795  1 */\n  0x01\n    /* \"source/Farm.sol\":17905:17912  _status */\n  0x00\n    /* \"source/Farm.sol\":17905:17927  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n    /* \"source/Farm.sol\":15323:15338  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"source/Farm.sol\":27132:27164  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"source/Farm.sol\":14778:14788  msg.sender */\n  caller\n    /* \"source/Farm.sol\":27132:27150  _transferOwnership */\n  tag_14\n    /* \"source/Farm.sol\":27132:27164  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"source/Farm.sol\":30224:30237  nftCollection */\n  0x03\n    /* \"source/Farm.sol\":30224:30263  nftCollection = IERC721(_nftCollection) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"source/Farm.sol\":30274:30294  nftCollectionAddress */\n  0x04\n    /* \"source/Farm.sol\":30274:30311  nftCollectionAddress = _nftCollection */\n  dup1\n  sload\n  dup3\n  and\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"source/Farm.sol\":30322:30334  rewardsToken */\n  0x02\n    /* \"source/Farm.sol\":30322:30350  rewardsToken = _rewardsToken */\n  dup1\n  sload\n  swap6\n  swap1\n  swap7\n  and\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap4\n  sstore\n    /* \"source/Farm.sol\":30361:30375  rewardsPerHour */\n  0x05\n    /* \"source/Farm.sol\":30361:30393  rewardsPerHour = _rewardsPerHour */\n  sstore\n    /* \"source/Farm.sol\":30404:30412  lockTime */\n  0x08\n    /* \"source/Farm.sol\":30404:30424  lockTime = _lockTime */\n  sstore\n    /* \"source/Farm.sol\":30451:30462  lockEnabled */\n  0x07\n    /* \"source/Farm.sol\":30451:30477  lockEnabled = _lockEnabled */\n  dup1\n  sload\n  swap2\n  iszero\n  iszero\n  not(0xff)\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"source/Farm.sol\":28878:35184  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n  jump(tag_20)\n    /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"source/Farm.sol\":28771:28777  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"source/Farm.sol\":28771:28777  _owner */\n  0x0100\n    /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"source/Farm.sol\":28771:28777  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"source/Farm.sol\":28752:28768  address oldOwner */\n  0x00\n  swap1\n    /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"source/Farm.sol\":28741:28869  {... */\n  pop\n    /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:145   */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":89:120   */\n  dup2\n  and\n    /* \"#utility.yul\":79:121   */\n  dup2\n  eq\n    /* \"#utility.yul\":69:139   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":132:133   */\n  dup1\n    /* \"#utility.yul\":125:137   */\n  revert\n    /* \"#utility.yul\":69:139   */\ntag_22:\n    /* \"#utility.yul\":14:145   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:835   */\ntag_3:\n    /* \"#utility.yul\":267:273   */\n  0x00\n    /* \"#utility.yul\":275:281   */\n  dup1\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":291:297   */\n  dup1\n    /* \"#utility.yul\":299:305   */\n  0x00\n    /* \"#utility.yul\":352:355   */\n  0xa0\n    /* \"#utility.yul\":340:349   */\n  dup7\n    /* \"#utility.yul\":331:338   */\n  dup9\n    /* \"#utility.yul\":327:350   */\n  sub\n    /* \"#utility.yul\":323:356   */\n  slt\n    /* \"#utility.yul\":320:373   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":320:373   */\ntag_24:\n    /* \"#utility.yul\":401:410   */\n  dup6\n    /* \"#utility.yul\":395:411   */\n  mload\n    /* \"#utility.yul\":420:451   */\n  tag_25\n    /* \"#utility.yul\":445:450   */\n  dup2\n    /* \"#utility.yul\":420:451   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":520:522   */\n  0x20\n    /* \"#utility.yul\":505:523   */\n  dup8\n  add\n    /* \"#utility.yul\":499:524   */\n  mload\n    /* \"#utility.yul\":470:475   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":533:566   */\n  tag_26\n    /* \"#utility.yul\":499:524   */\n  dup2\n    /* \"#utility.yul\":533:566   */\n  tag_19\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":632:634   */\n  0x40\n    /* \"#utility.yul\":617:635   */\n  dup8\n  add\n    /* \"#utility.yul\":611:636   */\n  mload\n    /* \"#utility.yul\":681:683   */\n  0x60\n    /* \"#utility.yul\":666:684   */\n  dup9\n  add\n    /* \"#utility.yul\":660:685   */\n  mload\n    /* \"#utility.yul\":585:592   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":611:636   */\n  swap4\n  pop\n    /* \"#utility.yul\":723:738   */\n  dup1\n  iszero\n    /* \"#utility.yul\":716:739   */\n  iszero\n    /* \"#utility.yul\":704:740   */\n  dup2\n  eq\n    /* \"#utility.yul\":694:758   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":754:755   */\n  0x00\n    /* \"#utility.yul\":751:752   */\n  dup1\n    /* \"#utility.yul\":744:756   */\n  revert\n    /* \"#utility.yul\":694:758   */\ntag_27:\n    /* \"#utility.yul\":777:784   */\n  dup1\n    /* \"#utility.yul\":767:784   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":824:827   */\n  0x80\n    /* \"#utility.yul\":813:822   */\n  dup7\n    /* \"#utility.yul\":809:828   */\n  add\n    /* \"#utility.yul\":803:829   */\n  mload\n    /* \"#utility.yul\":793:829   */\n  swap1\n  pop\n    /* \"#utility.yul\":150:835   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\ntag_20:\n    /* \"source/Farm.sol\":28878:35184  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":28878:35184  contract Farm is ReentrancyGuard, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xae04d45d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf854a27f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf995441b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0xae04d45d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb5a5e509\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x9168ae72\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x94067045\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8e7271fa\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x54fd4d50\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x6588103b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x6588103b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6aa4439f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x54fd4d50\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x63c28db1\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3166b848\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x0d668087\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x114cd3c8\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"source/Farm.sol\":29654:29681  uint256 public lockTime = 0 */\n    tag_3:\n      tag_32\n      sload(0x08)\n      dup2\n      jump\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"source/Farm.sol\":29654:29681  uint256 public lockTime = 0 */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"source/Farm.sol\":29938:29992  mapping(uint256 => uint256) public tokenStartStakeTime */\n    tag_4:\n      tag_32\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"source/Farm.sol\":32143:33572  function withdraw(uint256 _tokenId) external nonReentrant {... */\n    tag_5:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"source/Farm.sol\":29605:29636  bool public lockEnabled = false */\n    tag_6:\n      sload(0x07)\n      tag_44\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":546:560   */\n      swap1\n      iszero\n        /* \"#utility.yul\":539:561   */\n      iszero\n        /* \"#utility.yul\":521:562   */\n      dup2\n      mstore\n        /* \"#utility.yul\":509:511   */\n      0x20\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"source/Farm.sol\":29605:29636  bool public lockEnabled = false */\n      tag_34\n        /* \"#utility.yul\":381:568   */\n      jump\n        /* \"source/Farm.sol\":33888:34274  function claimRewards() external {... */\n    tag_7:\n      tag_41\n      tag_49\n      jump\t// in\n        /* \"source/Farm.sol\":29570:29596  uint256 public version = 3 */\n    tag_8:\n      tag_32\n      sload(0x06)\n      dup2\n      jump\n        /* \"source/Farm.sol\":15972:16058  function paused() public view virtual returns (bool) {... */\n    tag_9:\n        /* \"source/Farm.sol\":16043:16050  _paused */\n      and(0xff, sload(0x01))\n        /* \"source/Farm.sol\":15972:16058  function paused() public view virtual returns (bool) {... */\n      jump(tag_44)\n        /* \"source/Farm.sol\":34282:34962  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {... */\n    tag_10:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n        /* \"source/Farm.sol\":29393:29421  IERC721 public nftCollection */\n    tag_11:\n      sload(0x03)\n      tag_62\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":2080:2122   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2068:2123   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2050:2124   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2038:2040   */\n      0x20\n        /* \"#utility.yul\":2023:2041   */\n      add\n        /* \"source/Farm.sol\":29393:29421  IERC721 public nftCollection */\n      tag_34\n        /* \"#utility.yul\":1889:2130   */\n      jump\n        /* \"source/Farm.sol\":30514:30621  function setLockEnabled(bool _lockEnabled) external onlyOwner {... */\n    tag_12:\n      tag_41\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"source/Farm.sol\":28059:28162  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_41\n      tag_71\n      jump\t// in\n        /* \"source/Farm.sol\":27411:27498  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"source/Farm.sol\":27484:27490  _owner */\n      sload(0x01)\n      0x0100\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Farm.sol\":27411:27498  function owner() public view virtual returns (address) {... */\n      jump(tag_62)\n        /* \"source/Farm.sol\":29523:29561  uint256 public rewardsPerHour = 100000 */\n    tag_15:\n      tag_32\n      sload(0x05)\n      dup2\n      jump\n        /* \"source/Farm.sol\":29709:29750  mapping(address => Staker) public stakers */\n    tag_16:\n      tag_79\n      tag_80\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_80:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_79:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2937:2962   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":2993:2995   */\n      0x20\n        /* \"#utility.yul\":2978:2996   */\n      dup5\n      add\n        /* \"#utility.yul\":2971:3005   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3021:3039   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3014:3048   */\n      mstore\n        /* \"#utility.yul\":2925:2927   */\n      0x60\n        /* \"#utility.yul\":2910:2928   */\n      add\n        /* \"source/Farm.sol\":29709:29750  mapping(address => Staker) public stakers */\n      tag_34\n        /* \"#utility.yul\":2735:3054   */\n      jump\n        /* \"source/Farm.sol\":29836:29884  mapping(uint256 => address) public stakerAddress */\n    tag_17:\n      tag_62\n      tag_85\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_85:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"source/Farm.sol\":32019:32135  function stake(uint256 _tokenId) external nonReentrant whenNotPaused {... */\n    tag_18:\n      tag_41\n      tag_89\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"source/Farm.sol\":30638:30736  function setLockTime(uint256 _lockTime) external onlyOwner {... */\n    tag_19:\n      tag_41\n      tag_92\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"source/Farm.sol\":30742:30864  function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {... */\n    tag_20:\n      tag_41\n      tag_95\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"source/Farm.sol\":29360:29386  IERC20 public rewardsToken */\n    tag_21:\n      sload(0x02)\n      tag_62\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"source/Farm.sol\":28317:28518  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_41\n      tag_102\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"source/Farm.sol\":34970:35179  function availableRewards(address _staker) public view returns (uint256) {... */\n    tag_23:\n      tag_32\n      tag_105\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"source/Farm.sol\":31816:32011  function adminWithdrawRewards() external onlyOwner whenPaused {... */\n    tag_24:\n      tag_41\n      tag_109\n      jump\t// in\n        /* \"source/Farm.sol\":32143:33572  function withdraw(uint256 _tokenId) external nonReentrant {... */\n    tag_43:\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      tag_111\n        /* \"source/Farm.sol\":18356:18375  _nonReentrantBefore */\n      tag_112\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      jump\t// in\n    tag_111:\n        /* \"source/Farm.sol\":32242:32252  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32269:32270  0 */\n      0x00\n        /* \"source/Farm.sol\":32234:32253  stakers[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32234:32241  stakers */\n      0x09\n        /* \"source/Farm.sol\":32234:32253  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":32234:32266  stakers[msg.sender].amountStaked */\n      sload\n        /* \"source/Farm.sol\":32212:32323  require(... */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3506:3508   */\n      0x20\n        /* \"source/Farm.sol\":32212:32323  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3488:3509   */\n      mstore\n        /* \"#utility.yul\":3545:3547   */\n      0x19\n        /* \"#utility.yul\":3525:3543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3518:3548   */\n      mstore\n        /* \"#utility.yul\":3584:3611   */\n      0x596f752068617665206e6f20746f6b656e73207374616b656400000000000000\n        /* \"#utility.yul\":3564:3582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3557:3612   */\n      mstore\n        /* \"#utility.yul\":3629:3647   */\n      0x64\n      add\n        /* \"source/Farm.sol\":32212:32323  require(... */\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"source/Farm.sol\":32342:32365  stakerAddress[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32342:32355  stakerAddress */\n      0x0a\n        /* \"source/Farm.sol\":32342:32365  stakerAddress[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Farm.sol\":32342:32379  stakerAddress[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Farm.sol\":32342:32365  stakerAddress[_tokenId] */\n      and\n        /* \"source/Farm.sol\":32369:32379  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32342:32379  stakerAddress[_tokenId] == msg.sender */\n      eq\n        /* \"source/Farm.sol\":32334:32409  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3860:3862   */\n      0x20\n        /* \"source/Farm.sol\":32334:32409  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3842:3863   */\n      mstore\n        /* \"#utility.yul\":3899:3901   */\n      0x19\n        /* \"#utility.yul\":3879:3897   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3872:3902   */\n      mstore\n        /* \"#utility.yul\":3938:3965   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":3918:3936   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3911:3966   */\n      mstore\n        /* \"#utility.yul\":3983:4001   */\n      0x64\n      add\n        /* \"source/Farm.sol\":32334:32409  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      tag_115\n        /* \"#utility.yul\":3658:4007   */\n      jump\n        /* \"source/Farm.sol\":32334:32409  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n    tag_117:\n        /* \"source/Farm.sol\":32445:32456  lockEnabled */\n      and(0xff, sload(0x07))\n        /* \"source/Farm.sol\":32445:32522  lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp) */\n      dup1\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"source/Farm.sol\":32494:32502  lockTime */\n      sload(0x08)\n        /* \"source/Farm.sol\":32462:32491  tokenStartStakeTime[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32462:32481  tokenStartStakeTime */\n      0x0b\n        /* \"source/Farm.sol\":32462:32491  tokenStartStakeTime[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"source/Farm.sol\":32506:32521  block.timestamp */\n      timestamp\n      swap2\n        /* \"source/Farm.sol\":32462:32502  tokenStartStakeTime[_tokenId] + lockTime */\n      tag_121\n      swap2\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"source/Farm.sol\":32461:32521  (tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp */\n      lt\n        /* \"source/Farm.sol\":32445:32522  lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp) */\n    tag_120:\n        /* \"source/Farm.sol\":32444:32539  (lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp)) || !lockEnabled */\n      dup1\n      tag_123\n      jumpi\n      pop\n        /* \"source/Farm.sol\":32528:32539  lockEnabled */\n      and(0xff, sload(0x07))\n        /* \"source/Farm.sol\":32527:32539  !lockEnabled */\n      iszero\n        /* \"source/Farm.sol\":32444:32539  (lockEnabled && ((tokenStartStakeTime[_tokenId] + lockTime) < block.timestamp)) || !lockEnabled */\n    tag_123:\n        /* \"source/Farm.sol\":32422:32602  require(... */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4536:4538   */\n      0x20\n        /* \"source/Farm.sol\":32422:32602  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4518:4539   */\n      mstore\n        /* \"#utility.yul\":4575:4577   */\n      0x23\n        /* \"#utility.yul\":4555:4573   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4548:4578   */\n      mstore\n        /* \"#utility.yul\":4614:4648   */\n      0x546f6b656e206c6f636b2074696d6520686173206e6f74207965742065787069\n        /* \"#utility.yul\":4594:4612   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4587:4649   */\n      mstore\n        /* \"#utility.yul\":4685:4690   */\n      0x7265640000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4665:4683   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4658:4691   */\n      mstore\n        /* \"#utility.yul\":4708:4727   */\n      0x84\n      add\n        /* \"source/Farm.sol\":32422:32602  require(... */\n      tag_115\n        /* \"#utility.yul\":4334:4733   */\n      jump\n        /* \"source/Farm.sol\":32422:32602  require(... */\n    tag_124:\n        /* \"source/Farm.sol\":32714:32729  uint256 rewards */\n      0x00\n        /* \"source/Farm.sol\":32732:32760  calculateRewards(msg.sender) */\n      tag_127\n        /* \"source/Farm.sol\":32749:32759  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32732:32748  calculateRewards */\n      tag_128\n        /* \"source/Farm.sol\":32732:32760  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_127:\n        /* \"source/Farm.sol\":32779:32789  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32771:32790  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32771:32778  stakers */\n      0x09\n        /* \"source/Farm.sol\":32771:32790  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":32771:32807  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n        /* \"source/Farm.sol\":32771:32818  stakers[msg.sender].unclaimedRewards += rewards */\n      dup1\n      sload\n        /* \"source/Farm.sol\":32714:32760  uint256 rewards = calculateRewards(msg.sender) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"source/Farm.sol\":32771:32807  stakers[msg.sender].unclaimedRewards */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":32771:32790  stakers[msg.sender] */\n      swap1\n        /* \"source/Farm.sol\":32771:32818  stakers[msg.sender].unclaimedRewards += rewards */\n      tag_129\n      swap1\n        /* \"source/Farm.sol\":32714:32760  uint256 rewards = calculateRewards(msg.sender) */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":32771:32818  stakers[msg.sender].unclaimedRewards += rewards */\n      tag_122\n      jump\t// in\n    tag_129:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"source/Farm.sol\":32833:32846  uint256 index */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"source/Farm.sol\":32861:33214  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n    tag_130:\n        /* \"source/Farm.sol\":32893:32903  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32885:32904  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32885:32892  stakers */\n      0x09\n        /* \"source/Farm.sol\":32885:32904  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":32885:32917  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":32885:32924  stakers[msg.sender].stakedTokens.length */\n      sload\n        /* \"source/Farm.sol\":32881:32924  i < stakers[msg.sender].stakedTokens.length */\n      dup2\n      lt\n        /* \"source/Farm.sol\":32861:33214  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"source/Farm.sol\":32976:32986  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32968:32987  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":32968:32975  stakers */\n      0x09\n        /* \"source/Farm.sol\":32968:32987  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":32968:33000  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":32968:33003  stakers[msg.sender].stakedTokens[i] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33015:33023  _tokenId */\n      dup6\n      swap2\n        /* \"source/Farm.sol\":32968:33000  stakers[msg.sender].stakedTokens */\n      swap1\n        /* \"source/Farm.sol\":33001:33002  i */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":32968:33003  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"source/Farm.sol\":32968:33011  stakers[msg.sender].stakedTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"source/Farm.sol\":32968:33023  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId */\n      eq\n        /* \"source/Farm.sol\":32968:33119  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId ... */\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n        /* \"source/Farm.sol\":33071:33081  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33117:33118  0 */\n      0x00\n        /* \"source/Farm.sol\":33063:33082  stakers[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33063:33070  stakers */\n      0x09\n        /* \"source/Farm.sol\":33063:33082  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33063:33095  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":33063:33098  stakers[msg.sender].stakedTokens[i] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33096:33097  i */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":33063:33098  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      lt\n      tag_139\n      jumpi\n      tag_139\n      tag_135\n      jump\t// in\n    tag_139:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Farm.sol\":33063:33105  stakers[msg.sender].stakedTokens[i].staker */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Farm.sol\":33063:33119  stakers[msg.sender].stakedTokens[i].staker != address(0) */\n      eq\n      iszero\n        /* \"source/Farm.sol\":32968:33119  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId ... */\n    tag_137:\n        /* \"source/Farm.sol\":32946:33203  if (... */\n      iszero\n      tag_141\n      jumpi\n        /* \"source/Farm.sol\":33162:33163  i */\n      dup1\n        /* \"source/Farm.sol\":33154:33163  index = i */\n      swap2\n      pop\n        /* \"source/Farm.sol\":33182:33187  break */\n      jump(tag_131)\n        /* \"source/Farm.sol\":32946:33203  if (... */\n    tag_141:\n        /* \"source/Farm.sol\":32926:32929  i++ */\n      dup1\n      tag_142\n      dup2\n      tag_143\n      jump\t// in\n    tag_142:\n      swap2\n      pop\n      pop\n        /* \"source/Farm.sol\":32861:33214  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n      jump(tag_130)\n    tag_131:\n      pop\n        /* \"source/Farm.sol\":33236:33246  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33285:33286  0 */\n      0x00\n        /* \"source/Farm.sol\":33228:33247  stakers[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33228:33235  stakers */\n      0x09\n        /* \"source/Farm.sol\":33228:33247  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33228:33260  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":33228:33267  stakers[msg.sender].stakedTokens[index] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33261:33266  index */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":33228:33267  stakers[msg.sender].stakedTokens[index] */\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_135\n      jump\t// in\n    tag_145:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      0x03\n      swap3\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":33228:33287  stakers[msg.sender].stakedTokens[index].staker = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"source/Farm.sol\":33306:33316  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33298:33317  stakers[msg.sender] */\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33298:33305  stakers */\n      0x09\n        /* \"source/Farm.sol\":33298:33317  stakers[msg.sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33298:33332  stakers[msg.sender].amountStaked-- */\n      dup1\n      sload\n      swap2\n      tag_147\n      dup4\n      tag_148\n      jump\t// in\n    tag_147:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"source/Farm.sol\":33377:33378  0 */\n      0x00\n        /* \"source/Farm.sol\":33343:33366  stakerAddress[_tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33343:33356  stakerAddress */\n      0x0a\n        /* \"source/Farm.sol\":33343:33366  stakerAddress[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/Farm.sol\":33343:33379  stakerAddress[_tokenId] = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"source/Farm.sol\":33390:33409  tokenStartStakeTime */\n      0x0b\n        /* \"source/Farm.sol\":33390:33419  tokenStartStakeTime[_tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"source/Farm.sol\":33390:33423  tokenStartStakeTime[_tokenId] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/Farm.sol\":33436:33449  nftCollection */\n      sload(0x03)\n        /* \"source/Farm.sol\":33436:33499  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      swap1\n      mload\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33471:33475  this */\n      address\n        /* \"source/Farm.sol\":33436:33499  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5591:5625   */\n      mstore\n        /* \"source/Farm.sol\":33478:33488  msg.sender */\n      caller\n        /* \"#utility.yul\":5641:5659   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5634:5677   */\n      mstore\n        /* \"#utility.yul\":5693:5711   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5686:5720   */\n      dup6\n      swap1\n      mstore\n        /* \"source/Farm.sol\":33343:33379  stakerAddress[_tokenId] = address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Farm.sol\":33436:33449  nftCollection */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Farm.sol\":33436:33462  nftCollection.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5503:5521   */\n      0x64\n      add\n        /* \"source/Farm.sol\":33436:33499  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n        /* \"source/Farm.sol\":33518:33528  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33510:33529  stakers[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33510:33517  stakers */\n      0x09\n        /* \"source/Farm.sol\":33510:33529  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":33549:33564  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":33510:33546  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":33510:33564  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      sstore\n      pop\n        /* \"source/Farm.sol\":18400:18420  _nonReentrantAfter() */\n      tag_154\n      swap3\n      pop\n        /* \"source/Farm.sol\":18400:18418  _nonReentrantAfter */\n      tag_155\n      swap2\n      pop\n      pop\n        /* \"source/Farm.sol\":18400:18420  _nonReentrantAfter() */\n      jump\t// in\n    tag_154:\n        /* \"source/Farm.sol\":32143:33572  function withdraw(uint256 _tokenId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":33888:34274  function claimRewards() external {... */\n    tag_49:\n        /* \"source/Farm.sol\":34002:34012  msg.sender */\n      caller\n        /* \"source/Farm.sol\":33932:33947  uint256 rewards */\n      0x00\n        /* \"source/Farm.sol\":33994:34013  stakers[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33994:34001  stakers */\n      0x09\n        /* \"source/Farm.sol\":33994:34013  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33994:34030  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"source/Farm.sol\":33932:33947  uint256 rewards */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":33950:33978  calculateRewards(msg.sender) */\n      tag_157\n      swap1\n        /* \"source/Farm.sol\":33950:33966  calculateRewards */\n      tag_128\n        /* \"source/Farm.sol\":33950:33978  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_157:\n        /* \"source/Farm.sol\":33950:34030  calculateRewards(msg.sender) +... */\n      tag_158\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_158:\n        /* \"source/Farm.sol\":33932:34030  uint256 rewards = calculateRewards(msg.sender) +... */\n      swap1\n      pop\n        /* \"source/Farm.sol\":34059:34060  0 */\n      0x00\n        /* \"source/Farm.sol\":34049:34056  rewards */\n      dup2\n        /* \"source/Farm.sol\":34049:34060  rewards > 0 */\n      gt\n        /* \"source/Farm.sol\":34041:34093  require(rewards > 0, \"You have no rewards to claim\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5933:5935   */\n      0x20\n        /* \"source/Farm.sol\":34041:34093  require(rewards > 0, \"You have no rewards to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5915:5936   */\n      mstore\n        /* \"#utility.yul\":5972:5974   */\n      0x1c\n        /* \"#utility.yul\":5952:5970   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5945:5975   */\n      mstore\n        /* \"#utility.yul\":6011:6041   */\n      0x596f752068617665206e6f207265776172647320746f20636c61696d00000000\n        /* \"#utility.yul\":5991:6009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5984:6042   */\n      mstore\n        /* \"#utility.yul\":6059:6077   */\n      0x64\n      add\n        /* \"source/Farm.sol\":34041:34093  require(rewards > 0, \"You have no rewards to claim\") */\n      tag_115\n        /* \"#utility.yul\":5731:6083   */\n      jump\n        /* \"source/Farm.sol\":34041:34093  require(rewards > 0, \"You have no rewards to claim\") */\n    tag_159:\n        /* \"source/Farm.sol\":34112:34122  msg.sender */\n      caller\n        /* \"source/Farm.sol\":34104:34123  stakers[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34104:34111  stakers */\n      0x09\n        /* \"source/Farm.sol\":34104:34123  stakers[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":34143:34158  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":34104:34140  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      dup1\n      dup4\n      add\n        /* \"source/Farm.sol\":34104:34158  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/Farm.sol\":34169:34205  stakers[msg.sender].unclaimedRewards */\n      0x03\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":34169:34209  stakers[msg.sender].unclaimedRewards = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"source/Farm.sol\":34220:34232  rewardsToken */\n      sload\n        /* \"source/Farm.sol\":34220:34266  rewardsToken.safeTransfer(msg.sender, rewards) */\n      tag_154\n      swap2\n        /* \"source/Farm.sol\":34104:34123  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Farm.sol\":34220:34232  rewardsToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Farm.sol\":34258:34265  rewards */\n      dup4\n        /* \"source/Farm.sol\":34220:34245  rewardsToken.safeTransfer */\n      tag_163\n        /* \"source/Farm.sol\":34220:34266  rewardsToken.safeTransfer(msg.sender, rewards) */\n      jump\t// in\n        /* \"source/Farm.sol\":34282:34962  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {... */\n    tag_59:\n        /* \"source/Farm.sol\":34380:34394  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/Farm.sol\":34410:34411  0 */\n      0x00\n        /* \"source/Farm.sol\":34380:34394  stakers[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34380:34387  stakers */\n      0x09\n        /* \"source/Farm.sol\":34380:34394  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":34380:34407  stakers[_user].amountStaked */\n      sload\n        /* \"source/Farm.sol\":34343:34363  StakedToken[] memory */\n      0x60\n      swap1\n        /* \"source/Farm.sol\":34380:34411  stakers[_user].amountStaked > 0 */\n      iszero\n        /* \"source/Farm.sol\":34376:34955  if (stakers[_user].amountStaked > 0) {... */\n      tag_166\n      jumpi\n        /* \"source/Farm.sol\":34483:34497  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"source/Farm.sol\":34428:34462  StakedToken[] memory _stakedTokens */\n      0x00\n        /* \"source/Farm.sol\":34483:34497  stakers[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34483:34490  stakers */\n      0x09\n        /* \"source/Farm.sol\":34483:34497  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":34483:34510  stakers[_user].amountStaked */\n      sload\n        /* \"source/Farm.sol\":34465:34511  new StakedToken[](stakers[_user].amountStaked) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_168\n      jumpi\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup2\n      0x20\n      add\n    tag_171:\n      tag_172\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_172:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_171\n      jumpi\n      swap1\n      pop\n    tag_170:\n      pop\n        /* \"source/Farm.sol\":34428:34511  StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked) */\n      swap1\n      pop\n        /* \"source/Farm.sol\":34526:34540  uint256 _index */\n      0x00\n        /* \"source/Farm.sol\":34566:34575  uint256 j */\n      dup1\n        /* \"source/Farm.sol\":34561:34847  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n    tag_174:\n        /* \"source/Farm.sol\":34585:34599  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34585:34592  stakers */\n      0x09\n        /* \"source/Farm.sol\":34585:34599  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":34585:34612  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":34585:34619  stakers[_user].stakedTokens.length */\n      sload\n        /* \"source/Farm.sol\":34581:34619  j < stakers[_user].stakedTokens.length */\n      dup2\n      lt\n        /* \"source/Farm.sol\":34561:34847  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"source/Farm.sol\":34649:34702  stakers[_user].stakedTokens[j].staker != (address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Farm.sol\":34649:34663  stakers[_user] */\n      dup6\n      and\n        /* \"source/Farm.sol\":34699:34700  0 */\n      0x00\n        /* \"source/Farm.sol\":34649:34663  stakers[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34649:34656  stakers */\n      0x09\n        /* \"source/Farm.sol\":34649:34663  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":34649:34676  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":34649:34679  stakers[_user].stakedTokens[j] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":34677:34678  j */\n      dup4\n      swap1\n        /* \"source/Farm.sol\":34649:34679  stakers[_user].stakedTokens[j] */\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_135\n      jump\t// in\n    tag_178:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n        /* \"source/Farm.sol\":34649:34686  stakers[_user].stakedTokens[j].staker */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Farm.sol\":34649:34702  stakers[_user].stakedTokens[j].staker != (address(0)) */\n      eq\n        /* \"source/Farm.sol\":34645:34832  if (stakers[_user].stakedTokens[j].staker != (address(0))) {... */\n      tag_180\n      jumpi\n        /* \"source/Farm.sol\":34751:34765  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":34751:34758  stakers */\n      0x09\n        /* \"source/Farm.sol\":34751:34765  stakers[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":34751:34778  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"source/Farm.sol\":34751:34781  stakers[_user].stakedTokens[j] */\n      dup1\n      sload\n        /* \"source/Farm.sol\":34779:34780  j */\n      dup3\n      swap1\n        /* \"source/Farm.sol\":34751:34781  stakers[_user].stakedTokens[j] */\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_135\n      jump\t// in\n    tag_182:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":34727:34781  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"source/Farm.sol\":34751:34781  stakers[_user].stakedTokens[j] */\n      0x03\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":34727:34781  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"source/Farm.sol\":34727:34748  _stakedTokens[_index] */\n      dup4\n      mload\n        /* \"source/Farm.sol\":34727:34740  _stakedTokens */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":34741:34747  _index */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":34727:34748  _stakedTokens[_index] */\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_135\n      jump\t// in\n    tag_185:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"source/Farm.sol\":34727:34781  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"source/Farm.sol\":34804:34812  _index++ */\n      dup2\n      dup1\n      tag_186\n      swap1\n      tag_143\n      jump\t// in\n    tag_186:\n      swap3\n      pop\n      pop\n        /* \"source/Farm.sol\":34645:34832  if (stakers[_user].stakedTokens[j].staker != (address(0))) {... */\n    tag_180:\n        /* \"source/Farm.sol\":34621:34624  j++ */\n      dup1\n      tag_187\n      dup2\n      tag_143\n      jump\t// in\n    tag_187:\n      swap2\n      pop\n      pop\n        /* \"source/Farm.sol\":34561:34847  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n      jump(tag_174)\n    tag_175:\n      pop\n        /* \"source/Farm.sol\":34870:34883  _stakedTokens */\n      swap1\n      swap4\n        /* \"source/Farm.sol\":34282:34962  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":34376:34955  if (stakers[_user].amountStaked > 0) {... */\n    tag_166:\n        /* \"source/Farm.sol\":34923:34943  new StakedToken[](0) */\n      0x40\n      dup1\n      mload\n        /* \"source/Farm.sol\":34941:34942  0 */\n      0x00\n        /* \"source/Farm.sol\":34923:34943  new StakedToken[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      swap1\n      jump(tag_191)\n    tag_192:\n      tag_193\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_193:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_192\n      jumpi\n      swap1\n      pop\n    tag_191:\n      pop\n        /* \"source/Farm.sol\":34916:34943  return new StakedToken[](0) */\n      swap3\n        /* \"source/Farm.sol\":34282:34962  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":30514:30621  function setLockEnabled(bool _lockEnabled) external onlyOwner {... */\n    tag_69:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_195\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_196\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"source/Farm.sol\":30587:30598  lockEnabled */\n      0x07\n        /* \"source/Farm.sol\":30587:30613  lockEnabled = _lockEnabled */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"source/Farm.sol\":30514:30621  function setLockEnabled(bool _lockEnabled) external onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":28059:28162  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_199\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_196\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"source/Farm.sol\":28124:28154  _transferOwnership(address(0)) */\n      tag_201\n        /* \"source/Farm.sol\":28151:28152  0 */\n      0x00\n        /* \"source/Farm.sol\":28124:28142  _transferOwnership */\n      tag_202\n        /* \"source/Farm.sol\":28124:28154  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_201:\n        /* \"source/Farm.sol\":28059:28162  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":32019:32135  function stake(uint256 _tokenId) external nonReentrant whenNotPaused {... */\n    tag_90:\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      tag_205\n        /* \"source/Farm.sol\":18356:18375  _nonReentrantBefore */\n      tag_112\n        /* \"source/Farm.sol\":18356:18377  _nonReentrantBefore() */\n      jump\t// in\n    tag_205:\n        /* \"source/Farm.sol\":15577:15596  _requireNotPaused() */\n      tag_207\n        /* \"source/Farm.sol\":15577:15594  _requireNotPaused */\n      tag_208\n        /* \"source/Farm.sol\":15577:15596  _requireNotPaused() */\n      jump\t// in\n    tag_207:\n        /* \"source/Farm.sol\":32099:32127  _stake(msg.sender, _tokenId) */\n      tag_210\n        /* \"source/Farm.sol\":32106:32116  msg.sender */\n      caller\n        /* \"source/Farm.sol\":32118:32126  _tokenId */\n      dup3\n        /* \"source/Farm.sol\":32099:32105  _stake */\n      tag_211\n        /* \"source/Farm.sol\":32099:32127  _stake(msg.sender, _tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"source/Farm.sol\":18400:18420  _nonReentrantAfter() */\n      tag_154\n        /* \"source/Farm.sol\":17794:17795  1 */\n      0x01\n        /* \"source/Farm.sol\":18916:18923  _status */\n      0x00\n        /* \"source/Farm.sol\":18916:18938  _status = _NOT_ENTERED */\n      sstore\n        /* \"source/Farm.sol\":18733:18946  function _nonReentrantAfter() private {... */\n      jump\n        /* \"source/Farm.sol\":30638:30736  function setLockTime(uint256 _lockTime) external onlyOwner {... */\n    tag_93:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_214\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_196\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_214:\n        /* \"source/Farm.sol\":30708:30716  lockTime */\n      0x08\n        /* \"source/Farm.sol\":30708:30728  lockTime = _lockTime */\n      sstore\n        /* \"source/Farm.sol\":30638:30736  function setLockTime(uint256 _lockTime) external onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":30742:30864  function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {... */\n    tag_96:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_217\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_196\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"source/Farm.sol\":30824:30838  rewardsPerHour */\n      0x05\n        /* \"source/Farm.sol\":30824:30856  rewardsPerHour = _rewardsPerHour */\n      sstore\n        /* \"source/Farm.sol\":30742:30864  function setRewardsPerHour(uint256 _rewardsPerHour) external onlyOwner {... */\n      jump\t// out\n        /* \"source/Farm.sol\":28317:28518  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_220\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_196\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"source/Farm.sol\":28406:28428  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6479:6481   */\n      0x20\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6461:6482   */\n      mstore\n        /* \"#utility.yul\":6518:6520   */\n      0x26\n        /* \"#utility.yul\":6498:6516   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6491:6521   */\n      mstore\n        /* \"#utility.yul\":6557:6591   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6537:6555   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6530:6592   */\n      mstore\n        /* \"#utility.yul\":6628:6636   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6608:6626   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6601:6637   */\n      mstore\n        /* \"#utility.yul\":6654:6673   */\n      0x84\n      add\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_115\n        /* \"#utility.yul\":6277:6679   */\n      jump\n        /* \"source/Farm.sol\":28398:28471  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_222:\n        /* \"source/Farm.sol\":28482:28510  _transferOwnership(newOwner) */\n      tag_154\n        /* \"source/Farm.sol\":28501:28509  newOwner */\n      dup2\n        /* \"source/Farm.sol\":28482:28500  _transferOwnership */\n      tag_202\n        /* \"source/Farm.sol\":28482:28510  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"source/Farm.sol\":34970:35179  function availableRewards(address _staker) public view returns (uint256) {... */\n    tag_106:\n        /* \"source/Farm.sol\":35113:35129  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"source/Farm.sol\":35034:35041  uint256 */\n      0x00\n        /* \"source/Farm.sol\":35113:35129  stakers[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":35113:35120  stakers */\n      0x09\n        /* \"source/Farm.sol\":35113:35129  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":35113:35146  stakers[_staker].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"source/Farm.sol\":35034:35041  uint256 */\n      dup2\n      swap1\n        /* \"source/Farm.sol\":35072:35097  calculateRewards(_staker) */\n      tag_227\n        /* \"source/Farm.sol\":35121:35128  _staker */\n      dup5\n        /* \"source/Farm.sol\":35072:35088  calculateRewards */\n      tag_128\n        /* \"source/Farm.sol\":35072:35097  calculateRewards(_staker) */\n      jump\t// in\n    tag_227:\n        /* \"source/Farm.sol\":35072:35146  calculateRewards(_staker) +... */\n      tag_228\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_228:\n        /* \"source/Farm.sol\":35054:35146  uint256 rewards = calculateRewards(_staker) +... */\n      swap4\n        /* \"source/Farm.sol\":34970:35179  function availableRewards(address _staker) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":31816:32011  function adminWithdrawRewards() external onlyOwner whenPaused {... */\n    tag_109:\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      tag_230\n        /* \"source/Farm.sol\":27297:27308  _checkOwner */\n      tag_196\n        /* \"source/Farm.sol\":27297:27310  _checkOwner() */\n      jump\t// in\n    tag_230:\n        /* \"source/Farm.sol\":15836:15852  _requirePaused() */\n      tag_232\n        /* \"source/Farm.sol\":15836:15850  _requirePaused */\n      tag_233\n        /* \"source/Farm.sol\":15836:15852  _requirePaused() */\n      jump\t// in\n    tag_232:\n        /* \"source/Farm.sol\":31908:31920  rewardsToken */\n      sload(0x02)\n        /* \"source/Farm.sol\":31908:31945  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31939:31943  this */\n      address\n        /* \"source/Farm.sol\":31908:31945  rewardsToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2050:2124   */\n      mstore\n        /* \"source/Farm.sol\":31889:31905  uint256 _balance */\n      0x00\n      swap2\n        /* \"source/Farm.sol\":31908:31920  rewardsToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"source/Farm.sol\":31908:31930  rewardsToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2023:2041   */\n      0x24\n      add\n        /* \"source/Farm.sol\":31908:31945  rewardsToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"source/Farm.sol\":31956:31968  rewardsToken */\n      sload(0x02)\n        /* \"source/Farm.sol\":31889:31945  uint256 _balance = rewardsToken.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"source/Farm.sol\":31956:32003  rewardsToken.safeTransfer(msg.sender, _balance) */\n      tag_154\n      swap1\n        /* \"source/Farm.sol\":31956:31968  rewardsToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Farm.sol\":31982:31992  msg.sender */\n      caller\n        /* \"source/Farm.sol\":31889:31945  uint256 _balance = rewardsToken.balanceOf(address(this)) */\n      dup4\n        /* \"source/Farm.sol\":31956:31981  rewardsToken.safeTransfer */\n      tag_163\n        /* \"source/Farm.sol\":31956:32003  rewardsToken.safeTransfer(msg.sender, _balance) */\n      jump\t// in\n        /* \"source/Farm.sol\":18436:18725  function _nonReentrantBefore() private {... */\n    tag_112:\n        /* \"source/Farm.sol\":17838:17839  2 */\n      0x02\n        /* \"source/Farm.sol\":18566:18573  _status */\n      sload(0x00)\n        /* \"source/Farm.sol\":18566:18585  _status != _ENTERED */\n      eq\n      iszero\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7075:7077   */\n      0x20\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7057:7078   */\n      mstore\n        /* \"#utility.yul\":7114:7116   */\n      0x1f\n        /* \"#utility.yul\":7094:7112   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7087:7117   */\n      mstore\n        /* \"#utility.yul\":7153:7186   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7133:7151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7126:7187   */\n      mstore\n        /* \"#utility.yul\":7204:7222   */\n      0x64\n      add\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_115\n        /* \"#utility.yul\":6873:7228   */\n      jump\n        /* \"source/Farm.sol\":18558:18621  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_242:\n        /* \"source/Farm.sol\":17838:17839  2 */\n      0x02\n        /* \"source/Farm.sol\":18699:18706  _status */\n      0x00\n        /* \"source/Farm.sol\":18699:18717  _status = _ENTERED */\n      sstore\n        /* \"source/Farm.sol\":18436:18725  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"source/Farm.sol\":33580:33880  function calculateRewards(address _staker)... */\n    tag_128:\n        /* \"source/Farm.sol\":33849:33863  rewardsPerHour */\n      sload(0x05)\n        /* \"source/Farm.sol\":33805:33821  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"source/Farm.sol\":33673:33689  uint256 _rewards */\n      0x00\n        /* \"source/Farm.sol\":33805:33821  stakers[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":33805:33812  stakers */\n      0x09\n        /* \"source/Farm.sol\":33805:33821  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":33805:33834  stakers[_staker].amountStaked */\n      dup1\n      sload\n        /* \"source/Farm.sol\":33751:33784  stakers[_staker].timeOfLastUpdate */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n        /* \"source/Farm.sol\":33673:33689  uint256 _rewards */\n      swap2\n      swap3\n        /* \"source/Farm.sol\":33867:33871  3600 */\n      0x0e10\n      swap3\n        /* \"source/Farm.sol\":33849:33863  rewardsPerHour */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":33805:33834  stakers[_staker].amountStaked */\n      swap1\n        /* \"source/Farm.sol\":33733:33784  block.timestamp - stakers[_staker].timeOfLastUpdate */\n      tag_246\n      swap1\n        /* \"source/Farm.sol\":33733:33748  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":33733:33784  block.timestamp - stakers[_staker].timeOfLastUpdate */\n      tag_247\n      jump\t// in\n    tag_246:\n        /* \"source/Farm.sol\":33732:33834  (block.timestamp - stakers[_staker].timeOfLastUpdate) *... */\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"source/Farm.sol\":33716:33863  (... */\n      tag_250\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_250:\n        /* \"source/Farm.sol\":33715:33871  ((... */\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"source/Farm.sol\":33707:33872  return (((... */\n      swap3\n        /* \"source/Farm.sol\":33580:33880  function calculateRewards(address _staker)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":18733:18946  function _nonReentrantAfter() private {... */\n    tag_155:\n        /* \"source/Farm.sol\":17794:17795  1 */\n      0x01\n        /* \"source/Farm.sol\":18916:18923  _status */\n      0x00\n        /* \"source/Farm.sol\":18916:18938  _status = _NOT_ENTERED */\n      sstore\n        /* \"source/Farm.sol\":18733:18946  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"source/Farm.sol\":23768:23945  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_163:\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8079:8121   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8067:8122   */\n      dup5\n      and\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8049:8123   */\n      mstore\n        /* \"#utility.yul\":8139:8157   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8132:8166   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":8022:8040   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Farm.sol\":23901:23924  token.transfer.selector */\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n        /* \"source/Farm.sol\":23878:23936  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      or\n      swap1\n      mstore\n        /* \"source/Farm.sol\":23851:23937  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_255\n      swap1\n        /* \"source/Farm.sol\":23871:23876  token */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":23851:23870  _callOptionalReturn */\n      tag_258\n        /* \"source/Farm.sol\":23851:23937  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_255:\n        /* \"source/Farm.sol\":23768:23945  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":27576:27708  function _checkOwner() internal view virtual {... */\n    tag_196:\n        /* \"source/Farm.sol\":27484:27490  _owner */\n      sload(0x01)\n        /* \"source/Farm.sol\":27640:27663  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Farm.sol\":27484:27490  _owner */\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"source/Farm.sol\":14778:14788  msg.sender */\n      caller\n        /* \"source/Farm.sol\":27640:27663  owner() == _msgSender() */\n      eq\n        /* \"source/Farm.sol\":27632:27700  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8379:8381   */\n      0x20\n        /* \"source/Farm.sol\":27632:27700  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8361:8382   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8398:8416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8391:8421   */\n      mstore\n        /* \"#utility.yul\":8457:8491   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8437:8455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8430:8492   */\n      mstore\n        /* \"#utility.yul\":8509:8527   */\n      0x64\n      add\n        /* \"source/Farm.sol\":27632:27700  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_115\n        /* \"#utility.yul\":8177:8533   */\n      jump\n        /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_202:\n        /* \"source/Farm.sol\":28771:28777  _owner */\n      0x01\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"source/Farm.sol\":28771:28777  _owner */\n      0x0100\n        /* \"source/Farm.sol\":28788:28805  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      0xffffffffffffffffffffff0000000000000000000000000000000000000000ff\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"source/Farm.sol\":28771:28777  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"source/Farm.sol\":28752:28768  address oldOwner */\n      0x00\n      swap1\n        /* \"source/Farm.sol\":28821:28861  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"source/Farm.sol\":28741:28869  {... */\n      pop\n        /* \"source/Farm.sol\":28678:28869  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":16131:16239  function _requireNotPaused() internal view virtual {... */\n    tag_208:\n        /* \"source/Farm.sol\":16043:16050  _paused */\n      and(0xff, sload(0x01))\n        /* \"source/Farm.sol\":16201:16210  !paused() */\n      iszero\n        /* \"source/Farm.sol\":16193:16231  require(!paused(), \"Pausable: paused\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8740:8742   */\n      0x20\n        /* \"source/Farm.sol\":16193:16231  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8722:8743   */\n      mstore\n        /* \"#utility.yul\":8779:8781   */\n      0x10\n        /* \"#utility.yul\":8759:8777   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8752:8782   */\n      mstore\n        /* \"#utility.yul\":8818:8836   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":8798:8816   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8791:8837   */\n      mstore\n        /* \"#utility.yul\":8854:8872   */\n      0x64\n      add\n        /* \"source/Farm.sol\":16193:16231  require(!paused(), \"Pausable: paused\") */\n      tag_115\n        /* \"#utility.yul\":8538:8878   */\n      jump\n        /* \"source/Farm.sol\":30872:31808  function _stake(address _staker, uint256 _tokenId) internal {... */\n    tag_211:\n        /* \"source/Farm.sol\":30965:30978  nftCollection */\n      sload(0x03)\n        /* \"source/Farm.sol\":30965:30996  nftCollection.ownerOf(_tokenId) */\n      mload(0x40)\n      0x6352211e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"source/Farm.sol\":30965:31007  nftCollection.ownerOf(_tokenId) == _staker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      dup2\n      and\n      swap3\n        /* \"source/Farm.sol\":30965:30978  nftCollection */\n      and\n      swap1\n        /* \"source/Farm.sol\":30965:30986  nftCollection.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"source/Farm.sol\":30965:30996  nftCollection.ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"source/Farm.sol\":30965:31007  nftCollection.ownerOf(_tokenId) == _staker */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"source/Farm.sol\":30943:31060  require(... */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":3860:3862   */\n      0x20\n        /* \"source/Farm.sol\":30943:31060  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3842:3863   */\n      mstore\n        /* \"#utility.yul\":3899:3901   */\n      0x19\n        /* \"#utility.yul\":3879:3897   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3872:3902   */\n      mstore\n        /* \"#utility.yul\":3938:3965   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":3918:3936   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3911:3966   */\n      mstore\n        /* \"#utility.yul\":3983:4001   */\n      0x64\n      add\n        /* \"source/Farm.sol\":30943:31060  require(... */\n      tag_115\n        /* \"#utility.yul\":3658:4007   */\n      jump\n        /* \"source/Farm.sol\":30943:31060  require(... */\n    tag_278:\n        /* \"source/Farm.sol\":31077:31093  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"source/Farm.sol\":31109:31110  0 */\n      0x00\n        /* \"source/Farm.sol\":31077:31093  stakers[_staker] */\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31077:31084  stakers */\n      0x09\n        /* \"source/Farm.sol\":31077:31093  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":31077:31106  stakers[_staker].amountStaked */\n      sload\n        /* \"source/Farm.sol\":31077:31110  stakers[_staker].amountStaked > 0 */\n      iszero\n        /* \"source/Farm.sol\":31073:31241  if (stakers[_staker].amountStaked > 0) {... */\n      tag_280\n      jumpi\n        /* \"source/Farm.sol\":31127:31142  uint256 rewards */\n      0x00\n        /* \"source/Farm.sol\":31145:31170  calculateRewards(_staker) */\n      tag_281\n        /* \"source/Farm.sol\":31162:31169  _staker */\n      dup4\n        /* \"source/Farm.sol\":31145:31161  calculateRewards */\n      tag_128\n        /* \"source/Farm.sol\":31145:31170  calculateRewards(_staker) */\n      jump\t// in\n    tag_281:\n        /* \"source/Farm.sol\":31185:31201  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31185:31192  stakers */\n      0x09\n        /* \"source/Farm.sol\":31185:31201  stakers[_staker] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"source/Farm.sol\":31185:31218  stakers[_staker].unclaimedRewards */\n      0x03\n      add\n        /* \"source/Farm.sol\":31185:31229  stakers[_staker].unclaimedRewards += rewards */\n      dup1\n      sload\n        /* \"source/Farm.sol\":31127:31170  uint256 rewards = calculateRewards(_staker) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"source/Farm.sol\":31185:31218  stakers[_staker].unclaimedRewards */\n      swap1\n      swap2\n        /* \"source/Farm.sol\":31185:31201  stakers[_staker] */\n      swap1\n        /* \"source/Farm.sol\":31185:31229  stakers[_staker].unclaimedRewards += rewards */\n      tag_282\n      swap1\n        /* \"source/Farm.sol\":31127:31170  uint256 rewards = calculateRewards(_staker) */\n      dup5\n      swap1\n        /* \"source/Farm.sol\":31185:31229  stakers[_staker].unclaimedRewards += rewards */\n      tag_122\n      jump\t// in\n    tag_282:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"source/Farm.sol\":31073:31241  if (stakers[_staker].amountStaked > 0) {... */\n    tag_280:\n        /* \"source/Farm.sol\":31253:31266  nftCollection */\n      sload(0x03)\n        /* \"source/Farm.sol\":31253:31313  nftCollection.transferFrom(_staker, address(this), _tokenId) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31253:31266  nftCollection */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5609:5624   */\n      dup5\n      dup2\n      and\n        /* \"source/Farm.sol\":31253:31313  nftCollection.transferFrom(_staker, address(this), _tokenId) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5591:5625   */\n      mstore\n        /* \"source/Farm.sol\":31297:31301  this */\n      address\n        /* \"#utility.yul\":5641:5659   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5634:5677   */\n      mstore\n        /* \"#utility.yul\":5693:5711   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5686:5720   */\n      dup5\n      swap1\n      mstore\n        /* \"source/Farm.sol\":31253:31266  nftCollection */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"source/Farm.sol\":31253:31279  nftCollection.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5503:5521   */\n      0x64\n      add\n        /* \"source/Farm.sol\":31253:31313  nftCollection.transferFrom(_staker, address(this), _tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n        /* \"source/Farm.sol\":31359:31523  StakedToken(... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup9\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31490:31505  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":31359:31523  StakedToken(... */\n      dup6\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      0x00\n        /* \"source/Farm.sol\":31534:31550  stakers[_staker] */\n      dup5\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31534:31541  stakers */\n      0x09\n        /* \"source/Farm.sol\":31534:31550  stakers[_staker] */\n      dup5\n      mstore\n      swap7\n      dup8\n      keccak256\n        /* \"source/Farm.sol\":31534:31563  stakers[_staker].stakedTokens */\n      0x01\n      dup1\n      dup3\n      add\n        /* \"source/Farm.sol\":31534:31581  stakers[_staker].stakedTokens.push(stakedToken) */\n      dup1\n      sload\n      dup1\n      dup4\n      add\n      dup3\n      sstore\n      swap1\n      dup11\n      mstore\n      swap5\n      dup10\n      keccak256\n      dup9\n      mload\n      0x03\n      swap1\n      swap7\n      mul\n      add\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap6\n      swap1\n      swap8\n      and\n      swap5\n      swap1\n      swap5\n      or\n      dup7\n      sstore\n      swap2\n      mload\n      swap3\n      dup6\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      swap1\n      mload\n      0x02\n      swap1\n      swap4\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"source/Farm.sol\":31592:31608  stakers[_staker] */\n      dup4\n      mstore\n        /* \"source/Farm.sol\":31592:31623  stakers[_staker].amountStaked++ */\n      dup1\n      sload\n        /* \"source/Farm.sol\":31359:31523  StakedToken(... */\n      swap2\n      swap5\n      pop\n        /* \"source/Farm.sol\":31592:31623  stakers[_staker].amountStaked++ */\n      swap1\n      swap3\n      pop\n        /* \"source/Farm.sol\":31534:31550  stakers[_staker] */\n      swap1\n        /* \"source/Farm.sol\":31592:31623  stakers[_staker].amountStaked++ */\n      tag_288\n      dup4\n      tag_143\n      jump\t// in\n    tag_288:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"source/Farm.sol\":31634:31657  stakerAddress[_tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"source/Farm.sol\":31634:31647  stakerAddress */\n      0x0a\n        /* \"source/Farm.sol\":31634:31657  stakerAddress[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"source/Farm.sol\":31634:31667  stakerAddress[_tokenId] = _staker */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap6\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap1\n      swap6\n      and\n      dup6\n      or\n      swap1\n      sstore\n        /* \"source/Farm.sol\":31678:31697  tokenStartStakeTime */\n      0x0b\n        /* \"source/Farm.sol\":31678:31707  tokenStartStakeTime[_tokenId] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"source/Farm.sol\":31710:31725  block.timestamp */\n      timestamp\n        /* \"source/Farm.sol\":31678:31725  tokenStartStakeTime[_tokenId] = block.timestamp */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"source/Farm.sol\":31749:31765  stakers[_staker] */\n      swap4\n      dup4\n      mstore\n        /* \"source/Farm.sol\":31749:31756  stakers */\n      0x09\n        /* \"source/Farm.sol\":31749:31765  stakers[_staker] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"source/Farm.sol\":31749:31782  stakers[_staker].timeOfLastUpdate */\n      0x02\n      add\n        /* \"source/Farm.sol\":31749:31800  stakers[_staker].timeOfLastUpdate = block.timestamp */\n      sstore\n        /* \"source/Farm.sol\":30872:31808  function _stake(address _staker, uint256 _tokenId) internal {... */\n      jump\t// out\n        /* \"source/Farm.sol\":16316:16424  function _requirePaused() internal view virtual {... */\n    tag_233:\n        /* \"source/Farm.sol\":16043:16050  _paused */\n      and(0xff, sload(0x01))\n        /* \"source/Farm.sol\":16375:16416  require(paused(), \"Pausable: not paused\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9341:9343   */\n      0x20\n        /* \"source/Farm.sol\":16375:16416  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9323:9344   */\n      mstore\n        /* \"#utility.yul\":9380:9382   */\n      0x14\n        /* \"#utility.yul\":9360:9378   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9353:9383   */\n      mstore\n        /* \"#utility.yul\":9419:9441   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":9399:9417   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9392:9442   */\n      mstore\n        /* \"#utility.yul\":9459:9477   */\n      0x64\n      add\n        /* \"source/Farm.sol\":16375:16416  require(paused(), \"Pausable: not paused\") */\n      tag_115\n        /* \"#utility.yul\":9139:9483   */\n      jump\n        /* \"source/Farm.sol\":26073:26834  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_258:\n        /* \"source/Farm.sol\":26497:26520  bytes memory returndata */\n      0x00\n        /* \"source/Farm.sol\":26523:26592  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_295\n        /* \"source/Farm.sol\":26551:26555  data */\n      dup3\n        /* \"source/Farm.sol\":26523:26592  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"source/Farm.sol\":26531:26536  token */\n      dup6\n        /* \"source/Farm.sol\":26523:26550  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_296\n      swap1\n        /* \"source/Farm.sol\":26523:26592  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"source/Farm.sol\":26607:26624  returndata.length */\n      dup1\n      mload\n        /* \"source/Farm.sol\":26497:26592  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"source/Farm.sol\":26607:26628  returndata.length > 0 */\n      iszero\n        /* \"source/Farm.sol\":26603:26827  if (returndata.length > 0) { // Return data is optional... */\n      tag_255\n      jumpi\n        /* \"source/Farm.sol\":26749:26759  returndata */\n      dup1\n        /* \"source/Farm.sol\":26738:26768  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"source/Farm.sol\":26730:26815  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9940:9942   */\n      0x20\n        /* \"source/Farm.sol\":26730:26815  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9922:9943   */\n      mstore\n        /* \"#utility.yul\":9979:9981   */\n      0x2a\n        /* \"#utility.yul\":9959:9977   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9952:9982   */\n      mstore\n        /* \"#utility.yul\":10018:10052   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":9998:10016   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9991:10053   */\n      mstore\n        /* \"#utility.yul\":10089:10101   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10069:10087   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10062:10102   */\n      mstore\n        /* \"#utility.yul\":10119:10138   */\n      0x84\n      add\n        /* \"source/Farm.sol\":26730:26815  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_115\n        /* \"#utility.yul\":9738:10144   */\n      jump\n        /* \"source/Farm.sol\":8687:8882  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_296:\n        /* \"source/Farm.sol\":8790:8802  bytes memory */\n      0x60\n        /* \"source/Farm.sol\":8822:8874  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_305\n        /* \"source/Farm.sol\":8844:8850  target */\n      dup5\n        /* \"source/Farm.sol\":8852:8856  data */\n      dup5\n        /* \"source/Farm.sol\":8858:8859  0 */\n      0x00\n        /* \"source/Farm.sol\":8861:8873  errorMessage */\n      dup6\n        /* \"source/Farm.sol\":8822:8843  functionCallWithValue */\n      tag_306\n        /* \"source/Farm.sol\":8822:8874  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_305:\n        /* \"source/Farm.sol\":8815:8874  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"source/Farm.sol\":8687:8882  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":9739:10269  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_306:\n        /* \"source/Farm.sol\":9866:9878  bytes memory */\n      0x60\n        /* \"source/Farm.sol\":9924:9929  value */\n      dup3\n        /* \"source/Farm.sol\":9899:9920  address(this).balance */\n      selfbalance\n        /* \"source/Farm.sol\":9899:9929  address(this).balance >= value */\n      lt\n      iszero\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10351:10353   */\n      0x20\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10333:10354   */\n      mstore\n        /* \"#utility.yul\":10390:10392   */\n      0x26\n        /* \"#utility.yul\":10370:10388   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10363:10393   */\n      mstore\n        /* \"#utility.yul\":10429:10463   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":10409:10427   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10402:10464   */\n      mstore\n        /* \"#utility.yul\":10500:10508   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10480:10498   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10473:10509   */\n      mstore\n        /* \"#utility.yul\":10526:10545   */\n      0x84\n      add\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_115\n        /* \"#utility.yul\":10149:10551   */\n      jump\n        /* \"source/Farm.sol\":9891:9972  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_308:\n        /* \"source/Farm.sol\":6136:6156  extcodesize(account) */\n      dup5\n      extcodesize\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10758:10760   */\n      0x20\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10740:10761   */\n      mstore\n        /* \"#utility.yul\":10797:10799   */\n      0x1d\n        /* \"#utility.yul\":10777:10795   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10770:10800   */\n      mstore\n        /* \"#utility.yul\":10836:10867   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":10816:10834   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10809:10868   */\n      mstore\n        /* \"#utility.yul\":10885:10903   */\n      0x64\n      add\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n      tag_115\n        /* \"#utility.yul\":10556:10909   */\n      jump\n        /* \"source/Farm.sol\":9983:10043  require(isContract(target), \"Address: call to non-contract\") */\n    tag_313:\n        /* \"source/Farm.sol\":10117:10129  bool success */\n      0x00\n        /* \"source/Farm.sol\":10131:10154  bytes memory returndata */\n      dup1\n        /* \"source/Farm.sol\":10158:10164  target */\n      dup7\n        /* \"source/Farm.sol\":10158:10169  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"source/Farm.sol\":10178:10183  value */\n      dup6\n        /* \"source/Farm.sol\":10186:10190  data */\n      dup8\n        /* \"source/Farm.sol\":10158:10191  target.call{ value: value }(data) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_320\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_319)\n    tag_320:\n      0x60\n      swap2\n      pop\n    tag_319:\n      pop\n        /* \"source/Farm.sol\":10116:10191  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"source/Farm.sol\":10209:10261  _verifyCallResult(success, returndata, errorMessage) */\n      tag_321\n        /* \"source/Farm.sol\":10227:10234  success */\n      dup3\n        /* \"source/Farm.sol\":10236:10246  returndata */\n      dup3\n        /* \"source/Farm.sol\":10248:10260  errorMessage */\n      dup7\n        /* \"source/Farm.sol\":10209:10226  _verifyCallResult */\n      tag_322\n        /* \"source/Farm.sol\":10209:10261  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_321:\n        /* \"source/Farm.sol\":10202:10261  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"source/Farm.sol\":9739:10269  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"source/Farm.sol\":11275:12017  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_322:\n        /* \"source/Farm.sol\":11390:11402  bytes memory */\n      0x60\n        /* \"source/Farm.sol\":11419:11426  success */\n      dup4\n        /* \"source/Farm.sol\":11415:12010  if (success) {... */\n      iszero\n      tag_325\n      jumpi\n      pop\n        /* \"source/Farm.sol\":11450:11460  returndata */\n      dup2\n        /* \"source/Farm.sol\":11443:11460  return returndata */\n      jump(tag_228)\n        /* \"source/Farm.sol\":11415:12010  if (success) {... */\n    tag_325:\n        /* \"source/Farm.sol\":11564:11581  returndata.length */\n      dup3\n      mload\n        /* \"source/Farm.sol\":11564:11585  returndata.length > 0 */\n      iszero\n        /* \"source/Farm.sol\":11560:11999  if (returndata.length > 0) {... */\n      tag_327\n      jumpi\n        /* \"source/Farm.sol\":11827:11837  returndata */\n      dup3\n        /* \"source/Farm.sol\":11821:11838  mload(returndata) */\n      mload\n        /* \"source/Farm.sol\":11888:11903  returndata_size */\n      dup1\n        /* \"source/Farm.sol\":11875:11885  returndata */\n      dup5\n        /* \"source/Farm.sol\":11871:11873  32 */\n      0x20\n        /* \"source/Farm.sol\":11867:11886  add(32, returndata) */\n      add\n        /* \"source/Farm.sol\":11860:11904  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"source/Farm.sol\":11560:11999  if (returndata.length > 0) {... */\n    tag_327:\n        /* \"source/Farm.sol\":11970:11982  errorMessage */\n      dup2\n        /* \"source/Farm.sol\":11963:11983  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n        /* \"#utility.yul\":196:376   */\n    tag_38:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_338:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":573:727   */\n    tag_331:\n        /* \"#utility.yul\":659:701   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":652:657   */\n      dup2\n        /* \"#utility.yul\":648:702   */\n      and\n        /* \"#utility.yul\":641:646   */\n      dup2\n        /* \"#utility.yul\":638:703   */\n      eq\n        /* \"#utility.yul\":628:721   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":717:718   */\n      0x00\n        /* \"#utility.yul\":714:715   */\n      dup1\n        /* \"#utility.yul\":707:719   */\n      revert\n        /* \"#utility.yul\":732:979   */\n    tag_58:\n        /* \"#utility.yul\":791:797   */\n      0x00\n        /* \"#utility.yul\":844:846   */\n      0x20\n        /* \"#utility.yul\":832:841   */\n      dup3\n        /* \"#utility.yul\":823:830   */\n      dup5\n        /* \"#utility.yul\":819:842   */\n      sub\n        /* \"#utility.yul\":815:847   */\n      slt\n        /* \"#utility.yul\":812:864   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":860:861   */\n      0x00\n        /* \"#utility.yul\":857:858   */\n      dup1\n        /* \"#utility.yul\":850:862   */\n      revert\n        /* \"#utility.yul\":812:864   */\n    tag_343:\n        /* \"#utility.yul\":899:908   */\n      dup2\n        /* \"#utility.yul\":886:909   */\n      calldataload\n        /* \"#utility.yul\":918:949   */\n      tag_228\n        /* \"#utility.yul\":943:948   */\n      dup2\n        /* \"#utility.yul\":918:949   */\n      tag_331\n      jump\t// in\n        /* \"#utility.yul\":984:1884   */\n    tag_61:\n        /* \"#utility.yul\":1213:1215   */\n      0x20\n        /* \"#utility.yul\":1265:1286   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1335:1348   */\n      dup3\n      mload\n        /* \"#utility.yul\":1238:1256   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1357:1379   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1184:1188   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1213:1215   */\n      swap1\n        /* \"#utility.yul\":1398:1400   */\n      0x40\n      swap1\n        /* \"#utility.yul\":1416:1434   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1457:1472   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":1184:1188   */\n      dup6\n        /* \"#utility.yul\":1500:1858   */\n    tag_346:\n        /* \"#utility.yul\":1514:1520   */\n      dup3\n        /* \"#utility.yul\":1511:1512   */\n      dup2\n        /* \"#utility.yul\":1508:1521   */\n      lt\n        /* \"#utility.yul\":1500:1858   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":1573:1586   */\n      dup2\n      mload\n        /* \"#utility.yul\":1615:1624   */\n      dup1\n      mload\n        /* \"#utility.yul\":1626:1668   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1611:1669   */\n      and\n        /* \"#utility.yul\":1599:1670   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1710:1721   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":1704:1722   */\n      mload\n        /* \"#utility.yul\":1690:1702   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":1683:1723   */\n      mstore\n        /* \"#utility.yul\":1763:1774   */\n      dup6\n      add\n        /* \"#utility.yul\":1757:1775   */\n      mload\n        /* \"#utility.yul\":1743:1755   */\n      dup6\n      dup6\n      add\n        /* \"#utility.yul\":1736:1776   */\n      mstore\n        /* \"#utility.yul\":1805:1809   */\n      0x60\n        /* \"#utility.yul\":1796:1810   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1833:1848   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1536:1537   */\n      0x01\n        /* \"#utility.yul\":1529:1538   */\n      add\n        /* \"#utility.yul\":1500:1858   */\n      jump(tag_346)\n    tag_348:\n      pop\n        /* \"#utility.yul\":1875:1878   */\n      swap2\n      swap8\n        /* \"#utility.yul\":984:1884   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2135:2253   */\n    tag_332:\n        /* \"#utility.yul\":2221:2226   */\n      dup1\n        /* \"#utility.yul\":2214:2227   */\n      iszero\n        /* \"#utility.yul\":2207:2228   */\n      iszero\n        /* \"#utility.yul\":2200:2205   */\n      dup2\n        /* \"#utility.yul\":2197:2229   */\n      eq\n        /* \"#utility.yul\":2187:2247   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2243:2244   */\n      0x00\n        /* \"#utility.yul\":2240:2241   */\n      dup1\n        /* \"#utility.yul\":2233:2245   */\n      revert\n        /* \"#utility.yul\":2258:2499   */\n    tag_68:\n        /* \"#utility.yul\":2314:2320   */\n      0x00\n        /* \"#utility.yul\":2367:2369   */\n      0x20\n        /* \"#utility.yul\":2355:2364   */\n      dup3\n        /* \"#utility.yul\":2346:2353   */\n      dup5\n        /* \"#utility.yul\":2342:2365   */\n      sub\n        /* \"#utility.yul\":2338:2370   */\n      slt\n        /* \"#utility.yul\":2335:2387   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2383:2384   */\n      0x00\n        /* \"#utility.yul\":2380:2381   */\n      dup1\n        /* \"#utility.yul\":2373:2385   */\n      revert\n        /* \"#utility.yul\":2335:2387   */\n    tag_353:\n        /* \"#utility.yul\":2422:2431   */\n      dup2\n        /* \"#utility.yul\":2409:2432   */\n      calldataload\n        /* \"#utility.yul\":2441:2469   */\n      tag_228\n        /* \"#utility.yul\":2463:2468   */\n      dup2\n        /* \"#utility.yul\":2441:2469   */\n      tag_332\n      jump\t// in\n        /* \"#utility.yul\":4012:4196   */\n    tag_333:\n        /* \"#utility.yul\":4064:4141   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4061:4062   */\n      0x00\n        /* \"#utility.yul\":4054:4142   */\n      mstore\n        /* \"#utility.yul\":4161:4165   */\n      0x11\n        /* \"#utility.yul\":4158:4159   */\n      0x04\n        /* \"#utility.yul\":4151:4166   */\n      mstore\n        /* \"#utility.yul\":4185:4189   */\n      0x24\n        /* \"#utility.yul\":4182:4183   */\n      0x00\n        /* \"#utility.yul\":4175:4190   */\n      revert\n        /* \"#utility.yul\":4201:4329   */\n    tag_122:\n        /* \"#utility.yul\":4241:4244   */\n      0x00\n        /* \"#utility.yul\":4272:4273   */\n      dup3\n        /* \"#utility.yul\":4268:4274   */\n      not\n        /* \"#utility.yul\":4265:4266   */\n      dup3\n        /* \"#utility.yul\":4262:4275   */\n      gt\n        /* \"#utility.yul\":4259:4298   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4278:4296   */\n      tag_363\n      tag_333\n      jump\t// in\n    tag_363:\n      pop\n        /* \"#utility.yul\":4314:4323   */\n      add\n      swap1\n        /* \"#utility.yul\":4201:4329   */\n      jump\t// out\n        /* \"#utility.yul\":4738:4922   */\n    tag_135:\n        /* \"#utility.yul\":4790:4867   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4787:4788   */\n      0x00\n        /* \"#utility.yul\":4780:4868   */\n      mstore\n        /* \"#utility.yul\":4887:4891   */\n      0x32\n        /* \"#utility.yul\":4884:4885   */\n      0x04\n        /* \"#utility.yul\":4877:4892   */\n      mstore\n        /* \"#utility.yul\":4911:4915   */\n      0x24\n        /* \"#utility.yul\":4908:4909   */\n      0x00\n        /* \"#utility.yul\":4901:4916   */\n      revert\n        /* \"#utility.yul\":4927:5122   */\n    tag_143:\n        /* \"#utility.yul\":4966:4969   */\n      0x00\n        /* \"#utility.yul\":4997:5063   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4990:4995   */\n      dup3\n        /* \"#utility.yul\":4987:5064   */\n      eq\n        /* \"#utility.yul\":4984:5087   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":5067:5085   */\n      tag_368\n      tag_333\n      jump\t// in\n    tag_368:\n      pop\n        /* \"#utility.yul\":5114:5115   */\n      0x01\n        /* \"#utility.yul\":5103:5116   */\n      add\n      swap1\n        /* \"#utility.yul\":4927:5122   */\n      jump\t// out\n        /* \"#utility.yul\":5127:5323   */\n    tag_148:\n        /* \"#utility.yul\":5166:5169   */\n      0x00\n        /* \"#utility.yul\":5194:5199   */\n      dup2\n        /* \"#utility.yul\":5184:5223   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":5203:5221   */\n      tag_371\n      tag_333\n      jump\t// in\n    tag_371:\n      pop\n        /* \"#utility.yul\":5250:5316   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5239:5317   */\n      add\n      swap1\n        /* \"#utility.yul\":5127:5323   */\n      jump\t// out\n        /* \"#utility.yul\":6088:6272   */\n    tag_169:\n        /* \"#utility.yul\":6140:6217   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6137:6138   */\n      0x00\n        /* \"#utility.yul\":6130:6218   */\n      mstore\n        /* \"#utility.yul\":6237:6241   */\n      0x41\n        /* \"#utility.yul\":6234:6235   */\n      0x04\n        /* \"#utility.yul\":6227:6242   */\n      mstore\n        /* \"#utility.yul\":6261:6265   */\n      0x24\n        /* \"#utility.yul\":6258:6259   */\n      0x00\n        /* \"#utility.yul\":6251:6266   */\n      revert\n        /* \"#utility.yul\":6684:6868   */\n    tag_239:\n        /* \"#utility.yul\":6754:6760   */\n      0x00\n        /* \"#utility.yul\":6807:6809   */\n      0x20\n        /* \"#utility.yul\":6795:6804   */\n      dup3\n        /* \"#utility.yul\":6786:6793   */\n      dup5\n        /* \"#utility.yul\":6782:6805   */\n      sub\n        /* \"#utility.yul\":6778:6810   */\n      slt\n        /* \"#utility.yul\":6775:6827   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6823:6824   */\n      0x00\n        /* \"#utility.yul\":6820:6821   */\n      dup1\n        /* \"#utility.yul\":6813:6825   */\n      revert\n        /* \"#utility.yul\":6775:6827   */\n    tag_377:\n      pop\n        /* \"#utility.yul\":6846:6862   */\n      mload\n      swap2\n        /* \"#utility.yul\":6684:6868   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7233:7358   */\n    tag_247:\n        /* \"#utility.yul\":7273:7277   */\n      0x00\n        /* \"#utility.yul\":7301:7302   */\n      dup3\n        /* \"#utility.yul\":7298:7299   */\n      dup3\n        /* \"#utility.yul\":7295:7303   */\n      lt\n        /* \"#utility.yul\":7292:7326   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":7306:7324   */\n      tag_381\n      tag_333\n      jump\t// in\n    tag_381:\n      pop\n        /* \"#utility.yul\":7343:7352   */\n      sub\n      swap1\n        /* \"#utility.yul\":7233:7358   */\n      jump\t// out\n        /* \"#utility.yul\":7363:7591   */\n    tag_249:\n        /* \"#utility.yul\":7403:7410   */\n      0x00\n        /* \"#utility.yul\":7529:7530   */\n      dup2\n        /* \"#utility.yul\":7461:7527   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7457:7531   */\n      div\n        /* \"#utility.yul\":7454:7455   */\n      dup4\n        /* \"#utility.yul\":7451:7532   */\n      gt\n        /* \"#utility.yul\":7446:7447   */\n      dup3\n        /* \"#utility.yul\":7439:7448   */\n      iszero\n        /* \"#utility.yul\":7432:7449   */\n      iszero\n        /* \"#utility.yul\":7428:7533   */\n      and\n        /* \"#utility.yul\":7425:7556   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":7536:7554   */\n      tag_384\n      tag_333\n      jump\t// in\n    tag_384:\n      pop\n        /* \"#utility.yul\":7576:7585   */\n      mul\n      swap1\n        /* \"#utility.yul\":7363:7591   */\n      jump\t// out\n        /* \"#utility.yul\":7596:7870   */\n    tag_252:\n        /* \"#utility.yul\":7636:7637   */\n      0x00\n        /* \"#utility.yul\":7662:7663   */\n      dup3\n        /* \"#utility.yul\":7652:7841   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":7697:7774   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7694:7695   */\n      0x00\n        /* \"#utility.yul\":7687:7775   */\n      mstore\n        /* \"#utility.yul\":7798:7802   */\n      0x12\n        /* \"#utility.yul\":7795:7796   */\n      0x04\n        /* \"#utility.yul\":7788:7803   */\n      mstore\n        /* \"#utility.yul\":7826:7830   */\n      0x24\n        /* \"#utility.yul\":7823:7824   */\n      0x00\n        /* \"#utility.yul\":7816:7831   */\n      revert\n        /* \"#utility.yul\":7652:7841   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":7855:7864   */\n      div\n      swap1\n        /* \"#utility.yul\":7596:7870   */\n      jump\t// out\n        /* \"#utility.yul\":8883:9134   */\n    tag_277:\n        /* \"#utility.yul\":8953:8959   */\n      0x00\n        /* \"#utility.yul\":9006:9008   */\n      0x20\n        /* \"#utility.yul\":8994:9003   */\n      dup3\n        /* \"#utility.yul\":8985:8992   */\n      dup5\n        /* \"#utility.yul\":8981:9004   */\n      sub\n        /* \"#utility.yul\":8977:9009   */\n      slt\n        /* \"#utility.yul\":8974:9026   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":9022:9023   */\n      0x00\n        /* \"#utility.yul\":9019:9020   */\n      dup1\n        /* \"#utility.yul\":9012:9024   */\n      revert\n        /* \"#utility.yul\":8974:9026   */\n    tag_391:\n        /* \"#utility.yul\":9054:9063   */\n      dup2\n        /* \"#utility.yul\":9048:9064   */\n      mload\n        /* \"#utility.yul\":9073:9104   */\n      tag_228\n        /* \"#utility.yul\":9098:9103   */\n      dup2\n        /* \"#utility.yul\":9073:9104   */\n      tag_331\n      jump\t// in\n        /* \"#utility.yul\":9488:9733   */\n    tag_299:\n        /* \"#utility.yul\":9555:9561   */\n      0x00\n        /* \"#utility.yul\":9608:9610   */\n      0x20\n        /* \"#utility.yul\":9596:9605   */\n      dup3\n        /* \"#utility.yul\":9587:9594   */\n      dup5\n        /* \"#utility.yul\":9583:9606   */\n      sub\n        /* \"#utility.yul\":9579:9611   */\n      slt\n        /* \"#utility.yul\":9576:9628   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":9624:9625   */\n      0x00\n        /* \"#utility.yul\":9621:9622   */\n      dup1\n        /* \"#utility.yul\":9614:9626   */\n      revert\n        /* \"#utility.yul\":9576:9628   */\n    tag_395:\n        /* \"#utility.yul\":9656:9665   */\n      dup2\n        /* \"#utility.yul\":9650:9666   */\n      mload\n        /* \"#utility.yul\":9675:9703   */\n      tag_228\n        /* \"#utility.yul\":9697:9702   */\n      dup2\n        /* \"#utility.yul\":9675:9703   */\n      tag_332\n      jump\t// in\n        /* \"#utility.yul\":10914:11172   */\n    tag_334:\n        /* \"#utility.yul\":10986:10987   */\n      0x00\n        /* \"#utility.yul\":10996:11109   */\n    tag_401:\n        /* \"#utility.yul\":11010:11016   */\n      dup4\n        /* \"#utility.yul\":11007:11008   */\n      dup2\n        /* \"#utility.yul\":11004:11017   */\n      lt\n        /* \"#utility.yul\":10996:11109   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":11086:11097   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11080:11098   */\n      mload\n        /* \"#utility.yul\":11067:11078   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11060:11099   */\n      mstore\n        /* \"#utility.yul\":11032:11034   */\n      0x20\n        /* \"#utility.yul\":11025:11035   */\n      add\n        /* \"#utility.yul\":10996:11109   */\n      jump(tag_401)\n    tag_403:\n        /* \"#utility.yul\":11127:11133   */\n      dup4\n        /* \"#utility.yul\":11124:11125   */\n      dup2\n        /* \"#utility.yul\":11121:11134   */\n      gt\n        /* \"#utility.yul\":11118:11166   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":11162:11163   */\n      0x00\n        /* \"#utility.yul\":11153:11159   */\n      dup5\n        /* \"#utility.yul\":11148:11151   */\n      dup5\n        /* \"#utility.yul\":11144:11160   */\n      add\n        /* \"#utility.yul\":11137:11164   */\n      mstore\n        /* \"#utility.yul\":11118:11166   */\n    tag_404:\n      pop\n        /* \"#utility.yul\":10914:11172   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11177:11451   */\n    tag_317:\n        /* \"#utility.yul\":11306:11309   */\n      0x00\n        /* \"#utility.yul\":11344:11350   */\n      dup3\n        /* \"#utility.yul\":11338:11351   */\n      mload\n        /* \"#utility.yul\":11360:11413   */\n      tag_406\n        /* \"#utility.yul\":11406:11412   */\n      dup2\n        /* \"#utility.yul\":11401:11404   */\n      dup5\n        /* \"#utility.yul\":11394:11398   */\n      0x20\n        /* \"#utility.yul\":11386:11392   */\n      dup8\n        /* \"#utility.yul\":11382:11399   */\n      add\n        /* \"#utility.yul\":11360:11413   */\n      tag_334\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11429:11445   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11177:11451   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11456:11898   */\n    tag_330:\n        /* \"#utility.yul\":11605:11607   */\n      0x20\n        /* \"#utility.yul\":11594:11603   */\n      dup2\n        /* \"#utility.yul\":11587:11608   */\n      mstore\n        /* \"#utility.yul\":11568:11572   */\n      0x00\n        /* \"#utility.yul\":11637:11643   */\n      dup3\n        /* \"#utility.yul\":11631:11644   */\n      mload\n        /* \"#utility.yul\":11680:11686   */\n      dup1\n        /* \"#utility.yul\":11675:11677   */\n      0x20\n        /* \"#utility.yul\":11664:11673   */\n      dup5\n        /* \"#utility.yul\":11660:11678   */\n      add\n        /* \"#utility.yul\":11653:11687   */\n      mstore\n        /* \"#utility.yul\":11696:11762   */\n      tag_408\n        /* \"#utility.yul\":11755:11761   */\n      dup2\n        /* \"#utility.yul\":11750:11752   */\n      0x40\n        /* \"#utility.yul\":11739:11748   */\n      dup6\n        /* \"#utility.yul\":11735:11753   */\n      add\n        /* \"#utility.yul\":11730:11732   */\n      0x20\n        /* \"#utility.yul\":11722:11728   */\n      dup8\n        /* \"#utility.yul\":11718:11733   */\n      add\n        /* \"#utility.yul\":11696:11762   */\n      tag_334\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11814:11816   */\n      0x1f\n        /* \"#utility.yul\":11802:11817   */\n      add\n        /* \"#utility.yul\":11819:11885   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":11798:11886   */\n      and\n        /* \"#utility.yul\":11783:11887   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":11889:11891   */\n      0x40\n        /* \"#utility.yul\":11779:11892   */\n      add\n      swap3\n        /* \"#utility.yul\":11456:11898   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205aa298f2b8ba8a740ed41003ccefd694b3493a802bbc6af21b46a4a8ceafcdbb64736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1232": {
									"entryPoint": null,
									"id": 1232,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_480": {
									"entryPoint": null,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_577": {
									"entryPoint": null,
									"id": 577,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1126": {
									"entryPoint": 197,
									"id": 1126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_contract$_IERC20_$438t_uint256t_boolt_uint256_fromMemory": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"validator_revert_address": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:837:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:525:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "331:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "340:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "327:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "352:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "323:33:1"
															},
															"nodeType": "YulIf",
															"src": "320:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "382:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "401:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "395:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "386:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "420:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "420:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "460:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "470:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "484:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "509:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "520:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "505:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "505:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "499:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "499:25:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "488:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "558:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "533:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "533:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "575:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "585:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "601:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "621:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "632:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "617:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "617:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "645:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "670:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "681:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "666:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "666:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "660:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:25:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "649:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "707:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_2",
																								"nodeType": "YulIdentifier",
																								"src": "730:7:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "723:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "723:15:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "716:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "716:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "704:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:36:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:44:1"
															},
															"nodeType": "YulIf",
															"src": "694:64:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "767:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "777:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "793:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "813:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "824:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "809:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "803:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:26:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IERC20_$438t_uint256t_boolt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "244:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "255:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "267:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "283:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "291:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "299:6:1",
														"type": ""
													}
												],
												"src": "150:685:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$438t_uint256t_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        let value_2 := mload(add(headStart, 96))\n        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n        value3 := value_2\n        value4 := mload(add(headStart, 128))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620186a060055560036006556007805460ff1916905560006008553480156200002c57600080fd5b5060405162001cfe38038062001cfe8339810160408190526200004f9162000138565b60016000819055805460ff191690556200006933620000c5565b600380546001600160a01b039687166001600160a01b0319918216811790925560048054821690921790915560028054959096169416939093179093556005556008556007805491151560ff19909216919091179055620001a4565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200013557600080fd5b50565b600080600080600060a086880312156200015157600080fd5b85516200015e816200011f565b602087015190955062000171816200011f565b60408701516060880151919550935080151581146200018f57600080fd5b80925050608086015190509295509295909350565b611b4a80620001b46000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638da5cb5b116100d8578063ae04d45d1161008c578063f2fde38b11610066578063f2fde38b14610396578063f854a27f146103a9578063f995441b146103bc57600080fd5b8063ae04d45d14610350578063b5a5e50914610363578063d1af0c7d1461037657600080fd5b80639168ae72116100bd5780639168ae72146102bd5780639406704514610307578063a694fc3a1461033d57600080fd5b80638da5cb5b146102915780638e7271fa146102b457600080fd5b806354fd4d501161013a5780636588103b116101145780636588103b146102315780636aa4439f14610276578063715018a61461028957600080fd5b806354fd4d50146101fd5780635c975abb1461020657806363c28db11461021157600080fd5b80632e1a7d4d1161016b5780632e1a7d4d146101c35780633166b848146101d8578063372500ab146101f557600080fd5b80630d66808714610187578063114cd3c8146101a3575b600080fd5b61019060085481565b6040519081526020015b60405180910390f35b6101906101b1366004611790565b600b6020526000908152604090205481565b6101d66101d1366004611790565b6103c4565b005b6007546101e59060ff1681565b604051901515815260200161019a565b6101d661082e565b61019060065481565b60015460ff166101e5565b61022461021f3660046117cb565b610908565b60405161019a91906117e8565b6003546102519073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019a565b6101d6610284366004611865565b610bb9565b6101d6610bf2565b600154610100900473ffffffffffffffffffffffffffffffffffffffff16610251565b61019060055481565b6102ec6102cb3660046117cb565b60096020526000908152604090208054600282015460039092015490919083565b6040805193845260208401929092529082015260600161019a565b610251610315366004611790565b600a6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6101d661034b366004611790565b610c06565b6101d661035e366004611790565b610c2a565b6101d6610371366004611790565b610c37565b6002546102519073ffffffffffffffffffffffffffffffffffffffff1681565b6101d66103a43660046117cb565b610c44565b6101906103b73660046117cb565b610cf8565b6101d6610d3d565b6103cc610e07565b33600090815260096020526040902054610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f752068617665206e6f20746f6b656e73207374616b65640000000000000060448201526064015b60405180910390fd5b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146104d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000604482015260640161043e565b60075460ff16801561050057506008546000828152600b602052604090205442916104fe916118b1565b105b8061050e575060075460ff16155b61059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f546f6b656e206c6f636b2074696d6520686173206e6f7420796574206578706960448201527f7265640000000000000000000000000000000000000000000000000000000000606482015260840161043e565b60006105a533610e7b565b336000908152600960205260408120600301805492935083929091906105cc9084906118b1565b9091555060009050805b3360009081526009602052604090206001015481101561069e57336000908152600960205260409020600101805485919083908110610617576106176118c9565b90600052602060002090600302016001015414801561067f5750336000908152600960205260408120600101805483908110610655576106556118c9565b600091825260209091206003909102015473ffffffffffffffffffffffffffffffffffffffff1614155b1561068c5780915061069e565b80610696816118f8565b9150506105d6565b503360009081526009602052604081206001018054839081106106c3576106c36118c9565b6000918252602080832060039290920290910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff949094169390931790925533815260099091526040812080549161073283611931565b90915550506000838152600a6020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055600b9091528082209190915560035490517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201523360248201526044810185905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b5050336000908152600960205260409020426002909101555061082b9250610ee2915050565b50565b33600081815260096020526040812060030154909161084c90610e7b565b61085691906118b1565b9050600081116108c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f596f752068617665206e6f207265776172647320746f20636c61696d00000000604482015260640161043e565b336000818152600960205260408120426002808301919091556003909101919091555461082b9173ffffffffffffffffffffffffffffffffffffffff9091169083610ee9565b73ffffffffffffffffffffffffffffffffffffffff811660009081526009602052604090205460609015610b4f5773ffffffffffffffffffffffffffffffffffffffff821660009081526009602052604081205467ffffffffffffffff81111561097457610974611966565b6040519080825280602002602001820160405280156109df57816020015b6109cc6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b8152602001906001900390816109925790505b5090506000805b73ffffffffffffffffffffffffffffffffffffffff8516600090815260096020526040902060010154811015610b465773ffffffffffffffffffffffffffffffffffffffff85166000908152600960205260408120600101805483908110610a5057610a506118c9565b600091825260209091206003909102015473ffffffffffffffffffffffffffffffffffffffff1614610b345773ffffffffffffffffffffffffffffffffffffffff85166000908152600960205260409020600101805482908110610ab657610ab66118c9565b6000918252602091829020604080516060810182526003909302909101805473ffffffffffffffffffffffffffffffffffffffff168352600181015493830193909352600290920154918101919091528351849084908110610b1a57610b1a6118c9565b60200260200101819052508180610b30906118f8565b9250505b80610b3e816118f8565b9150506109e6565b50909392505050565b6040805160008082526020820190925290610bb2565b610b9f6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b815260200190600190039081610b655790505b5092915050565b610bc1610f7b565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b610bfa610f7b565b610c046000611002565b565b610c0e610e07565b610c16611080565b610c2033826110ed565b61082b6001600055565b610c32610f7b565b600855565b610c3f610f7b565b600555565b610c4c610f7b565b73ffffffffffffffffffffffffffffffffffffffff8116610cef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161043e565b61082b81611002565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600960205260408120600301548190610d2c84610e7b565b610d3691906118b1565b9392505050565b610d45610f7b565b610d4d61142e565b6002546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de09190611995565b60025490915061082b9073ffffffffffffffffffffffffffffffffffffffff163383610ee9565b60026000541415610e74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161043e565b6002600055565b60055473ffffffffffffffffffffffffffffffffffffffff8216600090815260096020526040812080546002909101549192610e1092909190610ebe90426119ae565b610ec891906119c5565b610ed291906119c5565b610edc9190611a02565b92915050565b6001600055565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610f7690849061149a565b505050565b60015473ffffffffffffffffffffffffffffffffffffffff610100909104163314610c04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043e565b6001805473ffffffffffffffffffffffffffffffffffffffff8381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff85161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60015460ff1615610c04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161043e565b6003546040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff848116921690636352211e90602401602060405180830381865afa15801561115e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111829190611a3d565b73ffffffffffffffffffffffffffffffffffffffff16146111ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000604482015260640161043e565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600960205260409020541561127957600061123583610e7b565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600960205260408120600301805492935083929091906112729084906118b1565b9091555050505b6003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015230602483015260448201849052909116906323b872dd90606401600060405180830381600087803b1580156112f357600080fd5b505af1158015611307573d6000803e3d6000fd5b50506040805160608101825273ffffffffffffffffffffffffffffffffffffffff868116808352602080840188815242858701908152600084815260098452968720600180820180548083018255908a52948920885160039096020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001695909716949094178655915192850192909255905160029093019290925583528054919450909250906113b9836118f8565b9091555050506000908152600a60209081526040808320805473ffffffffffffffffffffffffffffffffffffffff9095167fffffffffffffffffffffffff000000000000000000000000000000000000000090951685179055600b825280832042908190559383526009909152902060020155565b60015460ff16610c04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161043e565b60006114fc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166115a69092919063ffffffff16565b805190915015610f76578080602001905181019061151a9190611a5a565b610f76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161043e565b60606115b584846000856115bd565b949350505050565b60608247101561164f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161043e565b843b6116b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161043e565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516116e09190611aa7565b60006040518083038185875af1925050503d806000811461171d576040519150601f19603f3d011682016040523d82523d6000602084013e611722565b606091505b509150915061173282828661173d565b979650505050505050565b6060831561174c575081610d36565b82511561175c5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e9190611ac3565b6000602082840312156117a257600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461082b57600080fd5b6000602082840312156117dd57600080fd5b8135610d36816117a9565b602080825282518282018190526000919060409081850190868401855b8281101561184a578151805173ffffffffffffffffffffffffffffffffffffffff16855286810151878601528501518585015260609093019290850190600101611805565b5091979650505050505050565b801515811461082b57600080fd5b60006020828403121561187757600080fd5b8135610d3681611857565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156118c4576118c4611882565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561192a5761192a611882565b5060010190565b60008161194057611940611882565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156119a757600080fd5b5051919050565b6000828210156119c0576119c0611882565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119fd576119fd611882565b500290565b600082611a38577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611a4f57600080fd5b8151610d36816117a9565b600060208284031215611a6c57600080fd5b8151610d3681611857565b60005b83811015611a92578181015183820152602001611a7a565b83811115611aa1576000848401525b50505050565b60008251611ab9818460208701611a77565b9190910192915050565b6020815260008251806020840152611ae2816040850160208701611a77565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212205aa298f2b8ba8a740ed41003ccefd694b3493a802bbc6af21b46a4a8ceafcdbb64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x186A0 PUSH1 0x5 SSTORE PUSH1 0x3 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1CFE CODESIZE SUB DUP1 PUSH3 0x1CFE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x4F SWAP2 PUSH3 0x138 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x69 CALLER PUSH3 0xC5 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP6 SWAP1 SWAP7 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SSTORE PUSH1 0x8 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x1A4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x15E DUP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH3 0x171 DUP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1B4A DUP1 PUSH3 0x1B4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xAE04D45D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xF995441B EQ PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAE04D45D EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xB5A5E509 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9168AE72 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8E7271FA EQ PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0x6588103B GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x6AA4439F EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x16B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x3166B848 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD668087 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x114CD3C8 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x190 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1E5 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x82E JUMP JUMPDEST PUSH2 0x190 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x251 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x251 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x19A JUMP JUMPDEST PUSH2 0x251 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x251 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x3CC PUSH2 0xE07 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x500 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP2 PUSH2 0x4FE SWAP2 PUSH2 0x18B1 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x50E JUMPI POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206C6F636B2074696D6520686173206E6F74207965742065787069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265640000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 CALLER PUSH2 0xE7B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5CC SWAP1 DUP5 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x69E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x617 JUMPI PUSH2 0x617 PUSH2 0x18C9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x67F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x655 JUMPI PUSH2 0x655 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x68C JUMPI DUP1 SWAP2 POP PUSH2 0x69E JUMP JUMPDEST DUP1 PUSH2 0x696 DUP2 PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D6 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6C3 JUMPI PUSH2 0x6C3 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x732 DUP4 PUSH2 0x1931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP PUSH2 0x82B SWAP3 POP PUSH2 0xEE2 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH2 0x84C SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x82B SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0xB4F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH2 0x974 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9DF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x9CC PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x992 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0xB46 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xA50 JUMPI PUSH2 0xA50 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB34 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xAB6 JUMPI PUSH2 0xAB6 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xB1A JUMPI PUSH2 0xB1A PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xB30 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xB3E DUP2 PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E6 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0xB9F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB65 JUMPI SWAP1 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBFA PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xC04 PUSH1 0x0 PUSH2 0x1002 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC0E PUSH2 0xE07 JUMP JUMPDEST PUSH2 0xC16 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0xC20 CALLER DUP3 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x82B PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xC32 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xC3F PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xF7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0x1002 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 SWAP1 PUSH2 0xD2C DUP5 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xD36 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD45 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xD4D PUSH2 0x142E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE0 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x82B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 SWAP3 PUSH2 0xE10 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xEBE SWAP1 TIMESTAMP PUSH2 0x19AE JUMP JUMPDEST PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xF76 SWAP1 DUP5 SWAP1 PUSH2 0x149A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x115E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 PUSH2 0x1235 DUP4 PUSH2 0xE7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1272 SWAP1 DUP5 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE SWAP7 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP11 MSTORE SWAP5 DUP10 KECCAK256 DUP9 MLOAD PUSH1 0x3 SWAP1 SWAP7 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR DUP7 SSTORE SWAP2 MLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP4 MSTORE DUP1 SLOAD SWAP2 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0x13B9 DUP4 PUSH2 0x18F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP6 AND DUP6 OR SWAP1 SSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF76 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x151A SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15B5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x15BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1732 DUP3 DUP3 DUP7 PUSH2 0x173D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x174C JUMPI POP DUP2 PUSH2 0xD36 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x175C JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD36 DUP2 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x184A JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1805 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD36 DUP2 PUSH2 0x1857 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18C4 JUMPI PUSH2 0x18C4 PUSH2 0x1882 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x192A JUMPI PUSH2 0x192A PUSH2 0x1882 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1940 JUMPI PUSH2 0x1940 PUSH2 0x1882 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19C0 PUSH2 0x1882 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FD PUSH2 0x1882 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A38 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD36 DUP2 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD36 DUP2 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A92 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A7A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1AB9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A77 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AE2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG2 SWAP9 CALLCODE 0xB8 0xBA DUP11 PUSH21 0xED41003CCEFD694B3493A802BBC6AF21B46A4A8CE 0xAF 0xCD 0xBB PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "28878:6306:0:-:0;;;29555:6;29523:38;;29595:1;29570:26;;29605:31;;;-1:-1:-1;;29605:31:0;;;-1:-1:-1;29654:27:0;;30011:484;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17794:1;17905:7;:22;;;15323:15;;-1:-1:-1;;15323:15:0;;;27132:32;14778:10;27132:18;:32::i;:::-;30224:13;:39;;-1:-1:-1;;;;;30224:39:0;;;-1:-1:-1;;;;;;30224:39:0;;;;;;;;30274:20;:37;;;;;;;;;;30322:12;:28;;;;;;;;;;;;;;;30361:14;:32;30404:8;:20;30451:11;:26;;;;;-1:-1:-1;;30451:26:0;;;;;;;;;28878:6306;;28678:191;28771:6;;;-1:-1:-1;;;;;28788:17:0;;;28771:6;28788:17;;;-1:-1:-1;;;;;;28788:17:0;;;;;;28821:40;;28771:6;;;;;;;;28821:40;;28752:16;;28821:40;28741:128;28678:191;:::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:685::-;267:6;275;283;291;299;352:3;340:9;331:7;327:23;323:33;320:53;;;369:1;366;359:12;320:53;401:9;395:16;420:31;445:5;420:31;:::i;:::-;520:2;505:18;;499:25;470:5;;-1:-1:-1;533:33:1;499:25;533:33;:::i;:::-;632:2;617:18;;611:25;681:2;666:18;;660:25;585:7;;-1:-1:-1;611:25:1;-1:-1:-1;723:15:1;;716:23;704:36;;694:64;;754:1;751;744:12;694:64;777:7;767:17;;;824:3;813:9;809:19;803:26;793:36;;150:685;;;;;;;;:::o;:::-;28878:6306:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1017": {
									"entryPoint": 5274,
									"id": 1017,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_1069": {
									"entryPoint": 3963,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_611": {
									"entryPoint": 3810,
									"id": 611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_603": {
									"entryPoint": 3591,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_517": {
									"entryPoint": 4224,
									"id": 517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_528": {
									"entryPoint": 5166,
									"id": 528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_stake_1363": {
									"entryPoint": 4333,
									"id": 1363,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_1126": {
									"entryPoint": 4098,
									"id": 1126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_verifyCallResult_362": {
									"entryPoint": 5949,
									"id": 362,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@adminWithdrawRewards_1389": {
									"entryPoint": 3389,
									"id": 1389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@availableRewards_1770": {
									"entryPoint": 3320,
									"id": 1770,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateRewards_1608": {
									"entryPoint": 3707,
									"id": 1608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimRewards_1657": {
									"entryPoint": 2094,
									"id": 1657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_280": {
									"entryPoint": 5565,
									"id": 280,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_210": {
									"entryPoint": 5542,
									"id": 210,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getStakedTokens_1749": {
									"entryPoint": 2312,
									"id": 1749,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lockEnabled_1175": {
									"entryPoint": null,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockTime_1178": {
									"entryPoint": null,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftCollection_1164": {
									"entryPoint": null,
									"id": 1164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1055": {
									"entryPoint": null,
									"id": 1055,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_505": {
									"entryPoint": null,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1083": {
									"entryPoint": 3058,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsPerHour_1169": {
									"entryPoint": null,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_1161": {
									"entryPoint": null,
									"id": 1161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_834": {
									"entryPoint": 3817,
									"id": 834,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setLockEnabled_1244": {
									"entryPoint": 3001,
									"id": 1244,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLockTime_1256": {
									"entryPoint": 3114,
									"id": 1256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardsPerHour_1268": {
									"entryPoint": 3127,
									"id": 1268,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1405": {
									"entryPoint": 3078,
									"id": 1405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakerAddress_1187": {
									"entryPoint": null,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_1183": {
									"entryPoint": null,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenStartStakeTime_1191": {
									"entryPoint": null,
									"id": 1191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1106": {
									"entryPoint": 3140,
									"id": 1106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@version_1172": {
									"entryPoint": null,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1578": {
									"entryPoint": 964,
									"id": 1578,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$122__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11900:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:1"
															},
															"nodeType": "YulIf",
															"src": "276:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:1",
														"type": ""
													}
												],
												"src": "196:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "486:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "486:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "528:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "553:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "539:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "521:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "445:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "456:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "467:4:1",
														"type": ""
													}
												],
												"src": "381:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "618:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "705:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "714:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "717:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "641:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "652:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "659:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "648:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "648:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:73:1"
															},
															"nodeType": "YulIf",
															"src": "628:93:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "607:5:1",
														"type": ""
													}
												],
												"src": "573:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "802:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "848:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "860:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "850:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "850:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "823:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "832:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "819:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:32:1"
															},
															"nodeType": "YulIf",
															"src": "812:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "873:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "899:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "886:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "877:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "943:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "918:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "918:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "968:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "768:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "779:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "791:6:1",
														"type": ""
													}
												],
												"src": "732:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1193:691:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1203:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1213:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1207:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1224:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1242:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1253:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1228:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1272:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1283:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1265:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1295:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1306:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1299:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1321:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1341:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1335:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1325:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1364:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1372:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1357:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1388:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1398:2:1",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1392:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1409:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1431:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1443:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1461:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1469:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1457:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1447:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1481:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1490:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1485:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1549:309:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1563:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1579:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1573:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1573:13:1"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "1567:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1606:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1621:2:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1615:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1615:9:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1626:42:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1611:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1611:58:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1599:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1599:71:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1599:71:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1694:3:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1699:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1690:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1690:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1714:2:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1718:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1710:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1710:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1704:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1704:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1683:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1683:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1683:40:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1747:3:1"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1752:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1743:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1743:12:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1767:2:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1771:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1763:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1763:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1757:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1757:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1736:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1736:40:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1736:40:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1789:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1800:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1805:4:1",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1796:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1796:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1789:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1823:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1837:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1845:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1833:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1833:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1823:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1511:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1508:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1522:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1524:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1533:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1536:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1529:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1529:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1524:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1504:3:1",
																"statements": []
															},
															"src": "1500:358:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1867:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1875:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1162:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1173:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1184:4:1",
														"type": ""
													}
												],
												"src": "984:900:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2005:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2038:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2015:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2057:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2072:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2080:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2050:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$122__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1974:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1985:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1996:4:1",
														"type": ""
													}
												],
												"src": "1889:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2177:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2231:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2240:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2243:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2233:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2233:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2233:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2200:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2221:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2214:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2214:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2207:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2207:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2197:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2197:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2190:40:1"
															},
															"nodeType": "YulIf",
															"src": "2187:60:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2166:5:1",
														"type": ""
													}
												],
												"src": "2135:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2325:174:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2346:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2355:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2342:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2367:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2338:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:32:1"
															},
															"nodeType": "YulIf",
															"src": "2335:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2396:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2409:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2400:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2463:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2441:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2441:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2478:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2488:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2478:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2291:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2302:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2314:6:1",
														"type": ""
													}
												],
												"src": "2258:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2615:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2627:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2615:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2657:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2672:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2680:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2668:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2650:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2650:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2574:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2585:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2596:4:1",
														"type": ""
													}
												],
												"src": "2504:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2892:162:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2902:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2914:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2925:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2910:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2902:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2944:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2955:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2937:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2937:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2982:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2993:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2978:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2978:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2971:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2971:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3025:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3036:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3041:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2845:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2856:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2864:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2872:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2883:4:1",
														"type": ""
													}
												],
												"src": "2735:319:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3184:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3196:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3207:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3192:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3184:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3226:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3241:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3249:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3237:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3219:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3143:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3154:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3165:4:1",
														"type": ""
													}
												],
												"src": "3059:240:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3478:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3495:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3488:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3540:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3525:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3564:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3584:27:1",
																		"type": "",
																		"value": "You have no tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3621:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3633:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3621:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3455:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3469:4:1",
														"type": ""
													}
												],
												"src": "3304:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3832:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3849:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3842:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3894:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3879:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3899:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3872:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3933:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3918:18:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3938:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3911:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3911:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3975:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3987:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3998:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3975:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3809:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3823:4:1",
														"type": ""
													}
												],
												"src": "3658:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4044:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4061:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4064:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4054:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4158:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4161:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4151:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4182:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4185:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4175:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4012:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4249:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4276:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4278:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4278:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4278:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4265:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4272:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4268:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4262:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4262:13:1"
															},
															"nodeType": "YulIf",
															"src": "4259:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4307:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4318:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4321:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4314:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4314:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4232:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4235:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4241:3:1",
														"type": ""
													}
												],
												"src": "4201:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4508:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4570:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4575:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4609:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4594:18:1"
																	},
																	{
																		"hexValue": "546f6b656e206c6f636b2074696d6520686173206e6f74207965742065787069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4614:34:1",
																		"type": "",
																		"value": "Token lock time has not yet expi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4680:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:18:1"
																	},
																	{
																		"hexValue": "726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4685:5:1",
																		"type": "",
																		"value": "red"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4658:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4700:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4712:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4708:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4700:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4485:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4499:4:1",
														"type": ""
													}
												],
												"src": "4334:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4770:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4787:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4780:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4780:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4887:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4877:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4911:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4901:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4901:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4738:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4974:148:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5065:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5067:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5067:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5067:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4990:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4997:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:77:1"
															},
															"nodeType": "YulIf",
															"src": "4984:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5096:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5107:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5114:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5103:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4956:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4966:3:1",
														"type": ""
													}
												],
												"src": "4927:195:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5174:149:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5201:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5203:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5203:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5203:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5194:5:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5187:13:1"
															},
															"nodeType": "YulIf",
															"src": "5184:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5232:85:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5243:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5250:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5239:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:78:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5232:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5156:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5166:3:1",
														"type": ""
													}
												],
												"src": "5127:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5485:241:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5495:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5518:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5495:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5530:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5540:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5534:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5598:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5613:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5621:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5609:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5591:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5591:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5656:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5641:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5665:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5673:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5661:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5661:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5634:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5634:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5697:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5708:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5693:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5713:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5438:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5449:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5457:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5476:4:1",
														"type": ""
													}
												],
												"src": "5328:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5905:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5922:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5933:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5915:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5967:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5972:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5945:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5995:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6006:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5991:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5991:18:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6011:30:1",
																		"type": "",
																		"value": "You have no rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5984:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5984:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6051:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6063:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6059:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6059:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6051:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5882:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5896:4:1",
														"type": ""
													}
												],
												"src": "5731:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6120:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6137:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6140:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6130:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6130:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6237:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6227:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6258:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6261:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6251:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6251:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6088:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6451:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6468:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6479:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6461:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6461:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6502:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6513:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6498:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6518:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6491:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6541:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6552:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6557:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6530:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6623:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6628:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6601:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6601:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6646:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6658:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6669:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6654:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6654:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6646:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6428:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6442:4:1",
														"type": ""
													}
												],
												"src": "6277:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6765:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6811:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6820:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6813:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6813:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6813:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6786:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6795:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6782:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6807:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6778:32:1"
															},
															"nodeType": "YulIf",
															"src": "6775:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6836:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6852:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6846:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6846:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6836:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6731:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6742:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6754:6:1",
														"type": ""
													}
												],
												"src": "6684:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7047:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7064:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7075:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7057:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7057:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7109:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7094:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7114:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7087:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7087:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7148:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7133:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7153:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7126:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7126:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7196:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7208:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7219:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7024:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7038:4:1",
														"type": ""
													}
												],
												"src": "6873:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7282:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7304:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7306:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7306:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7306:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7298:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7301:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7295:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:8:1"
															},
															"nodeType": "YulIf",
															"src": "7292:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7335:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7347:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7350:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7343:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7335:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7264:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7267:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7273:4:1",
														"type": ""
													}
												],
												"src": "7233:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7415:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7534:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7536:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7536:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7536:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7446:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7439:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7439:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7432:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7432:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7454:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7461:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7529:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7457:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7457:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7451:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7451:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7428:105:1"
															},
															"nodeType": "YulIf",
															"src": "7425:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7565:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7580:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7583:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7565:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7394:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7397:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7403:7:1",
														"type": ""
													}
												],
												"src": "7363:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7642:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7673:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7694:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7697:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7687:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7687:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7687:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7795:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7798:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7788:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7788:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7788:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7823:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7826:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7816:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7816:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7816:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7662:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7655:9:1"
															},
															"nodeType": "YulIf",
															"src": "7652:189:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7850:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7859:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7862:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7855:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7850:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7627:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7630:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7636:1:1",
														"type": ""
													}
												],
												"src": "7596:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8004:168:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8014:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8026:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8037:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8022:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8014:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8056:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8071:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8079:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8067:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8049:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8049:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8154:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8139:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8159:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8132:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8132:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7965:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7976:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7984:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7995:4:1",
														"type": ""
													}
												],
												"src": "7875:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8351:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8368:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8379:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8402:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8413:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8398:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8418:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8391:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8391:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8441:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8452:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8437:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8457:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8501:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8513:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8501:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8328:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8342:4:1",
														"type": ""
													}
												],
												"src": "8177:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8712:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8729:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8740:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8722:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8763:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8774:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8759:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8779:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8752:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8752:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8813:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8798:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8818:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8791:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8791:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8846:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8858:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8869:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8854:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8846:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8689:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8703:4:1",
														"type": ""
													}
												],
												"src": "8538:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8964:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9012:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8985:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8994:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8981:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9006:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8977:32:1"
															},
															"nodeType": "YulIf",
															"src": "8974:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9035:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9054:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9048:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9039:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9098:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "9073:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9073:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9073:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9113:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9123:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9113:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8930:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8941:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8953:6:1",
														"type": ""
													}
												],
												"src": "8883:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9313:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9330:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9341:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9323:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9323:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9364:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9375:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9360:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9353:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9403:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9414:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9399:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9399:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9419:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9392:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9392:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9451:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9459:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9459:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9451:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9290:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9304:4:1",
														"type": ""
													}
												],
												"src": "9139:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9566:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9612:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9621:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9624:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9614:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9614:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9614:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9587:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9596:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9583:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9608:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9579:32:1"
															},
															"nodeType": "YulIf",
															"src": "9576:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9637:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9650:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9650:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9641:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9697:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9675:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9675:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9675:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9712:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9722:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9712:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9532:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9543:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9555:6:1",
														"type": ""
													}
												],
												"src": "9488:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9912:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9929:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9940:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9922:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9922:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9963:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9974:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9959:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9959:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9979:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9952:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9952:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10002:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10013:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9998:18:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10018:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9991:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9991:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10073:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10084:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10069:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10069:18:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10089:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10062:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10062:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10111:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10123:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10134:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10119:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10111:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9889:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9903:4:1",
														"type": ""
													}
												],
												"src": "9738:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10323:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10340:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10333:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10333:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10374:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10385:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10370:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10390:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10363:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10363:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10413:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10424:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10409:18:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10429:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10402:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10484:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10495:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10480:18:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10500:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10473:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10473:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10518:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10530:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10541:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10526:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10526:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10518:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10300:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10314:4:1",
														"type": ""
													}
												],
												"src": "10149:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10730:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10747:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10758:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10740:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10740:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10740:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10781:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10792:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10777:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10797:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10770:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10770:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10820:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10831:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10816:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10816:18:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10836:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10809:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10809:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10877:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10889:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10900:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10885:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10877:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10707:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10721:4:1",
														"type": ""
													}
												],
												"src": "10556:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10967:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10977:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10986:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10981:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11046:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11071:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11076:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11067:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11067:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11090:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11095:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11086:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11086:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11080:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11080:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11060:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11060:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11060:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11007:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11010:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11004:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11004:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11018:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11020:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11029:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11032:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11025:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11025:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11020:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11000:3:1",
																"statements": []
															},
															"src": "10996:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11135:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11148:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11153:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11144:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11144:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11162:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11137:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11137:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11137:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11124:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11127:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11121:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11121:13:1"
															},
															"nodeType": "YulIf",
															"src": "11118:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10945:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10950:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10955:6:1",
														"type": ""
													}
												],
												"src": "10914:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11314:137:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11324:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11344:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11338:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11338:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11328:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11386:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11394:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11382:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11401:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11406:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11360:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11360:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11360:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11422:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11433:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11438:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11429:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11290:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11306:3:1",
														"type": ""
													}
												],
												"src": "11177:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11577:321:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11594:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11605:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11587:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11617:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11637:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11631:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11631:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11621:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11675:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11660:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11680:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11653:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11653:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11722:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11730:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11718:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11739:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11750:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11735:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11735:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11755:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11696:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11696:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11696:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11771:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "11806:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11814:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "11802:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11802:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11819:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "11798:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11798:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11783:104:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11889:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11779:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11779:113:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11771:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11546:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11557:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11568:4:1",
														"type": ""
													}
												],
												"src": "11456:442:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), 0xffffffffffffffffffffffffffffffffffffffff))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$122__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$438__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You have no tokens staked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"You don't own this token!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Token lock time has not yet expi\")\n        mstore(add(headStart, 96), \"red\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"You have no rewards to claim\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101825760003560e01c80638da5cb5b116100d8578063ae04d45d1161008c578063f2fde38b11610066578063f2fde38b14610396578063f854a27f146103a9578063f995441b146103bc57600080fd5b8063ae04d45d14610350578063b5a5e50914610363578063d1af0c7d1461037657600080fd5b80639168ae72116100bd5780639168ae72146102bd5780639406704514610307578063a694fc3a1461033d57600080fd5b80638da5cb5b146102915780638e7271fa146102b457600080fd5b806354fd4d501161013a5780636588103b116101145780636588103b146102315780636aa4439f14610276578063715018a61461028957600080fd5b806354fd4d50146101fd5780635c975abb1461020657806363c28db11461021157600080fd5b80632e1a7d4d1161016b5780632e1a7d4d146101c35780633166b848146101d8578063372500ab146101f557600080fd5b80630d66808714610187578063114cd3c8146101a3575b600080fd5b61019060085481565b6040519081526020015b60405180910390f35b6101906101b1366004611790565b600b6020526000908152604090205481565b6101d66101d1366004611790565b6103c4565b005b6007546101e59060ff1681565b604051901515815260200161019a565b6101d661082e565b61019060065481565b60015460ff166101e5565b61022461021f3660046117cb565b610908565b60405161019a91906117e8565b6003546102519073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161019a565b6101d6610284366004611865565b610bb9565b6101d6610bf2565b600154610100900473ffffffffffffffffffffffffffffffffffffffff16610251565b61019060055481565b6102ec6102cb3660046117cb565b60096020526000908152604090208054600282015460039092015490919083565b6040805193845260208401929092529082015260600161019a565b610251610315366004611790565b600a6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6101d661034b366004611790565b610c06565b6101d661035e366004611790565b610c2a565b6101d6610371366004611790565b610c37565b6002546102519073ffffffffffffffffffffffffffffffffffffffff1681565b6101d66103a43660046117cb565b610c44565b6101906103b73660046117cb565b610cf8565b6101d6610d3d565b6103cc610e07565b33600090815260096020526040902054610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f752068617665206e6f20746f6b656e73207374616b65640000000000000060448201526064015b60405180910390fd5b6000818152600a602052604090205473ffffffffffffffffffffffffffffffffffffffff1633146104d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000604482015260640161043e565b60075460ff16801561050057506008546000828152600b602052604090205442916104fe916118b1565b105b8061050e575060075460ff16155b61059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f546f6b656e206c6f636b2074696d6520686173206e6f7420796574206578706960448201527f7265640000000000000000000000000000000000000000000000000000000000606482015260840161043e565b60006105a533610e7b565b336000908152600960205260408120600301805492935083929091906105cc9084906118b1565b9091555060009050805b3360009081526009602052604090206001015481101561069e57336000908152600960205260409020600101805485919083908110610617576106176118c9565b90600052602060002090600302016001015414801561067f5750336000908152600960205260408120600101805483908110610655576106556118c9565b600091825260209091206003909102015473ffffffffffffffffffffffffffffffffffffffff1614155b1561068c5780915061069e565b80610696816118f8565b9150506105d6565b503360009081526009602052604081206001018054839081106106c3576106c36118c9565b6000918252602080832060039290920290910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff949094169390931790925533815260099091526040812080549161073283611931565b90915550506000838152600a6020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055600b9091528082209190915560035490517f23b872dd0000000000000000000000000000000000000000000000000000000081523060048201523360248201526044810185905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b5050336000908152600960205260409020426002909101555061082b9250610ee2915050565b50565b33600081815260096020526040812060030154909161084c90610e7b565b61085691906118b1565b9050600081116108c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f596f752068617665206e6f207265776172647320746f20636c61696d00000000604482015260640161043e565b336000818152600960205260408120426002808301919091556003909101919091555461082b9173ffffffffffffffffffffffffffffffffffffffff9091169083610ee9565b73ffffffffffffffffffffffffffffffffffffffff811660009081526009602052604090205460609015610b4f5773ffffffffffffffffffffffffffffffffffffffff821660009081526009602052604081205467ffffffffffffffff81111561097457610974611966565b6040519080825280602002602001820160405280156109df57816020015b6109cc6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b8152602001906001900390816109925790505b5090506000805b73ffffffffffffffffffffffffffffffffffffffff8516600090815260096020526040902060010154811015610b465773ffffffffffffffffffffffffffffffffffffffff85166000908152600960205260408120600101805483908110610a5057610a506118c9565b600091825260209091206003909102015473ffffffffffffffffffffffffffffffffffffffff1614610b345773ffffffffffffffffffffffffffffffffffffffff85166000908152600960205260409020600101805482908110610ab657610ab66118c9565b6000918252602091829020604080516060810182526003909302909101805473ffffffffffffffffffffffffffffffffffffffff168352600181015493830193909352600290920154918101919091528351849084908110610b1a57610b1a6118c9565b60200260200101819052508180610b30906118f8565b9250505b80610b3e816118f8565b9150506109e6565b50909392505050565b6040805160008082526020820190925290610bb2565b610b9f6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b815260200190600190039081610b655790505b5092915050565b610bc1610f7b565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b610bfa610f7b565b610c046000611002565b565b610c0e610e07565b610c16611080565b610c2033826110ed565b61082b6001600055565b610c32610f7b565b600855565b610c3f610f7b565b600555565b610c4c610f7b565b73ffffffffffffffffffffffffffffffffffffffff8116610cef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161043e565b61082b81611002565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600960205260408120600301548190610d2c84610e7b565b610d3691906118b1565b9392505050565b610d45610f7b565b610d4d61142e565b6002546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de09190611995565b60025490915061082b9073ffffffffffffffffffffffffffffffffffffffff163383610ee9565b60026000541415610e74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161043e565b6002600055565b60055473ffffffffffffffffffffffffffffffffffffffff8216600090815260096020526040812080546002909101549192610e1092909190610ebe90426119ae565b610ec891906119c5565b610ed291906119c5565b610edc9190611a02565b92915050565b6001600055565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610f7690849061149a565b505050565b60015473ffffffffffffffffffffffffffffffffffffffff610100909104163314610c04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043e565b6001805473ffffffffffffffffffffffffffffffffffffffff8381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff85161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60015460ff1615610c04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161043e565b6003546040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff848116921690636352211e90602401602060405180830381865afa15801561115e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111829190611a3d565b73ffffffffffffffffffffffffffffffffffffffff16146111ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000604482015260640161043e565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600960205260409020541561127957600061123583610e7b565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600960205260408120600301805492935083929091906112729084906118b1565b9091555050505b6003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015230602483015260448201849052909116906323b872dd90606401600060405180830381600087803b1580156112f357600080fd5b505af1158015611307573d6000803e3d6000fd5b50506040805160608101825273ffffffffffffffffffffffffffffffffffffffff868116808352602080840188815242858701908152600084815260098452968720600180820180548083018255908a52948920885160039096020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001695909716949094178655915192850192909255905160029093019290925583528054919450909250906113b9836118f8565b9091555050506000908152600a60209081526040808320805473ffffffffffffffffffffffffffffffffffffffff9095167fffffffffffffffffffffffff000000000000000000000000000000000000000090951685179055600b825280832042908190559383526009909152902060020155565b60015460ff16610c04576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161043e565b60006114fc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166115a69092919063ffffffff16565b805190915015610f76578080602001905181019061151a9190611a5a565b610f76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161043e565b60606115b584846000856115bd565b949350505050565b60608247101561164f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161043e565b843b6116b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161043e565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516116e09190611aa7565b60006040518083038185875af1925050503d806000811461171d576040519150601f19603f3d011682016040523d82523d6000602084013e611722565b606091505b509150915061173282828661173d565b979650505050505050565b6060831561174c575081610d36565b82511561175c5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e9190611ac3565b6000602082840312156117a257600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461082b57600080fd5b6000602082840312156117dd57600080fd5b8135610d36816117a9565b602080825282518282018190526000919060409081850190868401855b8281101561184a578151805173ffffffffffffffffffffffffffffffffffffffff16855286810151878601528501518585015260609093019290850190600101611805565b5091979650505050505050565b801515811461082b57600080fd5b60006020828403121561187757600080fd5b8135610d3681611857565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156118c4576118c4611882565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561192a5761192a611882565b5060010190565b60008161194057611940611882565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156119a757600080fd5b5051919050565b6000828210156119c0576119c0611882565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119fd576119fd611882565b500290565b600082611a38577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611a4f57600080fd5b8151610d36816117a9565b600060208284031215611a6c57600080fd5b8151610d3681611857565b60005b83811015611a92578181015183820152602001611a7a565b83811115611aa1576000848401525b50505050565b60008251611ab9818460208701611a77565b9190910192915050565b6020815260008251806020840152611ae2816040850160208701611a77565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212205aa298f2b8ba8a740ed41003ccefd694b3493a802bbc6af21b46a4a8ceafcdbb64736f6c634300080c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xAE04D45D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xF995441B EQ PUSH2 0x3BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAE04D45D EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xB5A5E509 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9168AE72 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8E7271FA EQ PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x54FD4D50 GT PUSH2 0x13A JUMPI DUP1 PUSH4 0x6588103B GT PUSH2 0x114 JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x6AA4439F EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x16B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x3166B848 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD668087 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x114CD3C8 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x190 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1E5 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x82E JUMP JUMPDEST PUSH2 0x190 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1E5 JUMP JUMPDEST PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x251 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0xBF2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x251 JUMP JUMPDEST PUSH2 0x190 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2EC PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x19A JUMP JUMPDEST PUSH2 0x251 PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0xC2A JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1790 JUMP JUMPDEST PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x251 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x190 PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x17CB JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x3CC PUSH2 0xE07 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x447 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x500 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP2 PUSH2 0x4FE SWAP2 PUSH2 0x18B1 JUMP JUMPDEST LT JUMPDEST DUP1 PUSH2 0x50E JUMPI POP PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206C6F636B2074696D6520686173206E6F74207965742065787069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265640000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A5 CALLER PUSH2 0xE7B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5CC SWAP1 DUP5 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x69E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x617 JUMPI PUSH2 0x617 PUSH2 0x18C9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x67F JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x655 JUMPI PUSH2 0x655 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x68C JUMPI DUP1 SWAP2 POP PUSH2 0x69E JUMP JUMPDEST DUP1 PUSH2 0x696 DUP2 PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5D6 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6C3 JUMPI PUSH2 0x6C3 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x732 DUP4 PUSH2 0x1931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP PUSH2 0x82B SWAP3 POP PUSH2 0xEE2 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 PUSH2 0x84C SWAP1 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 TIMESTAMP PUSH1 0x2 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH2 0x82B SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xEE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 ISZERO PUSH2 0xB4F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH2 0x974 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9DF JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x9CC PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x992 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0xB46 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xA50 JUMPI PUSH2 0xA50 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB34 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xAB6 JUMPI PUSH2 0xAB6 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xB1A JUMPI PUSH2 0xB1A PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xB30 SWAP1 PUSH2 0x18F8 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xB3E DUP2 PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9E6 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0xB9F PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB65 JUMPI SWAP1 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBC1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xBFA PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xC04 PUSH1 0x0 PUSH2 0x1002 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xC0E PUSH2 0xE07 JUMP JUMPDEST PUSH2 0xC16 PUSH2 0x1080 JUMP JUMPDEST PUSH2 0xC20 CALLER DUP3 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x82B PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH2 0xC32 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH2 0xC3F PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH2 0xC4C PUSH2 0xF7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH2 0x82B DUP2 PUSH2 0x1002 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD DUP2 SWAP1 PUSH2 0xD2C DUP5 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0xD36 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD45 PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xD4D PUSH2 0x142E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE0 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH2 0x82B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP2 SWAP3 PUSH2 0xE10 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xEBE SWAP1 TIMESTAMP PUSH2 0x19AE JUMP JUMPDEST PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xED2 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0xEDC SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0xF76 SWAP1 DUP5 SWAP1 PUSH2 0x149A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6352211E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x115E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x1A3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 PUSH2 0x1235 DUP4 PUSH2 0xE7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1272 SWAP1 DUP5 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1307 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE TIMESTAMP DUP6 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE SWAP7 DUP8 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE SWAP1 DUP11 MSTORE SWAP5 DUP10 KECCAK256 DUP9 MLOAD PUSH1 0x3 SWAP1 SWAP7 MUL ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP6 SWAP1 SWAP8 AND SWAP5 SWAP1 SWAP5 OR DUP7 SSTORE SWAP2 MLOAD SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP4 MSTORE DUP1 SLOAD SWAP2 SWAP5 POP SWAP1 SWAP3 POP SWAP1 PUSH2 0x13B9 DUP4 PUSH2 0x18F8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP6 AND DUP6 OR SWAP1 SSTORE PUSH1 0xB DUP3 MSTORE DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 DUP2 SWAP1 SSTORE SWAP4 DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14FC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xF76 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x151A SWAP2 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0xF76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x15B5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x15BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x43E JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x43E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x1AA7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1722 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1732 DUP3 DUP3 DUP7 PUSH2 0x173D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x174C JUMPI POP DUP2 PUSH2 0xD36 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x175C JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD36 DUP2 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x184A JUMPI DUP2 MLOAD DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1805 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD36 DUP2 PUSH2 0x1857 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18C4 JUMPI PUSH2 0x18C4 PUSH2 0x1882 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x192A JUMPI PUSH2 0x192A PUSH2 0x1882 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1940 JUMPI PUSH2 0x1940 PUSH2 0x1882 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19C0 PUSH2 0x1882 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FD PUSH2 0x1882 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A38 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD36 DUP2 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD36 DUP2 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A92 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A7A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1AB9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A77 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AE2 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG2 SWAP9 CALLCODE 0xB8 0xBA DUP11 PUSH21 0xED41003CCEFD694B3493A802BBC6AF21B46A4A8CE 0xAF 0xCD 0xBB PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "28878:6306:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29654:27;;;;;;;;;160:25:1;;;148:2;133:18;29654:27:0;;;;;;;;29938:54;;;;;;:::i;:::-;;;;;;;;;;;;;;32143:1429;;;;;;:::i;:::-;;:::i;:::-;;29605:31;;;;;;;;;;;;546:14:1;;539:22;521:41;;509:2;494:18;29605:31:0;381:187:1;33888:386:0;;;:::i;29570:26::-;;;;;;15972:86;16043:7;;;;15972:86;;34282:680;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;29393:28::-;;;;;;;;;;;;2080:42:1;2068:55;;;2050:74;;2038:2;2023:18;29393:28:0;1889:241:1;30514:107:0;;;;;;:::i;:::-;;:::i;28059:103::-;;;:::i;27411:87::-;27484:6;;;;;;;27411:87;;29523:38;;;;;;29709:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2937:25:1;;;2993:2;2978:18;;2971:34;;;;3021:18;;;3014:34;2925:2;2910:18;29709:41:0;2735:319:1;29836:48:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;32019:116;;;;;;:::i;:::-;;:::i;30638:98::-;;;;;;:::i;:::-;;:::i;30742:122::-;;;;;;:::i;:::-;;:::i;29360:26::-;;;;;;;;;28317:201;;;;;;:::i;:::-;;:::i;34970:209::-;;;;;;:::i;:::-;;:::i;31816:195::-;;;:::i;32143:1429::-;18356:21;:19;:21::i;:::-;32242:10:::1;32269:1;32234:19:::0;;;:7:::1;:19;::::0;;;;:32;32212:111:::1;;;::::0;::::1;::::0;;3506:2:1;32212:111:0::1;::::0;::::1;3488:21:1::0;3545:2;3525:18;;;3518:30;3584:27;3564:18;;;3557:55;3629:18;;32212:111:0::1;;;;;;;;;32342:23;::::0;;;:13:::1;:23;::::0;;;;;:37:::1;:23;32369:10;32342:37;32334:75;;;::::0;::::1;::::0;;3860:2:1;32334:75:0::1;::::0;::::1;3842:21:1::0;3899:2;3879:18;;;3872:30;3938:27;3918:18;;;3911:55;3983:18;;32334:75:0::1;3658:349:1::0;32334:75:0::1;32445:11;::::0;::::1;;:77:::0;::::1;;;-1:-1:-1::0;32494:8:0::1;::::0;32462:29:::1;::::0;;;:19:::1;:29;::::0;;;;;32506:15:::1;::::0;32462:40:::1;::::0;::::1;:::i;:::-;32461:60;32445:77;32444:95;;;-1:-1:-1::0;32528:11:0::1;::::0;::::1;;32527:12;32444:95;32422:180;;;::::0;::::1;::::0;;4536:2:1;32422:180:0::1;::::0;::::1;4518:21:1::0;4575:2;4555:18;;;4548:30;4614:34;4594:18;;;4587:62;4685:5;4665:18;;;4658:33;4708:19;;32422:180:0::1;4334:399:1::0;32422:180:0::1;32714:15;32732:28;32749:10;32732:16;:28::i;:::-;32779:10;32771:19;::::0;;;:7:::1;:19;::::0;;;;:36:::1;;:47:::0;;32714:46;;-1:-1:-1;32714:46:0;;32771:36;;:19;:47:::1;::::0;32714:46;;32771:47:::1;:::i;:::-;::::0;;;-1:-1:-1;32833:13:0::1;::::0;-1:-1:-1;32833:13:0;32861:353:::1;32893:10;32885:19;::::0;;;:7:::1;:19;::::0;;;;:32:::1;;:39:::0;32881:43;::::1;32861:353;;;32976:10;32968:19;::::0;;;:7:::1;:19;::::0;;;;:32:::1;;:35:::0;;33015:8;;32968:32;33001:1;;32968:35;::::1;;;;;:::i;:::-;;;;;;;;;;;:43;;;:55;:151;;;;-1:-1:-1::0;33071:10:0::1;33117:1;33063:19:::0;;;:7:::1;:19;::::0;;;;:32:::1;;:35:::0;;33096:1;;33063:35;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:42:::0;::::1;;:56;;32968:151;32946:257;;;33162:1;33154:9;;33182:5;;32946:257;32926:3:::0;::::1;::::0;::::1;:::i;:::-;;;;32861:353;;;-1:-1:-1::0;33236:10:0::1;33285:1;33228:19:::0;;;:7:::1;:19;::::0;;;;:32:::1;;:39:::0;;33261:5;;33228:39;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;:59:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;33306:10:::1;33298:19:::0;;:7:::1;:19:::0;;;;;;:34;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;33377:1:0::1;33343:23:::0;;;:13:::1;:23;::::0;;;;;;;:36;;;::::1;::::0;;33390:19:::1;:29:::0;;;;;;:33;;;;33436:13:::1;::::0;:63;;;;;33471:4:::1;33436:63;::::0;::::1;5591:34:1::0;33478:10:0::1;5641:18:1::0;;;5634:43;5693:18;;;5686:34;;;33343:36:0::1;33436:13:::0;;::::1;::::0;:26:::1;::::0;5503:18:1;;33436:63:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;33518:10:0::1;33510:19;::::0;;;:7:::1;:19;::::0;;;;33549:15:::1;33510:36;::::0;;::::1;:54:::0;-1:-1:-1;18400:20:0;;-1:-1:-1;18400:18:0;;-1:-1:-1;;18400:20:0:i;:::-;32143:1429;:::o;33888:386::-;34002:10;33932:15;33994:19;;;:7;:19;;;;;:36;;;33932:15;;33950:28;;:16;:28::i;:::-;:80;;;;:::i;:::-;33932:98;;34059:1;34049:7;:11;34041:52;;;;;;;5933:2:1;34041:52:0;;;5915:21:1;5972:2;5952:18;;;5945:30;6011;5991:18;;;5984:58;6059:18;;34041:52:0;5731:352:1;34041:52:0;34112:10;34104:19;;;;:7;:19;;;;;34143:15;34104:36;;;;:54;;;;34169:36;;;;:40;;;;34220:12;:46;;34104:19;34220:12;;;;34258:7;34220:25;:46::i;34282:680::-;34380:14;;;34410:1;34380:14;;;:7;:14;;;;;:27;34343:20;;34380:31;34376:579;;34483:14;;;34428:34;34483:14;;;:7;:14;;;;;:27;34465:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;34465:46:0;;;;;;;;;;;;;;;;;34428:83;;34526:14;34566:9;34561:286;34585:14;;;;;;;:7;:14;;;;;:27;;:34;34581:38;;34561:286;;;34649:53;:14;;34699:1;34649:14;;;:7;:14;;;;;:27;;:30;;34677:1;;34649:30;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;:53;34645:187;;34751:14;;;;;;;:7;:14;;;;;:27;;:30;;34779:1;;34751:30;;;;;;:::i;:::-;;;;;;;;;;34727:54;;;;;;;;34751:30;;;;;;;34727:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:21;;:13;;34741:6;;34727:21;;;;;;:::i;:::-;;;;;;:54;;;;34804:8;;;;;:::i;:::-;;;;34645:187;34621:3;;;;:::i;:::-;;;;34561:286;;;-1:-1:-1;34870:13:0;;34282:680;-1:-1:-1;;;34282:680:0:o;34376:579::-;34923:20;;;34941:1;34923:20;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;34923:20:0;;;;;;;;;;;;;;;;-1:-1:-1;34916:27:0;34282:680;-1:-1:-1;;34282:680:0:o;30514:107::-;27297:13;:11;:13::i;:::-;30587:11:::1;:26:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;30514:107::o;28059:103::-;27297:13;:11;:13::i;:::-;28124:30:::1;28151:1;28124:18;:30::i;:::-;28059:103::o:0;32019:116::-;18356:21;:19;:21::i;:::-;15577:19:::1;:17;:19::i;:::-;32099:28:::2;32106:10;32118:8;32099:6;:28::i;:::-;18400:20:::0;17794:1;18916:7;:22;18733:213;30638:98;27297:13;:11;:13::i;:::-;30708:8:::1;:20:::0;30638:98::o;30742:122::-;27297:13;:11;:13::i;:::-;30824:14:::1;:32:::0;30742:122::o;28317:201::-;27297:13;:11;:13::i;:::-;28406:22:::1;::::0;::::1;28398:73;;;::::0;::::1;::::0;;6479:2:1;28398:73:0::1;::::0;::::1;6461:21:1::0;6518:2;6498:18;;;6491:30;6557:34;6537:18;;;6530:62;6628:8;6608:18;;;6601:36;6654:19;;28398:73:0::1;6277:402:1::0;28398:73:0::1;28482:28;28501:8;28482:18;:28::i;34970:209::-:0;35113:16;;;35034:7;35113:16;;;:7;:16;;;;;:33;;;35034:7;;35072:25;35121:7;35072:16;:25::i;:::-;:74;;;;:::i;:::-;35054:92;34970:209;-1:-1:-1;;;34970:209:0:o;31816:195::-;27297:13;:11;:13::i;:::-;15836:16:::1;:14;:16::i;:::-;31908:12:::2;::::0;:37:::2;::::0;;;;31939:4:::2;31908:37;::::0;::::2;2050:74:1::0;31889:16:0::2;::::0;31908:12:::2;;::::0;:22:::2;::::0;2023:18:1;;31908:37:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31956:12;::::0;31889:56;;-1:-1:-1;31956:47:0::2;::::0;:12:::2;;31982:10;31889:56:::0;31956:25:::2;:47::i;18436:289::-:0;17838:1;18566:7;;:19;;18558:63;;;;;;;7075:2:1;18558:63:0;;;7057:21:1;7114:2;7094:18;;;7087:30;7153:33;7133:18;;;7126:61;7204:18;;18558:63:0;6873:355:1;18558:63:0;17838:1;18699:7;:18;18436:289::o;33580:300::-;33849:14;;33805:16;;;33673;33805;;;:7;:16;;;;;:29;;33751:33;;;;;33673:16;;33867:4;;33849:14;;33805:29;33733:51;;:15;:51;:::i;:::-;33732:102;;;;:::i;:::-;33716:147;;;;:::i;:::-;33715:156;;;;:::i;:::-;33707:165;33580:300;-1:-1:-1;;33580:300:0:o;18733:213::-;17794:1;18916:7;:22;18733:213::o;23768:177::-;23878:58;;;8079:42:1;8067:55;;23878:58:0;;;8049:74:1;8139:18;;;;8132:34;;;23878:58:0;;;;;;;;;;8022:18:1;;;;23878:58:0;;;;;;;;;;23901:23;23878:58;;;23851:86;;23871:5;;23851:19;:86::i;:::-;23768:177;;;:::o;27576:132::-;27484:6;;27640:23;27484:6;;;;;14778:10;27640:23;27632:68;;;;;;;8379:2:1;27632:68:0;;;8361:21:1;;;8398:18;;;8391:30;8457:34;8437:18;;;8430:62;8509:18;;27632:68:0;8177:356:1;28678:191:0;28771:6;;;;28788:17;;;28771:6;28788:17;;;;;;;;;;28821:40;;28771:6;;;;;;;;28821:40;;28752:16;;28821:40;28741:128;28678:191;:::o;16131:108::-;16043:7;;;;16201:9;16193:38;;;;;;;8740:2:1;16193:38:0;;;8722:21:1;8779:2;8759:18;;;8752:30;8818:18;8798;;;8791:46;8854:18;;16193:38:0;8538:340:1;30872:936:0;30965:13;;:31;;;;;;;;160:25:1;;;30965:42:0;;;;;:13;;:21;;133:18:1;;30965:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;30943:117;;;;;;;3860:2:1;30943:117:0;;;3842:21:1;3899:2;3879:18;;;3872:30;3938:27;3918:18;;;3911:55;3983:18;;30943:117:0;3658:349:1;30943:117:0;31077:16;;;31109:1;31077:16;;;:7;:16;;;;;:29;:33;31073:168;;31127:15;31145:25;31162:7;31145:16;:25::i;:::-;31185:16;;;;;;;:7;:16;;;;;:33;;:44;;31127:43;;-1:-1:-1;31127:43:0;;31185:33;;:16;:44;;31127:43;;31185:44;:::i;:::-;;;;-1:-1:-1;;;31073:168:0;31253:13;;:60;;;;;:13;5609:15:1;;;31253:60:0;;;5591:34:1;31297:4:0;5641:18:1;;;5634:43;5693:18;;;5686:34;;;31253:13:0;;;;:26;;5503:18:1;;31253:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;31359:164:0;;;;;;;;;;;;;;;;;;;;;;31490:15;31359:164;;;;;;-1:-1:-1;31534:16:0;;;:7;:16;;;;;:29;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31592:16;;:31;;31359:164;;-1:-1:-1;31592:31:0;;-1:-1:-1;31534:16:0;31592:31;;;:::i;:::-;;;;-1:-1:-1;;;31634:23:0;;;;:13;:23;;;;;;;;:33;;;;;;;;;;;;;;31678:19;:29;;;;;31710:15;31678:47;;;;31749:16;;;:7;:16;;;;;:33;;:51;30872:936::o;16316:108::-;16043:7;;;;16375:41;;;;;;;9341:2:1;16375:41:0;;;9323:21:1;9380:2;9360:18;;;9353:30;9419:22;9399:18;;;9392:50;9459:18;;16375:41:0;9139:344:1;26073:761:0;26497:23;26523:69;26551:4;26523:69;;;;;;;;;;;;;;;;;26531:5;26523:27;;;;:69;;;;;:::i;:::-;26607:17;;26497:95;;-1:-1:-1;26607:21:0;26603:224;;26749:10;26738:30;;;;;;;;;;;;:::i;:::-;26730:85;;;;;;;9940:2:1;26730:85:0;;;9922:21:1;9979:2;9959:18;;;9952:30;10018:34;9998:18;;;9991:62;10089:12;10069:18;;;10062:40;10119:19;;26730:85:0;9738:406:1;8687:195:0;8790:12;8822:52;8844:6;8852:4;8858:1;8861:12;8822:21;:52::i;:::-;8815:59;8687:195;-1:-1:-1;;;;8687:195:0:o;9739:530::-;9866:12;9924:5;9899:21;:30;;9891:81;;;;;;;10351:2:1;9891:81:0;;;10333:21:1;10390:2;10370:18;;;10363:30;10429:34;10409:18;;;10402:62;10500:8;10480:18;;;10473:36;10526:19;;9891:81:0;10149:402:1;9891:81:0;6136:20;;9983:60;;;;;;;10758:2:1;9983:60:0;;;10740:21:1;10797:2;10777:18;;;10770:30;10836:31;10816:18;;;10809:59;10885:18;;9983:60:0;10556:353:1;9983:60:0;10117:12;10131:23;10158:6;:11;;10178:5;10186:4;10158:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10116:75;;;;10209:52;10227:7;10236:10;10248:12;10209:17;:52::i;:::-;10202:59;9739:530;-1:-1:-1;;;;;;;9739:530:0:o;11275:742::-;11390:12;11419:7;11415:595;;;-1:-1:-1;11450:10:0;11443:17;;11415:595;11564:17;;:21;11560:439;;11827:10;11821:17;11888:15;11875:10;11871:2;11867:19;11860:44;11560:439;11970:12;11963:20;;;;;;;;;;;:::i;196:180:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:1;;196:180;-1:-1:-1;196:180:1:o;573:154::-;659:42;652:5;648:54;641:5;638:65;628:93;;717:1;714;707:12;732:247;791:6;844:2;832:9;823:7;819:23;815:32;812:52;;;860:1;857;850:12;812:52;899:9;886:23;918:31;943:5;918:31;:::i;984:900::-;1213:2;1265:21;;;1335:13;;1238:18;;;1357:22;;;1184:4;;1213:2;1398;;1416:18;;;;1457:15;;;1184:4;1500:358;1514:6;1511:1;1508:13;1500:358;;;1573:13;;1615:9;;1626:42;1611:58;1599:71;;1710:11;;;1704:18;1690:12;;;1683:40;1763:11;;1757:18;1743:12;;;1736:40;1805:4;1796:14;;;;1833:15;;;;1536:1;1529:9;1500:358;;;-1:-1:-1;1875:3:1;;984:900;-1:-1:-1;;;;;;;984:900:1:o;2135:118::-;2221:5;2214:13;2207:21;2200:5;2197:32;2187:60;;2243:1;2240;2233:12;2258:241;2314:6;2367:2;2355:9;2346:7;2342:23;2338:32;2335:52;;;2383:1;2380;2373:12;2335:52;2422:9;2409:23;2441:28;2463:5;2441:28;:::i;4012:184::-;4064:77;4061:1;4054:88;4161:4;4158:1;4151:15;4185:4;4182:1;4175:15;4201:128;4241:3;4272:1;4268:6;4265:1;4262:13;4259:39;;;4278:18;;:::i;:::-;-1:-1:-1;4314:9:1;;4201:128::o;4738:184::-;4790:77;4787:1;4780:88;4887:4;4884:1;4877:15;4911:4;4908:1;4901:15;4927:195;4966:3;4997:66;4990:5;4987:77;4984:103;;;5067:18;;:::i;:::-;-1:-1:-1;5114:1:1;5103:13;;4927:195::o;5127:196::-;5166:3;5194:5;5184:39;;5203:18;;:::i;:::-;-1:-1:-1;5250:66:1;5239:78;;5127:196::o;6088:184::-;6140:77;6137:1;6130:88;6237:4;6234:1;6227:15;6261:4;6258:1;6251:15;6684:184;6754:6;6807:2;6795:9;6786:7;6782:23;6778:32;6775:52;;;6823:1;6820;6813:12;6775:52;-1:-1:-1;6846:16:1;;6684:184;-1:-1:-1;6684:184:1:o;7233:125::-;7273:4;7301:1;7298;7295:8;7292:34;;;7306:18;;:::i;:::-;-1:-1:-1;7343:9:1;;7233:125::o;7363:228::-;7403:7;7529:1;7461:66;7457:74;7454:1;7451:81;7446:1;7439:9;7432:17;7428:105;7425:131;;;7536:18;;:::i;:::-;-1:-1:-1;7576:9:1;;7363:228::o;7596:274::-;7636:1;7662;7652:189;;7697:77;7694:1;7687:88;7798:4;7795:1;7788:15;7826:4;7823:1;7816:15;7652:189;-1:-1:-1;7855:9:1;;7596:274::o;8883:251::-;8953:6;9006:2;8994:9;8985:7;8981:23;8977:32;8974:52;;;9022:1;9019;9012:12;8974:52;9054:9;9048:16;9073:31;9098:5;9073:31;:::i;9488:245::-;9555:6;9608:2;9596:9;9587:7;9583:23;9579:32;9576:52;;;9624:1;9621;9614:12;9576:52;9656:9;9650:16;9675:28;9697:5;9675:28;:::i;10914:258::-;10986:1;10996:113;11010:6;11007:1;11004:13;10996:113;;;11086:11;;;11080:18;11067:11;;;11060:39;11032:2;11025:10;10996:113;;;11127:6;11124:1;11121:13;11118:48;;;11162:1;11153:6;11148:3;11144:16;11137:27;11118:48;;10914:258;;;:::o;11177:274::-;11306:3;11344:6;11338:13;11360:53;11406:6;11401:3;11394:4;11386:6;11382:17;11360:53;:::i;:::-;11429:16;;;;;11177:274;-1:-1:-1;;11177:274:1:o;11456:442::-;11605:2;11594:9;11587:21;11568:4;11637:6;11631:13;11680:6;11675:2;11664:9;11660:18;11653:34;11696:66;11755:6;11750:2;11739:9;11735:18;11730:2;11722:6;11718:15;11696:66;:::i;:::-;11814:2;11802:15;11819:66;11798:88;11783:104;;;;11889:2;11779:113;;11456:442;-1:-1:-1;;11456:442:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1397200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"adminWithdrawRewards()": "infinite",
								"availableRewards(address)": "infinite",
								"claimRewards()": "infinite",
								"getStakedTokens(address)": "infinite",
								"lockEnabled()": "2378",
								"lockTime()": "2331",
								"nftCollection()": "2358",
								"owner()": "2364",
								"paused()": "2372",
								"renounceOwnership()": "infinite",
								"rewardsPerHour()": "2352",
								"rewardsToken()": "2402",
								"setLockEnabled(bool)": "26753",
								"setLockTime(uint256)": "24535",
								"setRewardsPerHour(uint256)": "24557",
								"stake(uint256)": "infinite",
								"stakerAddress(uint256)": "2520",
								"stakers(address)": "6821",
								"tokenStartStakeTime(uint256)": "2496",
								"transferOwnership(address)": "infinite",
								"version()": "2330",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_stake(address,uint256)": "infinite",
								"calculateRewards(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28878,
									"end": 35184,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29555,
									"end": 29561,
									"name": "PUSH",
									"source": 0,
									"value": "186A0"
								},
								{
									"begin": 29523,
									"end": 29561,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 29523,
									"end": 29561,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29595,
									"end": 29596,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 29570,
									"end": 29596,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 29570,
									"end": 29596,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29605,
									"end": 29636,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29605,
									"end": 29636,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29605,
									"end": 29636,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 29605,
									"end": 29636,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29605,
									"end": 29636,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29605,
									"end": 29636,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 29654,
									"end": 29681,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 29654,
									"end": 29681,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30011,
									"end": 30495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17794,
									"end": 17795,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17905,
									"end": 17912,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17905,
									"end": 17927,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17905,
									"end": 17927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17905,
									"end": 17927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15323,
									"end": 15338,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27132,
									"end": 27164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 14778,
									"end": 14788,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 27132,
									"end": 27150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27132,
									"end": 27164,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27132,
									"end": 27164,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 27132,
									"end": 27164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30237,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30224,
									"end": 30263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30294,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30274,
									"end": 30311,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30334,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 30322,
									"end": 30350,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30361,
									"end": 30375,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 30361,
									"end": 30393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30404,
									"end": 30412,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 30404,
									"end": 30424,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30462,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30451,
									"end": 30477,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28869,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28678,
									"end": 28869,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 28788,
									"end": 28805,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 28777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28752,
									"end": 28768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28752,
									"end": 28768,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28821,
									"end": 28861,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 28741,
									"end": 28869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28678,
									"end": 28869,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 79,
									"end": 121,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 79,
									"end": 121,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 69,
									"end": 139,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 133,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 137,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 69,
									"end": 139,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 835,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 267,
									"end": 273,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 281,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 299,
									"end": 305,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 355,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 340,
									"end": 349,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 331,
									"end": 338,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 327,
									"end": 350,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 323,
									"end": 356,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 320,
									"end": 373,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 320,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 320,
									"end": 373,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 320,
									"end": 373,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 320,
									"end": 373,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 410,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 395,
									"end": 411,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 420,
									"end": 451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 445,
									"end": 450,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 420,
									"end": 451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 420,
									"end": 451,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 420,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 420,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 522,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 505,
									"end": 523,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 505,
									"end": 523,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 524,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 470,
									"end": 475,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 470,
									"end": 475,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 533,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 499,
									"end": 524,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 533,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 533,
									"end": 566,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 533,
									"end": 566,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 533,
									"end": 566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 632,
									"end": 634,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 635,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 617,
									"end": 635,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 611,
									"end": 636,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 681,
									"end": 683,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 666,
									"end": 684,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 666,
									"end": 684,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 660,
									"end": 685,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 585,
									"end": 592,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 585,
									"end": 592,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 611,
									"end": 636,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 723,
									"end": 738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 723,
									"end": 738,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 716,
									"end": 739,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 704,
									"end": 740,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 704,
									"end": 740,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 694,
									"end": 758,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 694,
									"end": 758,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 754,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 752,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 744,
									"end": 756,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 694,
									"end": 758,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 694,
									"end": 758,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 777,
									"end": 784,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 767,
									"end": 784,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 767,
									"end": 784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 767,
									"end": 784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 824,
									"end": 827,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 813,
									"end": 822,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 803,
									"end": 829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 793,
									"end": 829,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 793,
									"end": 829,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 835,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 835,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 150,
									"end": 835,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28878,
									"end": 35184,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205aa298f2b8ba8a740ed41003ccefd694b3493a802bbc6af21b46a4a8ceafcdbb64736f6c634300080c0033",
									".code": [
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "AE04D45D"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "F854A27F"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "F995441B"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "AE04D45D"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "B5A5E509"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "9168AE72"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "9168AE72"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "94067045"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "8E7271FA"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "6588103B"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "6588103B"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "6AA4439F"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "54FD4D50"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "63C28DB1"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "3166B848"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "372500AB"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "D668087"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "114CD3C8"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28878,
											"end": 35184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29654,
											"end": 29681,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29992,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 546,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 560,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 521,
											"end": 562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 562,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29605,
											"end": 29636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 381,
											"end": 568,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33888,
											"end": 34274,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33888,
											"end": 34274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33888,
											"end": 34274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 33888,
											"end": 34274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33888,
											"end": 34274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29570,
											"end": 29596,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29570,
											"end": 29596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29570,
											"end": 29596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29570,
											"end": 29596,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29570,
											"end": 29596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29570,
											"end": 29596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29570,
											"end": 29596,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15972,
											"end": 16058,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2080,
											"end": 2122,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29393,
											"end": 29421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1889,
											"end": 2130,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 27411,
											"end": 27498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29561,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 29523,
											"end": 29561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 29523,
											"end": 29561,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29523,
											"end": 29561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29561,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2937,
											"end": 2962,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2962,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 2995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 3005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29709,
											"end": 29750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2735,
											"end": 3054,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29884,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29360,
											"end": 29386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31816,
											"end": 32011,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31816,
											"end": 32011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31816,
											"end": 32011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 31816,
											"end": 32011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31816,
											"end": 32011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18356,
											"end": 18375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32242,
											"end": 32252,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32269,
											"end": 32270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32241,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3611,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F20746F6B656E73207374616B656400000000000000"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32212,
											"end": 32323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32355,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32342,
											"end": 32365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32369,
											"end": 32379,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32342,
											"end": 32379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3965,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3658,
											"end": 4007,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32334,
											"end": 32409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32456,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32445,
											"end": 32456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32456,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32445,
											"end": 32456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 32445,
											"end": 32522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32494,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32494,
											"end": 32502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32481,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32506,
											"end": 32521,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32506,
											"end": 32521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 32462,
											"end": 32502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32462,
											"end": 32502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 32462,
											"end": 32502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32462,
											"end": 32502,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 32462,
											"end": 32502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32461,
											"end": 32521,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32522,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 32445,
											"end": 32522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32444,
											"end": 32539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32444,
											"end": 32539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 32444,
											"end": 32539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32528,
											"end": 32539,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32528,
											"end": 32539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32528,
											"end": 32539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32528,
											"end": 32539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32527,
											"end": 32539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32444,
											"end": 32539,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 32444,
											"end": 32539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4518,
											"end": 4539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E206C6F636B2074696D6520686173206E6F74207965742065787069"
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4690,
											"name": "PUSH",
											"source": 1,
											"value": "7265640000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4334,
											"end": 4733,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 32422,
											"end": 32602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32732,
											"end": 32760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 32749,
											"end": 32759,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32732,
											"end": 32748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32732,
											"end": 32760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32732,
											"end": 32760,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 32732,
											"end": 32760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32779,
											"end": 32789,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32778,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32807,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32771,
											"end": 32807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32760,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32714,
											"end": 32760,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32771,
											"end": 32818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32833,
											"end": 32846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32833,
											"end": 32846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32833,
											"end": 32846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32893,
											"end": 32903,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32892,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32904,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32885,
											"end": 32917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32881,
											"end": 32924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32881,
											"end": 32924,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32976,
											"end": 32986,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 32975,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 32987,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33000,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32968,
											"end": 33000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33015,
											"end": 33023,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33015,
											"end": 33023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33001,
											"end": 33002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33001,
											"end": 33002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33011,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32968,
											"end": 33011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33023,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32968,
											"end": 33119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33071,
											"end": 33081,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33117,
											"end": 33118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33070,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33063,
											"end": 33095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33096,
											"end": 33097,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33096,
											"end": 33097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33063,
											"end": 33105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33063,
											"end": 33119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32968,
											"end": 33119,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32968,
											"end": 33119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32946,
											"end": 33203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32946,
											"end": 33203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32946,
											"end": 33203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33162,
											"end": 33163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33154,
											"end": 33163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33154,
											"end": 33163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33182,
											"end": 33187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 33182,
											"end": 33187,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32946,
											"end": 33203,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32946,
											"end": 33203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32926,
											"end": 32929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 32861,
											"end": 33214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33236,
											"end": 33246,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33285,
											"end": 33286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33235,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33228,
											"end": 33260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33261,
											"end": 33266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33261,
											"end": 33266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33287,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33306,
											"end": 33316,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33305,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33298,
											"end": 33332,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33377,
											"end": 33378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33356,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 33343,
											"end": 33379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33343,
											"end": 33379,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33409,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 33390,
											"end": 33419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33419,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33390,
											"end": 33423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33449,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33436,
											"end": 33449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33471,
											"end": 33475,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33478,
											"end": 33488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5720,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33343,
											"end": 33379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33436,
											"end": 33449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33462,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 33436,
											"end": 33462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 33436,
											"end": 33499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33518,
											"end": 33528,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33517,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 33564,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33546,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33510,
											"end": 33546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33510,
											"end": 33564,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 18400,
											"end": 18418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32143,
											"end": 33572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33888,
											"end": 34274,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33888,
											"end": 34274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34002,
											"end": 34012,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33932,
											"end": 33947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34001,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34030,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33994,
											"end": 34030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33932,
											"end": 33947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33932,
											"end": 33947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33950,
											"end": 33978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33950,
											"end": 33978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33950,
											"end": 33966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33950,
											"end": 33978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33950,
											"end": 33978,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 33950,
											"end": 33978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33950,
											"end": 34030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33950,
											"end": 34030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33950,
											"end": 34030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33950,
											"end": 34030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 33950,
											"end": 34030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33950,
											"end": 34030,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33950,
											"end": 34030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33932,
											"end": 34030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33932,
											"end": 34030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34059,
											"end": 34060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34049,
											"end": 34056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34060,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5933,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5915,
											"end": 5936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6041,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F207265776172647320746F20636C61696D00000000"
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5991,
											"end": 6009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 6042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6059,
											"end": 6077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5731,
											"end": 6083,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 34041,
											"end": 34093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34112,
											"end": 34122,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34111,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34143,
											"end": 34158,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34140,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34104,
											"end": 34140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34158,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34169,
											"end": 34205,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34169,
											"end": 34205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34169,
											"end": 34205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34169,
											"end": 34205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34169,
											"end": 34209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34169,
											"end": 34209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34169,
											"end": 34209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34169,
											"end": 34209,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 34220,
											"end": 34266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34104,
											"end": 34123,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34220,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34232,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34258,
											"end": 34265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34220,
											"end": 34245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 34220,
											"end": 34266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34410,
											"end": 34411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34387,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34343,
											"end": 34363,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34343,
											"end": 34363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34376,
											"end": 34955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34376,
											"end": 34955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34428,
											"end": 34462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34490,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34483,
											"end": 34510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34465,
											"end": 34511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34428,
											"end": 34511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34428,
											"end": 34511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34526,
											"end": 34540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34566,
											"end": 34575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34592,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34599,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34585,
											"end": 34612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34585,
											"end": 34619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34581,
											"end": 34619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34699,
											"end": 34700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34656,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34649,
											"end": 34676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34677,
											"end": 34678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34677,
											"end": 34678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34649,
											"end": 34686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34649,
											"end": 34702,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34645,
											"end": 34832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 34645,
											"end": 34832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34758,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34778,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34751,
											"end": 34778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34779,
											"end": 34780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34779,
											"end": 34780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34751,
											"end": 34781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34741,
											"end": 34747,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34741,
											"end": 34747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34727,
											"end": 34781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34804,
											"end": 34812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34645,
											"end": 34832,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 34645,
											"end": 34832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34621,
											"end": 34624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 34561,
											"end": 34847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34870,
											"end": 34883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34870,
											"end": 34883,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34376,
											"end": 34955,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 34376,
											"end": 34955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34941,
											"end": 34942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34923,
											"end": 34943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34916,
											"end": 34943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34282,
											"end": 34962,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30598,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30613,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30514,
											"end": 30621,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28124,
											"end": 28154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28151,
											"end": 28152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28124,
											"end": 28142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28124,
											"end": 28154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28124,
											"end": 28154,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28124,
											"end": 28154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28059,
											"end": 28162,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32019,
											"end": 32135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 18356,
											"end": 18375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 18356,
											"end": 18377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15577,
											"end": 15594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 15577,
											"end": 15596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32099,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32106,
											"end": 32116,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32099,
											"end": 32105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 32099,
											"end": 32127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32099,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 32099,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18400,
											"end": 18420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17794,
											"end": 17795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18916,
											"end": 18923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18916,
											"end": 18938,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18946,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30708,
											"end": 30716,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30708,
											"end": 30728,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30638,
											"end": 30736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30824,
											"end": 30838,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30824,
											"end": 30856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 30864,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28317,
											"end": 28518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28406,
											"end": 28428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6479,
											"end": 6481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6461,
											"end": 6482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6518,
											"end": 6520,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6491,
											"end": 6521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6557,
											"end": 6591,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6636,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6673,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6654,
											"end": 6673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6277,
											"end": 6679,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 28398,
											"end": 28471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28501,
											"end": 28509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28482,
											"end": 28510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35034,
											"end": 35041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35120,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35129,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35146,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 35113,
											"end": 35146,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35113,
											"end": 35146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35034,
											"end": 35041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35034,
											"end": 35041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 35121,
											"end": 35128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 35072,
											"end": 35097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35072,
											"end": 35097,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 35072,
											"end": 35097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 35072,
											"end": 35146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35072,
											"end": 35146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 35072,
											"end": 35146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35072,
											"end": 35146,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 35072,
											"end": 35146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35054,
											"end": 35146,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34970,
											"end": 35179,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31816,
											"end": 32011,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31816,
											"end": 32011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 27297,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 27297,
											"end": 27310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15836,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 15836,
											"end": 15850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 15836,
											"end": 15852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15836,
											"end": 15852,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 15836,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31920,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31908,
											"end": 31920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31939,
											"end": 31943,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31889,
											"end": 31905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31889,
											"end": 31905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31908,
											"end": 31920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31930,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 31908,
											"end": 31930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 31908,
											"end": 31945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31956,
											"end": 31968,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31956,
											"end": 31968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31889,
											"end": 31945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31889,
											"end": 31945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31956,
											"end": 32003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 31956,
											"end": 32003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31956,
											"end": 31968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31956,
											"end": 31968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31982,
											"end": 31992,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31889,
											"end": 31945,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31956,
											"end": 31981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 31956,
											"end": 32003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18436,
											"end": 18725,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18436,
											"end": 18725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17838,
											"end": 17839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18566,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18566,
											"end": 18573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 18585,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 18585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7116,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7087,
											"end": 7117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7153,
											"end": 7186,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7133,
											"end": 7151,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7133,
											"end": 7151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7126,
											"end": 7187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6873,
											"end": 7228,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 18558,
											"end": 18621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17838,
											"end": 17839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18699,
											"end": 18706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18699,
											"end": 18717,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18436,
											"end": 18725,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33580,
											"end": 33880,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33580,
											"end": 33880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33849,
											"end": 33863,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33849,
											"end": 33863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33673,
											"end": 33689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33812,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33821,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33751,
											"end": 33784,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33751,
											"end": 33784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33751,
											"end": 33784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33751,
											"end": 33784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33751,
											"end": 33784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33673,
											"end": 33689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33673,
											"end": 33689,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33867,
											"end": 33871,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 33867,
											"end": 33871,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33849,
											"end": 33863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33849,
											"end": 33863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33805,
											"end": 33834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33733,
											"end": 33784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 33733,
											"end": 33784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33733,
											"end": 33748,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33733,
											"end": 33784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 33733,
											"end": 33784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33733,
											"end": 33784,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 33733,
											"end": 33784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 33732,
											"end": 33834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33732,
											"end": 33834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 33732,
											"end": 33834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33732,
											"end": 33834,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 33732,
											"end": 33834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33716,
											"end": 33863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33716,
											"end": 33863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33716,
											"end": 33863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33716,
											"end": 33863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 33716,
											"end": 33863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33716,
											"end": 33863,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33716,
											"end": 33863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 33715,
											"end": 33871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33715,
											"end": 33871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 33715,
											"end": 33871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33715,
											"end": 33871,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 33715,
											"end": 33871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33707,
											"end": 33872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33580,
											"end": 33880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33580,
											"end": 33880,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18733,
											"end": 18946,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 18733,
											"end": 18946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17794,
											"end": 17795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18916,
											"end": 18923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18916,
											"end": 18938,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18733,
											"end": 18946,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8079,
											"end": 8121,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8067,
											"end": 8122,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8049,
											"end": 8123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8139,
											"end": 8157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8132,
											"end": 8166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23901,
											"end": 23924,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23878,
											"end": 23936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23871,
											"end": 23876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23851,
											"end": 23870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 23851,
											"end": 23937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23945,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27576,
											"end": 27708,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27576,
											"end": 27708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27640,
											"end": 27663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27484,
											"end": 27490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14778,
											"end": 14788,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27640,
											"end": 27663,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8391,
											"end": 8421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8457,
											"end": 8491,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8430,
											"end": 8492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8509,
											"end": 8527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27632,
											"end": 27700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8177,
											"end": 8533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28678,
											"end": 28869,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28678,
											"end": 28869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF"
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28752,
											"end": 28768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28752,
											"end": 28768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28821,
											"end": 28861,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 28741,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28678,
											"end": 28869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16131,
											"end": 16239,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 16131,
											"end": 16239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16201,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 8743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8781,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8759,
											"end": 8777,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8759,
											"end": 8777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 8777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8752,
											"end": 8782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8854,
											"end": 8872,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8854,
											"end": 8872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16193,
											"end": 16231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 8538,
											"end": 8878,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30872,
											"end": 31808,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 30872,
											"end": 31808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30978,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30965,
											"end": 30978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30986,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 30965,
											"end": 30986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 30965,
											"end": 30996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30965,
											"end": 31007,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3842,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3965,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3658,
											"end": 4007,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 30943,
											"end": 31060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31084,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31093,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31077,
											"end": 31110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31073,
											"end": 31241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 31073,
											"end": 31241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31127,
											"end": 31142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31145,
											"end": 31170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 31162,
											"end": 31169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31145,
											"end": 31170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31145,
											"end": 31170,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 31145,
											"end": 31170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31192,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31218,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31185,
											"end": 31218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31127,
											"end": 31170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31127,
											"end": 31170,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31127,
											"end": 31170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31127,
											"end": 31170,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31127,
											"end": 31170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31127,
											"end": 31170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31185,
											"end": 31229,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31073,
											"end": 31241,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 31073,
											"end": 31241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31266,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31253,
											"end": 31266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5609,
											"end": 5624,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5591,
											"end": 5625,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31297,
											"end": 31301,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5720,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31253,
											"end": 31266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31279,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 31253,
											"end": 31279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 31253,
											"end": 31313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31490,
											"end": 31505,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31541,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31534,
											"end": 31563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31563,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31534,
											"end": 31581,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31359,
											"end": 31523,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31534,
											"end": 31550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31592,
											"end": 31623,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31647,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31657,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31634,
											"end": 31667,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31697,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 31678,
											"end": 31707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31707,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31710,
											"end": 31725,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31678,
											"end": 31725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31756,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31782,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31749,
											"end": 31782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31800,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30872,
											"end": 31808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16316,
											"end": 16424,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16316,
											"end": 16424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16043,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9323,
											"end": 9344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9382,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9360,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9353,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9419,
											"end": 9441,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9459,
											"end": 9477,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9459,
											"end": 9477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16375,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9139,
											"end": 9483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26073,
											"end": 26834,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 26073,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26497,
											"end": 26520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 26551,
											"end": 26555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26531,
											"end": 26536,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26523,
											"end": 26550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 26523,
											"end": 26550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 26523,
											"end": 26592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26607,
											"end": 26624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26607,
											"end": 26624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26497,
											"end": 26592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26497,
											"end": 26592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26607,
											"end": 26628,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 26827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 26603,
											"end": 26827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26749,
											"end": 26759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 26738,
											"end": 26768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9981,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 9959,
											"end": 9977,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9959,
											"end": 9977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9959,
											"end": 9977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 9982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10052,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10089,
											"end": 10101,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10069,
											"end": 10087,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10069,
											"end": 10087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10069,
											"end": 10087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10062,
											"end": 10102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10138,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10119,
											"end": 10138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26730,
											"end": 26815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9738,
											"end": 10144,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8687,
											"end": 8882,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 8687,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8790,
											"end": 8802,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8822,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 8844,
											"end": 8850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8852,
											"end": 8856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8858,
											"end": 8859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8873,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 8822,
											"end": 8874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8822,
											"end": 8874,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 8822,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8874,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8687,
											"end": 8882,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8687,
											"end": 8882,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9739,
											"end": 10269,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 9739,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9878,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9924,
											"end": 9929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 9920,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 9929,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9899,
											"end": 9929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10354,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10390,
											"end": 10392,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10370,
											"end": 10388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10429,
											"end": 10463,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10500,
											"end": 10508,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10526,
											"end": 10545,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10526,
											"end": 10545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10149,
											"end": 10551,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6136,
											"end": 6156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6136,
											"end": 6156,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10740,
											"end": 10761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10799,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 10800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10836,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10903,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10885,
											"end": 10903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 10556,
											"end": 10909,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 9983,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10117,
											"end": 10129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10131,
											"end": 10154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10164,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10158,
											"end": 10169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10178,
											"end": 10183,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10158,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10116,
											"end": 10191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 10227,
											"end": 10234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10236,
											"end": 10246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10260,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10209,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 10209,
											"end": 10261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10261,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 10209,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10202,
											"end": 10261,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 10269,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9739,
											"end": 10269,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11275,
											"end": 12017,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 11275,
											"end": 12017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11390,
											"end": 11402,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11419,
											"end": 11426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11450,
											"end": 11460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 11443,
											"end": 11460,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 11415,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11564,
											"end": 11581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11564,
											"end": 11581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11564,
											"end": 11585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11821,
											"end": 11838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11888,
											"end": 11903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11875,
											"end": 11885,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11871,
											"end": 11873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11867,
											"end": 11886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 11904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 11560,
											"end": 11999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11970,
											"end": 11982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 11963,
											"end": 11983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 573,
											"end": 727,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 573,
											"end": 727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 659,
											"end": 701,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 648,
											"end": 702,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 641,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 638,
											"end": 703,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 628,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 628,
											"end": 721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 717,
											"end": 718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 714,
											"end": 715,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 707,
											"end": 719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 732,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 732,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 791,
											"end": 797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 819,
											"end": 842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 815,
											"end": 847,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 850,
											"end": 862,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 886,
											"end": 909,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 918,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 918,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 918,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 984,
											"end": 1884,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 984,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1335,
											"end": 1348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1521,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1586,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1670,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1721,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1702,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1702,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1755,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1755,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1776,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1809,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1529,
											"end": 1538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1500,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1878,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1884,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 984,
											"end": 1884,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2135,
											"end": 2253,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2135,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2229,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2187,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2243,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2499,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2258,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2370,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2387,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2335,
											"end": 2387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2387,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2335,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2463,
											"end": 2468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2441,
											"end": 2469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4012,
											"end": 4196,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4012,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4141,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4151,
											"end": 4166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4182,
											"end": 4183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4190,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4329,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4201,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4275,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4259,
											"end": 4298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4329,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4738,
											"end": 4922,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4738,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4787,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4891,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 4892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4916,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5063,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5064,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4984,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4984,
											"end": 5087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 5067,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5114,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5103,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 5122,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5127,
											"end": 5323,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 5127,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5184,
											"end": 5223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5250,
											"end": 5316,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5239,
											"end": 5317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6088,
											"end": 6272,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 6088,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6217,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6137,
											"end": 6138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6241,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6234,
											"end": 6235,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6227,
											"end": 6242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6258,
											"end": 6259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6868,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6684,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6809,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6793,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6805,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6810,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6775,
											"end": 6827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6823,
											"end": 6824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6813,
											"end": 6825,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 6775,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6846,
											"end": 6862,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6846,
											"end": 6862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6868,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7233,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7233,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7295,
											"end": 7303,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7233,
											"end": 7358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7363,
											"end": 7591,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7363,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7527,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7457,
											"end": 7531,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7532,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7439,
											"end": 7448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7533,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 7425,
											"end": 7556,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7596,
											"end": 7870,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 7596,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7636,
											"end": 7637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7652,
											"end": 7841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7774,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7694,
											"end": 7695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7775,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7795,
											"end": 7796,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7788,
											"end": 7803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7830,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7823,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7816,
											"end": 7831,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7841,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 7652,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7864,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7596,
											"end": 7870,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8883,
											"end": 9134,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 8883,
											"end": 9134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 8959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9008,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8994,
											"end": 9003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 8992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8981,
											"end": 9004,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 9009,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9026,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 8974,
											"end": 9026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8974,
											"end": 9026,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 8974,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9054,
											"end": 9063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9048,
											"end": 9064,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9488,
											"end": 9733,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9488,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9608,
											"end": 9610,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9596,
											"end": 9605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 9594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9606,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9611,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9624,
											"end": 9625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9614,
											"end": 9626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9576,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9656,
											"end": 9665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9650,
											"end": 9666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9697,
											"end": 9702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9675,
											"end": 9703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10914,
											"end": 11172,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 10914,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 10987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11010,
											"end": 11016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11004,
											"end": 11017,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11086,
											"end": 11097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11086,
											"end": 11097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11086,
											"end": 11097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11098,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11032,
											"end": 11034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11025,
											"end": 11035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 10996,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11127,
											"end": 11133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11121,
											"end": 11134,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11118,
											"end": 11166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11118,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 11118,
											"end": 11166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11148,
											"end": 11151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11144,
											"end": 11160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11118,
											"end": 11166,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 11118,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11118,
											"end": 11166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11177,
											"end": 11451,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 11177,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11306,
											"end": 11309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11344,
											"end": 11350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11338,
											"end": 11351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 11406,
											"end": 11412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11401,
											"end": 11404,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11386,
											"end": 11392,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11429,
											"end": 11445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11451,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11177,
											"end": 11451,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11456,
											"end": 11898,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 11456,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11605,
											"end": 11607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11594,
											"end": 11603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 11572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11637,
											"end": 11643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11631,
											"end": 11644,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11664,
											"end": 11673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11660,
											"end": 11678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11653,
											"end": 11687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11696,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 11755,
											"end": 11761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11750,
											"end": 11752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11739,
											"end": 11748,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11730,
											"end": 11732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11722,
											"end": 11728,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11718,
											"end": 11733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11696,
											"end": 11762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 11696,
											"end": 11762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11696,
											"end": 11762,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 11696,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11814,
											"end": 11816,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11802,
											"end": 11817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11819,
											"end": 11885,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 11798,
											"end": 11886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11783,
											"end": 11887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11783,
											"end": 11887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11783,
											"end": 11887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11783,
											"end": 11887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11891,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11456,
											"end": 11898,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"adminWithdrawRewards()": "f995441b",
							"availableRewards(address)": "f854a27f",
							"claimRewards()": "372500ab",
							"getStakedTokens(address)": "63c28db1",
							"lockEnabled()": "3166b848",
							"lockTime()": "0d668087",
							"nftCollection()": "6588103b",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"rewardsPerHour()": "8e7271fa",
							"rewardsToken()": "d1af0c7d",
							"setLockEnabled(bool)": "6aa4439f",
							"setLockTime(uint256)": "ae04d45d",
							"setRewardsPerHour(uint256)": "b5a5e509",
							"stake(uint256)": "a694fc3a",
							"stakerAddress(uint256)": "94067045",
							"stakers(address)": "9168ae72",
							"tokenStartStakeTime(uint256)": "114cd3c8",
							"transferOwnership(address)": "f2fde38b",
							"version()": "54fd4d50",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftCollection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_lockEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminWithdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"availableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakedTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stackeUtx\",\"type\":\"uint256\"}],\"internalType\":\"struct Farm.StakedToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCollection\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsPerHour\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_lockEnabled\",\"type\":\"bool\"}],\"name\":\"setLockEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"setLockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"}],\"name\":\"setRewardsPerHour\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenStartStakeTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Farm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "source/Farm.sol:Farm",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 471,
								"contract": "source/Farm.sol:Farm",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 1022,
								"contract": "source/Farm.sol:Farm",
								"label": "_owner",
								"offset": 1,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1161,
								"contract": "source/Farm.sol:Farm",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)438"
							},
							{
								"astId": 1164,
								"contract": "source/Farm.sol:Farm",
								"label": "nftCollection",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC721)122"
							},
							{
								"astId": 1166,
								"contract": "source/Farm.sol:Farm",
								"label": "nftCollectionAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1169,
								"contract": "source/Farm.sol:Farm",
								"label": "rewardsPerHour",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1172,
								"contract": "source/Farm.sol:Farm",
								"label": "version",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1175,
								"contract": "source/Farm.sol:Farm",
								"label": "lockEnabled",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1178,
								"contract": "source/Farm.sol:Farm",
								"label": "lockTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1183,
								"contract": "source/Farm.sol:Farm",
								"label": "stakers",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_struct(Staker)1158_storage)"
							},
							{
								"astId": 1187,
								"contract": "source/Farm.sol:Farm",
								"label": "stakerAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1191,
								"contract": "source/Farm.sol:Farm",
								"label": "tokenStartStakeTime",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakedToken)1147_storage)dyn_storage": {
								"base": "t_struct(StakedToken)1147_storage",
								"encoding": "dynamic_array",
								"label": "struct Farm.StakedToken[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)438": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)122": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1158_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Farm.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1158_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(StakedToken)1147_storage": {
								"encoding": "inplace",
								"label": "struct Farm.StakedToken",
								"members": [
									{
										"astId": 1142,
										"contract": "source/Farm.sol:Farm",
										"label": "staker",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1144,
										"contract": "source/Farm.sol:Farm",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1146,
										"contract": "source/Farm.sol:Farm",
										"label": "stackeUtx",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Staker)1158_storage": {
								"encoding": "inplace",
								"label": "struct Farm.Staker",
								"members": [
									{
										"astId": 1149,
										"contract": "source/Farm.sol:Farm",
										"label": "amountStaked",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1153,
										"contract": "source/Farm.sol:Farm",
										"label": "stakedTokens",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(StakedToken)1147_storage)dyn_storage"
									},
									{
										"astId": 1155,
										"contract": "source/Farm.sol:Farm",
										"label": "timeOfLastUpdate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1157,
										"contract": "source/Farm.sol:Farm",
										"label": "unclaimedRewards",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1022,
								"contract": "source/Farm.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 471,
								"contract": "source/Farm.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 569,
								"contract": "source/Farm.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":23676:26837  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":23676:26837  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122046a8c6f36c83200ce136100b0644faee45dd5c4ecdd2d728fbaec23683c654a064736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046a8c6f36c83200ce136100b0644faee45dd5c4ecdd2d728fbaec23683c654a064736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xA8 0xC6 RETURN PUSH13 0x83200CE136100B0644FAEE45DD 0x5C 0x4E 0xCD 0xD2 0xD7 0x28 0xFB 0xAE 0xC2 CALLDATASIZE DUP4 0xC6 SLOAD LOG0 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "23676:3161:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;23676:3161:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046a8c6f36c83200ce136100b0644faee45dd5c4ecdd2d728fbaec23683c654a064736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xA8 0xC6 RETURN PUSH13 0x83200CE136100B0644FAEE45DD 0x5C 0x4E 0xCD 0xD2 0xD7 0x28 0xFB 0xAE 0xC2 CALLDATASIZE DUP4 0xC6 SLOAD LOG0 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
							"sourceMap": "23676:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23676,
									"end": 26837,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046a8c6f36c83200ce136100b0644faee45dd5c4ecdd2d728fbaec23683c654a064736f6c634300080c0033",
									".code": [
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23676,
											"end": 26837,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"source/Farm.sol\":18953:23672  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"source/Farm.sol\":18953:23672  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c82686773ac8f8d593ee4686026a569fa25fb77d2cfd151b9278e8a8786add2964736f6c634300080c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c82686773ac8f8d593ee4686026a569fa25fb77d2cfd151b9278e8a8786add2964736f6c634300080c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x26 DUP7 PUSH24 0x3AC8F8D593EE4686026A569FA25FB77D2CFD151B9278E8A8 PUSH25 0x6ADD2964736F6C634300080C00330000000000000000000000 ",
							"sourceMap": "18953:4719:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;18953:4719:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c82686773ac8f8d593ee4686026a569fa25fb77d2cfd151b9278e8a8786add2964736f6c634300080c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x26 DUP7 PUSH24 0x3AC8F8D593EE4686026A569FA25FB77D2CFD151B9278E8A8 PUSH25 0x6ADD2964736F6C634300080C00330000000000000000000000 ",
							"sourceMap": "18953:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18953,
									"end": 23672,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c82686773ac8f8d593ee4686026a569fa25fb77d2cfd151b9278e8a8786add2964736f6c634300080c0033",
									".code": [
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 23672,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"source/Farm.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"source/Farm.sol\":{\"keccak256\":\"0x78cf7d2b9bd66cb0d849ac9d55e97eace9473c4c784a49f45ccee5591354ebe4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://49ed0e6548409134e25d1bcb9aea1a2916456dd5f691e12157b3a5dd6cf8c7bd\",\"dweb:/ipfs/QmQvUj9bQSRM8hMNn9XZoTfh4T88JakZjdtMZu6Tk8eoWZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"source/Farm.sol": {
				"ast": {
					"absolutePath": "source/Farm.sol",
					"exportedSymbols": {
						"Address": [
							363
						],
						"Context": [
							457
						],
						"Farm": [
							1771
						],
						"IERC165": [
							10
						],
						"IERC20": [
							438
						],
						"IERC721": [
							122
						],
						"Ownable": [
							1127
						],
						"Pausable": [
							561
						],
						"ReentrancyGuard": [
							612
						],
						"SafeERC20": [
							1018
						],
						"SafeMath": [
							805
						]
					},
					"id": 1772,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "IERC165",
							"nameLocation": "75:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "90:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "452:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:20:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "513:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "513:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:6:0"
									},
									"scope": 10,
									"src": "443:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1772,
							"src": "65:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 10,
										"src": "547:7:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "547:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 122,
							"linearizedBaseContracts": [
								122,
								10
							],
							"name": "IERC721",
							"nameLocation": "536:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "562:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 21,
									"name": "Transfer",
									"nameLocation": "664:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "689:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "673:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "711:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "695:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "715:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:67:0"
									},
									"src": "658:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "748:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 30,
									"name": "Approval",
									"nameLocation": "856:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "881:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "865:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "904:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "888:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "914:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:74:0"
									},
									"src": "850:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "947:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 39,
									"name": "ApprovalForAll",
									"nameLocation": "1078:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1093:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1132:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1116:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1147:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1142:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 36,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1142:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:64:0"
									},
									"src": "1072:85:0"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1165:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1258:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1276:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1268:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:17:0"
									},
									"scope": 122,
									"src": "1249:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1331:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1483:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1499:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1491:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:17:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:15:0"
									},
									"scope": 122,
									"src": "1474:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1554:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2137:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2172:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2164:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2195:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2187:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2216:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2208:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2234:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 63,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2234:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:107:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2269:0:0"
									},
									"scope": 122,
									"src": "2128:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2278:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 77,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2993:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3028:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3020:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3051:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3043:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3072:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "3064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:77:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:0:0"
									},
									"scope": 122,
									"src": "2984:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "3104:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3636:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3667:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3659:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3690:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3711:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3703:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3648:77:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3734:0:0"
									},
									"scope": 122,
									"src": "3627:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3743:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4222:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4238:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4230:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:29:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4267:0:0"
									},
									"scope": 122,
									"src": "4213:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "4276:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4609:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4627:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4650:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4645:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4626:34:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4669:0:0"
									},
									"scope": 122,
									"src": "4600:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "4678:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4838:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4858:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4850:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4849:17:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4898:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4890:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:18:0"
									},
									"scope": 122,
									"src": "4829:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4916:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5073:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5098:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "5090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5113:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "5105:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5089:33:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "5146:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5146:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5145:6:0"
									},
									"scope": 122,
									"src": "5064:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1772,
							"src": "526:4629:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 363,
							"linearizedBaseContracts": [
								363
							],
							"name": "Address",
							"nameLocation": "5167:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "5835:356:0",
										"statements": [
											{
												"assignments": [
													131
												],
												"declarations": [
													{
														"constant": false,
														"id": 131,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "6045:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "6037:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6037:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 132,
												"nodeType": "VariableDeclarationStatement",
												"src": "6037:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6126:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6128:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "6148:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "6136:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6128:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "6148:7:0",
														"valueSize": 1
													},
													{
														"declaration": 131,
														"isOffset": false,
														"isSlot": false,
														"src": "6128:4:0",
														"valueSize": 1
													}
												],
												"id": 133,
												"nodeType": "InlineAssembly",
												"src": "6117:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 134,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "6175:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6175:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 129,
												"id": 137,
												"nodeType": "Return",
												"src": "6168:15:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "5182:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "5778:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5797:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "5789:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5788:17:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "5829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5828:6:0"
									},
									"scope": 363,
									"src": "5769:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "7197:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 150,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7224:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		],
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7216:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 148,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7216:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7216:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7216:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 153,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "7241:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7216:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7249:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "7208:73:0"
											},
											{
												"assignments": [
													159,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7378:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "7373:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 158,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 166,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7423:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 160,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "7391:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "7391:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 162,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "7414:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7391:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7391:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7372:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7454:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7437:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "7437:78:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "6199:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "7135:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7161:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7145:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7145:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7180:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7172:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7144:43:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7197:0:0"
									},
									"scope": 363,
									"src": "7126:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "8373:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "8402:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "8410:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8416:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 183,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															190,
															210
														],
														"referencedDeclaration": 210,
														"src": "8389:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8389:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 182,
												"id": 188,
												"nodeType": "Return",
												"src": "8382:67:0"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "7531:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "8293:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8314:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "8306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "8322:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8322:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:35:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "8359:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8359:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8358:14:0"
									},
									"scope": 363,
									"src": "8284:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "8804:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "8844:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 204,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "8852:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8858:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "8861:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															230,
															280
														],
														"referencedDeclaration": 280,
														"src": "8822:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8822:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 201,
												"id": 208,
												"nodeType": "Return",
												"src": "8815:59:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "8465:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "8696:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8725:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8758:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8744:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8744:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8708:63:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "8790:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8789:14:0"
									},
									"scope": 363,
									"src": "8687:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "9370:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "9410:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "9418:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 225,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "9424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9431:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 222,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															230,
															280
														],
														"referencedDeclaration": 280,
														"src": "9388:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9388:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 228,
												"nodeType": "Return",
												"src": "9381:94:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "8890:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "9266:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9296:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9288:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9317:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9304:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9304:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9331:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9287:50:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9356:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9355:14:0"
									},
									"scope": 363,
									"src": "9257:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "9880:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 247,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9907:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$363",
																				"typeString": "library Address"
																			}
																		],
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9899:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 245,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9899:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9899:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "9899:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 250,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "9924:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9899:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9931:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9891:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "9891:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 257,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "10002:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 256,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "9991:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9991:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10011:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9983:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "9983:60:0"
											},
											{
												"assignments": [
													263,
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10122:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "10117:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 262,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10117:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10144:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "10131:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 264,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10131:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 272,
												"initialValue": {
													"arguments": [
														{
															"id": 270,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "10186:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 266,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "10158:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 268,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "10178:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10158:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10158:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10116:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "10227:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 275,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "10236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "10248:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 273,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "10209:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10209:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 278,
												"nodeType": "Return",
												"src": "10202:59:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9491:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "9748:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9778:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9770:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9799:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9786:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9786:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9813:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9805:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9834:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9820:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9820:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9769:78:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9866:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9866:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9865:14:0"
									},
									"scope": 363,
									"src": "9739:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "10554:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "10591:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "10599:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10605:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 290,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															297,
															332
														],
														"referencedDeclaration": 332,
														"src": "10572:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 289,
												"id": 295,
												"nodeType": "Return",
												"src": "10565:80:0"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "10277:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "10463:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10490:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10482:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10498:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10481:35:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10540:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:14:0"
									},
									"scope": 363,
									"src": "10454:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "10973:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 311,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "11003:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 310,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "10992:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10992:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11012:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10984:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "10984:67:0"
											},
											{
												"assignments": [
													317,
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11130:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "11125:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 316,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "11152:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "11139:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 318,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11139:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"arguments": [
														{
															"id": 322,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11184:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "11166:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "11166:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11166:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11124:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "11225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 327,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "11234:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 328,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "11246:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 325,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "11207:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11207:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 308,
												"id": 330,
												"nodeType": "Return",
												"src": "11200:59:0"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "10661:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "10854:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10881:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10873:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10889:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10889:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10922:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10908:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10872:63:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "10959:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10959:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10958:14:0"
									},
									"scope": 363,
									"src": "10845:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "11404:613:0",
										"statements": [
											{
												"condition": {
													"id": 343,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "11419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 359,
													"nodeType": "Block",
													"src": "11478:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 347,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 336,
																		"src": "11564:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11564:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11564:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 357,
																"nodeType": "Block",
																"src": "11944:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 354,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 338,
																					"src": "11970:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 353,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "11963:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11963:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 356,
																		"nodeType": "ExpressionStatement",
																		"src": "11963:20:0"
																	}
																]
															},
															"id": 358,
															"nodeType": "IfStatement",
															"src": "11560:439:0",
															"trueBody": {
																"id": 352,
																"nodeType": "Block",
																"src": "11587:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11775:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11798:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "11827:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "11821:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11821:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "11802:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11871:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "11875:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11867:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11867:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "11888:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11860:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11860:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11860:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 336,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11827:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 336,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11875:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 351,
																		"nodeType": "InlineAssembly",
																		"src": "11766:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "11415:595:0",
												"trueBody": {
													"id": 346,
													"nodeType": "Block",
													"src": "11428:44:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "11450:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 342,
															"id": 345,
															"nodeType": "Return",
															"src": "11443:17:0"
														}
													]
												}
											}
										]
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "11284:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11307:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11302:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "11329:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11316:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11316:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11355:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11341:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11301:67:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "11390:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11390:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11389:14:0"
									},
									"scope": 363,
									"src": "11275:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1772,
							"src": "5159:6861:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 438,
							"linearizedBaseContracts": [
								438
							],
							"name": "IERC20",
							"nameLocation": "12034:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "12048:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12131:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12142:2:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "12168:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12167:9:0"
									},
									"scope": 438,
									"src": "12122:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "12185:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12274:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12292:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "12284:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12283:17:0"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "12324:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12323:9:0"
									},
									"scope": 438,
									"src": "12265:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "12341:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "12571:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12607:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12579:35:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "12633:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12632:6:0"
									},
									"scope": 438,
									"src": "12562:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "12647:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "12932:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12950:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "12942:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12965:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "12957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12941:32:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "12997:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12996:9:0"
									},
									"scope": 438,
									"src": "12923:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "13014:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13684:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "13692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "13709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13691:33:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "13743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13742:6:0"
									},
									"scope": 438,
									"src": "13675:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "13757:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "14076:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14097:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14089:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14113:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14105:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14132:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14124:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14088:51:0"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "14158:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14157:6:0"
									},
									"scope": 438,
									"src": "14067:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "14172:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 428,
									"name": "Transfer",
									"nameLocation": "14347:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14372:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "14356:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14394:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "14378:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "14398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14355:57:0"
									},
									"src": "14341:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "14421:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 437,
									"name": "Approval",
									"nameLocation": "14584:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14593:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14632:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14616:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14649:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14641:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14592:63:0"
									},
									"src": "14578:78:0"
								}
							],
							"scope": 1772,
							"src": "12024:2635:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "Context",
							"nameLocation": "14683:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "14760:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 443,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14778:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "14778:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 442,
												"id": 445,
												"nodeType": "Return",
												"src": "14771:17:0"
											}
										]
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "14707:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14717:2:0"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "14751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14750:9:0"
									},
									"scope": 457,
									"src": "14698:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "14871:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 452,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "14889:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "14889:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 451,
												"id": 454,
												"nodeType": "Return",
												"src": "14882:15:0"
											}
										]
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "14813:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14821:2:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "14855:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14855:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14854:16:0"
									},
									"scope": 457,
									"src": "14804:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1772,
							"src": "14665:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "14942:7:0"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "14942:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561,
								457
							],
							"name": "Pausable",
							"nameLocation": "14930:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "14957:75:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 464,
									"name": "Paused",
									"nameLocation": "15044:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15059:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "15051:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15050:17:0"
									},
									"src": "15038:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "15076:72:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 469,
									"name": "Unpaused",
									"nameLocation": "15160:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15177:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "15169:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15168:17:0"
									},
									"src": "15154:32:0"
								},
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "15207:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 561,
									"src": "15194:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 470,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "15194:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "15312:34:0",
										"statements": [
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 475,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "15323:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15333:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "15323:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "15323:15:0"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "15223:69:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 480,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15309:2:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15312:0:0"
									},
									"scope": 561,
									"src": "15298:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "15566:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "15577:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15577:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "15577:19:0"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "15607:1:0"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "15354:181:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 488,
									"name": "whenNotPaused",
									"nameLocation": "15550:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15563:2:0"
									},
									"src": "15541:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "15825:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "15836:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15836:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "15836:16:0"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "15863:1:0"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "15624:173:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 496,
									"name": "whenPaused",
									"nameLocation": "15812:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15822:2:0"
									},
									"src": "15803:69:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "16025:33:0",
										"statements": [
											{
												"expression": {
													"id": 502,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 471,
													"src": "16043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 501,
												"id": 503,
												"nodeType": "Return",
												"src": "16036:14:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "15880:86:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "15981:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15987:2:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "16019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16018:6:0"
									},
									"scope": 561,
									"src": "15972:86:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "16182:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "16201:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 510,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "16202:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16202:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16212:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16193:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "16193:38:0"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "16066:59:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "16140:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16157:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16182:0:0"
									},
									"scope": 561,
									"src": "16131:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "16364:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 522,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "16383:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16383:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16393:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16375:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "16375:41:0"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "16247:63:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "16325:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16339:2:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16364:0:0"
									},
									"scope": 561,
									"src": "16316:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "16617:69:0",
										"statements": [
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 534,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "16628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16638:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "16628:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "16628:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 539,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "16665:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16665:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 538,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "16658:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16658:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "16653:25:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "16432:130:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 532,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 531,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "16603:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16603:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "16577:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16583:2:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16617:0:0"
									},
									"scope": 561,
									"src": "16568:118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "16875:72:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "16886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16896:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "16886:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "16886:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "16926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16926:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 469,
														"src": "16917:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16917:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "16912:27:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "16694:127:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 547,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "16864:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16864:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "16836:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16844:2:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16875:0:0"
									},
									"scope": 561,
									"src": "16827:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1772,
							"src": "14912:2038:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "ReentrancyGuard",
							"nameLocation": "16972:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 564,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "17779:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "17754:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 562,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17754:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 563,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17794:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 567,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "17827:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "17802:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 565,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17802:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 566,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "17838:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 569,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "17864:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "17848:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 568,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17848:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "17894:41:0",
										"statements": [
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "17905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "17915:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17905:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "17905:22:0"
											}
										]
									},
									"id": 577,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17891:2:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17894:0:0"
									},
									"scope": 612,
									"src": "17880:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "18345:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 580,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "18356:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18356:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "18356:21:0"
											},
											{
												"id": 583,
												"nodeType": "PlaceholderStatement",
												"src": "18388:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 584,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "18400:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18400:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "18400:20:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "17943:372:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 588,
									"name": "nonReentrant",
									"nameLocation": "18330:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18342:2:0"
									},
									"src": "18321:107:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "18475:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 592,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "18566:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 593,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "18577:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18566:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18587:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18558:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "18558:63:0"
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 598,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "18699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 599,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "18709:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18699:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "18699:18:0"
											}
										]
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "18445:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18464:2:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18475:0:0"
									},
									"scope": 612,
									"src": "18436:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18771:175:0",
										"statements": [
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 606,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "18916:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 607,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "18926:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18916:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18916:22:0"
											}
										]
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "18742:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18760:2:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18771:0:0"
									},
									"scope": 612,
									"src": "18733:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1772,
							"src": "16954:1995:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 805,
							"linearizedBaseContracts": [
								805
							],
							"name": "SafeMath",
							"nameLocation": "18961:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "19283:114:0",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "19302:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "19294:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "19306:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 625,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "19310:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19294:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 629,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "19330:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 630,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "19335:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19330:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19338:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 628,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19322:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19322:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "19322:46:0"
											},
											{
												"expression": {
													"id": 635,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 623,
													"src": "19388:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 621,
												"id": 636,
												"nodeType": "Return",
												"src": "19381:8:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "18977:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "19225:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19237:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19229:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19248:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19240:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19228:22:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19273:9:0"
									},
									"scope": 805,
									"src": "19216:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "19747:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 649,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "19769:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 650,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "19772:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19775:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 648,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															655,
															683
														],
														"referencedDeclaration": 683,
														"src": "19765:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19765:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 647,
												"id": 653,
												"nodeType": "Return",
												"src": "19758:50:0"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "19405:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "19689:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19701:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "19693:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19712:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "19704:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19692:22:0"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "19738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19737:9:0"
									},
									"scope": 805,
									"src": "19680:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "20214:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 668,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "20233:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 669,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "20238:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20233:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 671,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "20241:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20225:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "20225:29:0"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "20273:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "20265:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "20277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 677,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "20281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20277:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20265:17:0"
											},
											{
												"expression": {
													"id": 680,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 675,
													"src": "20302:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 666,
												"id": 681,
												"nodeType": "Return",
												"src": "20295:8:0"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "19824:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "20128:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20140:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20132:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20151:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20143:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "20168:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20154:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20154:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20131:50:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "20205:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20204:9:0"
									},
									"scope": 805,
									"src": "20119:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "20637:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "20873:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20878:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20873:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "20869:47:0",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "20881:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 692,
															"id": 697,
															"nodeType": "Return",
															"src": "20896:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "20936:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "20928:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 705,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "20940:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 703,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "20944:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20928:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 707,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "20964:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 708,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "20968:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20964:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 710,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "20973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20964:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20976:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20956:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "20956:56:0"
											},
											{
												"expression": {
													"id": 715,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 701,
													"src": "21032:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 692,
												"id": 716,
												"nodeType": "Return",
												"src": "21025:8:0"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "20319:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "20579:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20591:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20583:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20602:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20594:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20582:22:0"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "20628:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20627:9:0"
									},
									"scope": 805,
									"src": "20570:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "21584:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 729,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "21606:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 730,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "21609:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21612:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 728,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															735,
															763
														],
														"referencedDeclaration": 763,
														"src": "21602:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21602:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 727,
												"id": 733,
												"nodeType": "Return",
												"src": "21595:46:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "21049:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "21526:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21538:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "21530:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21549:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "21541:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21529:22:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "21575:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21574:9:0"
									},
									"scope": 805,
									"src": "21517:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "22240:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 748,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "22259:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22263:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22259:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 751,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "22266:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22251:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22251:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "22251:28:0"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "22298:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "22290:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 756,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "22302:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 757,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "22306:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22290:17:0"
											},
											{
												"expression": {
													"id": 760,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 755,
													"src": "22414:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 746,
												"id": 761,
												"nodeType": "Return",
												"src": "22407:8:0"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "21657:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "22154:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22166:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22158:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "22194:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22180:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22180:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22157:50:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "22231:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22230:9:0"
									},
									"scope": 805,
									"src": "22145:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "22955:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "22977:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 775,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "22980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22983:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 773,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															804
														],
														"referencedDeclaration": 804,
														"src": "22973:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22973:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 778,
												"nodeType": "Return",
												"src": "22966:44:0"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "22431:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "22897:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22909:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22901:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22920:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22912:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22900:22:0"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "22946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22945:9:0"
									},
									"scope": 805,
									"src": "22888:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "23598:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "23617:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23622:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 796,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "23625:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 792,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23609:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23609:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "23609:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "23656:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 800,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "23660:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 791,
												"id": 802,
												"nodeType": "Return",
												"src": "23649:12:0"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "23026:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "23512:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23524:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23516:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23535:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "23552:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23538:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23538:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23515:50:0"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "23589:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23588:9:0"
									},
									"scope": 805,
									"src": "23503:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1772,
							"src": "18953:4719:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1018,
							"linearizedBaseContracts": [
								1018
							],
							"name": "SafeERC20",
							"nameLocation": "23684:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 808,
									"libraryName": {
										"id": 806,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "23707:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "23701:27:0",
									"typeName": {
										"id": 807,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23720:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 811,
									"libraryName": {
										"id": 809,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 363,
										"src": "23740:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "23734:26:0",
									"typeName": {
										"id": 810,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23752:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "23840:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "23871:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 825,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "23901:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 387,
																		"src": "23901:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "23901:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 828,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "23926:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 829,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "23930:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 823,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "23878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "23878:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23878:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 821,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "23851:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23851:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "23851:86:0"
											}
										]
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "23777:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23797:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23790:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 812,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "23790:6:0"
													},
													"referencedDeclaration": 438,
													"src": "23790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23812:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23804:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23804:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "23816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23789:41:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23840:0:0"
									},
									"scope": 1018,
									"src": "23768:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "24043:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "24074:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 850,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 837,
																			"src": "24104:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 419,
																		"src": "24104:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24104:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 853,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "24133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 854,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "24139:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 855,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "24143:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 848,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24081:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24081:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24081:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 846,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "24054:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24054:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "24054:96:0"
											}
										]
									},
									"id": 860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23962:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23986:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "23979:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 835,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "23979:6:0"
													},
													"referencedDeclaration": 438,
													"src": "23979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24001:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "23993:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24015:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24007:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "24019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23978:55:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24043:0:0"
									},
									"scope": 1018,
									"src": "23953:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "24503:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 872,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "24797:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24806:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24797:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24796:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 880,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "24837:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1018",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1018",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 879,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "24829:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 878,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "24829:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 881,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24829:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 882,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "24844:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 876,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 864,
																					"src": "24813:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$438",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 397,
																				"src": "24813:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24813:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24856:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24813:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 886,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24812:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24796:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24873:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24788:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "24788:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "24971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 895,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "25001:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 407,
																		"src": "25001:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25001:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 898,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "25025:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "25034:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 893,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24978:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24978:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24978:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "24951:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24951:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "24951:90:0"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "24166:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "24436:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "24448:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 862,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "24448:6:0"
													},
													"referencedDeclaration": 438,
													"src": "24448:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "24470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "24462:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24487:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "24479:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24447:46:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24503:0:0"
									},
									"scope": 1018,
									"src": "24427:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "25143:200:0",
										"statements": [
											{
												"assignments": [
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "25162:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "25154:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 914,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"id": 925,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "25221:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 920,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "25201:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25193:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 918,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "25193:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25193:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 922,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "25208:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 916,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "25177:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 397,
																"src": "25177:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25177:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 638,
														"src": "25177:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25177:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "25258:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 932,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "25288:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 407,
																		"src": "25288:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25288:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 935,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "25312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 936,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "25321:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 930,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25265:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25265:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25265:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 928,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "25238:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25238:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "25238:97:0"
											}
										]
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "25066:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25095:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "25088:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 905,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "25088:6:0"
													},
													"referencedDeclaration": 438,
													"src": "25088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25110:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "25102:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25127:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "25119:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25087:46:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25143:0:0"
									},
									"scope": 1018,
									"src": "25057:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "25437:245:0",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "25456:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "25448:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [
														{
															"id": 962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "25515:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25522:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 957,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "25495:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1018",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25487:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 955,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "25487:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25487:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 959,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "25502:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 953,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "25471:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 397,
																"src": "25471:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25471:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 683,
														"src": "25471:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25471:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25448:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "25597:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 970,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "25627:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$438",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 407,
																		"src": "25627:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25627:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 973,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "25651:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 974,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "25660:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 968,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25604:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25604:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25604:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 966,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "25577:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25577:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "25577:97:0"
											}
										]
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "25360:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25389:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "25382:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 942,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "25382:6:0"
													},
													"referencedDeclaration": 438,
													"src": "25382:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "25396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "25413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25381:46:0"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25437:0:0"
									},
									"scope": 1018,
									"src": "25351:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "26143:691:0",
										"statements": [
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "26510:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "26497:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 988,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 998,
												"initialValue": {
													"arguments": [
														{
															"id": 995,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "26551:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26557:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 992,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "26531:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$438",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "26523:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26523:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 210,
														"src": "26523:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26523:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26497:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 999,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "26607:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "26607:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26627:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26607:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "26603:224:0",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "26630:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1006,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 989,
																				"src": "26749:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1008,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "26762:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1007,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "26762:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1009,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26761:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1004,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "26738:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "26738:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26738:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26770:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1003,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "26730:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26730:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1013,
															"nodeType": "ExpressionStatement",
															"src": "26730:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "25690:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "26082:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26109:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "26102:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 982,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 981,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "26102:6:0"
													},
													"referencedDeclaration": 438,
													"src": "26102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26129:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "26116:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26101:33:0"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26143:0:0"
									},
									"scope": 1018,
									"src": "26073:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1772,
							"src": "23676:3161:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1019,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "26870:7:0"
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "26870:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127,
								457
							],
							"name": "Ownable",
							"nameLocation": "26859:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1022,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "26901:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "26885:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1021,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "26885:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1028,
									"name": "OwnershipTransferred",
									"nameLocation": "26922:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "26959:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "26943:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "26990:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "26974:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26942:57:0"
									},
									"src": "26916:84:0"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "27121:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1033,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "27151:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27151:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1032,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "27132:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27132:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "27132:32:0"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "27008:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1038,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27118:2:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27121:0:0"
									},
									"scope": 1127,
									"src": "27107:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "27286:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1041,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "27297:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27297:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "27297:13:0"
											},
											{
												"id": 1044,
												"nodeType": "PlaceholderStatement",
												"src": "27321:1:0"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "27180:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1046,
									"name": "onlyOwner",
									"nameLocation": "27274:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27283:2:0"
									},
									"src": "27265:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "27466:32:0",
										"statements": [
											{
												"expression": {
													"id": 1052,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "27484:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1053,
												"nodeType": "Return",
												"src": "27477:13:0"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "27338:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "27420:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27425:2:0"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "27457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27456:9:0"
									},
									"scope": 1127,
									"src": "27411:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "27621:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1060,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "27640:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27640:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1062,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "27651:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27651:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "27640:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27665:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27632:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "27632:68:0"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "27506:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "27585:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27596:2:0"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27621:0:0"
									},
									"scope": 1127,
									"src": "27576:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "28113:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28143:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1076,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28143:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28143:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1075,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "28124:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28124:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "28124:30:0"
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "27716:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1072,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "28103:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28103:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "28068:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28085:2:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28113:0:0"
									},
									"scope": 1127,
									"src": "28059:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "28387:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "28406:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28426:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28418:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28418:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28418:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28406:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28430:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28398:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "28398:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1102,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "28501:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "28482:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28482:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "28482:28:0"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "28170:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "28377:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28377:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "28326:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "28344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28343:18:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28387:0:0"
									},
									"scope": 1127,
									"src": "28317:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "28741:128:0",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "28760:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1125,
														"src": "28752:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1112,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28752:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"id": 1114,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "28771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28752:25:0"
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1116,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "28788:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1117,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "28797:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28788:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "28788:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1121,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "28842:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "28852:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "28821:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28821:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "EmitStatement",
												"src": "28816:45:0"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "28526:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "28687:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28714:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "28706:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28705:18:0"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28741:0:0"
									},
									"scope": 1127,
									"src": "28678:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1772,
							"src": "26841:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1128,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 612,
										"src": "28895:15:0"
									},
									"id": 1129,
									"nodeType": "InheritanceSpecifier",
									"src": "28895:15:0"
								},
								{
									"baseName": {
										"id": 1130,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "28912:8:0"
									},
									"id": 1131,
									"nodeType": "InheritanceSpecifier",
									"src": "28912:8:0"
								},
								{
									"baseName": {
										"id": 1132,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "28922:7:0"
									},
									"id": 1133,
									"nodeType": "InheritanceSpecifier",
									"src": "28922:7:0"
								}
							],
							"canonicalName": "Farm",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1771,
							"linearizedBaseContracts": [
								1771,
								1127,
								561,
								457,
								612
							],
							"name": "Farm",
							"nameLocation": "28887:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1136,
									"libraryName": {
										"id": 1134,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 805,
										"src": "28943:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28937:27:0",
									"typeName": {
										"id": 1135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "28956:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1140,
									"libraryName": {
										"id": 1137,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1018,
										"src": "28976:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "28970:27:0",
									"typeName": {
										"id": 1139,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1138,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 438,
											"src": "28990:6:0"
										},
										"referencedDeclaration": 438,
										"src": "28990:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$438",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Farm.StakedToken",
									"id": 1147,
									"members": [
										{
											"constant": false,
											"id": 1142,
											"mutability": "mutable",
											"name": "staker",
											"nameLocation": "29043:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1147,
											"src": "29035:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1141,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29035:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1144,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "29068:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1147,
											"src": "29060:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29060:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1146,
											"mutability": "mutable",
											"name": "stackeUtx",
											"nameLocation": "29094:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 1147,
											"src": "29086:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29086:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedToken",
									"nameLocation": "29012:11:0",
									"nodeType": "StructDefinition",
									"scope": 1771,
									"src": "29005:161:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farm.Staker",
									"id": 1158,
									"members": [
										{
											"constant": false,
											"id": 1149,
											"mutability": "mutable",
											"name": "amountStaked",
											"nameLocation": "29225:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "29217:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29217:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1153,
											"mutability": "mutable",
											"name": "stakedTokens",
											"nameLocation": "29262:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "29248:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr",
												"typeString": "struct Farm.StakedToken[]"
											},
											"typeName": {
												"baseType": {
													"id": 1151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1150,
														"name": "StakedToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1147,
														"src": "29248:11:0"
													},
													"referencedDeclaration": 1147,
													"src": "29248:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1147_storage_ptr",
														"typeString": "struct Farm.StakedToken"
													}
												},
												"id": 1152,
												"nodeType": "ArrayTypeName",
												"src": "29248:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr",
													"typeString": "struct Farm.StakedToken[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "timeOfLastUpdate",
											"nameLocation": "29293:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "29285:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1154,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29285:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "unclaimedRewards",
											"nameLocation": "29328:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 1158,
											"src": "29320:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29320:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "29199:6:0",
									"nodeType": "StructDefinition",
									"scope": 1771,
									"src": "29192:160:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1161,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "29374:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29360:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$438",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1160,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1159,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 438,
											"src": "29360:6:0"
										},
										"referencedDeclaration": 438,
										"src": "29360:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$438",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6588103b",
									"id": 1164,
									"mutability": "mutable",
									"name": "nftCollection",
									"nameLocation": "29408:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29393:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$122",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1163,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1162,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 122,
											"src": "29393:7:0"
										},
										"referencedDeclaration": 122,
										"src": "29393:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$122",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1166,
									"mutability": "mutable",
									"name": "nftCollectionAddress",
									"nameLocation": "29444:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29428:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1165,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "29428:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8e7271fa",
									"id": 1169,
									"mutability": "mutable",
									"name": "rewardsPerHour",
									"nameLocation": "29538:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29523:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29523:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 1168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29555:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "54fd4d50",
									"id": 1172,
									"mutability": "mutable",
									"name": "version",
									"nameLocation": "29585:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29570:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29570:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29595:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3166b848",
									"id": 1175,
									"mutability": "mutable",
									"name": "lockEnabled",
									"nameLocation": "29617:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29605:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1173,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "29605:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1174,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29631:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d668087",
									"id": 1178,
									"mutability": "mutable",
									"name": "lockTime",
									"nameLocation": "29669:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29654:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29654:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29680:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 1183,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "29743:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29709:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
										"typeString": "mapping(address => struct Farm.Staker)"
									},
									"typeName": {
										"id": 1182,
										"keyType": {
											"id": 1179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29717:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "29709:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
											"typeString": "mapping(address => struct Farm.Staker)"
										},
										"valueType": {
											"id": 1181,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1180,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1158,
												"src": "29728:6:0"
											},
											"referencedDeclaration": 1158,
											"src": "29728:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1158_storage_ptr",
												"typeString": "struct Farm.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94067045",
									"id": 1187,
									"mutability": "mutable",
									"name": "stakerAddress",
									"nameLocation": "29871:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29836:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1186,
										"keyType": {
											"id": 1184,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29844:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "29836:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "29855:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "114cd3c8",
									"id": 1191,
									"mutability": "mutable",
									"name": "tokenStartStakeTime",
									"nameLocation": "29973:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1771,
									"src": "29938:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1190,
										"keyType": {
											"id": 1188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29946:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "29938:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1189,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "29957:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "30213:282:0",
										"statements": [
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1205,
														"name": "nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "30224:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$122",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1207,
																"name": "_nftCollection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "30248:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1206,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "30240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$122_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30240:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$122",
															"typeString": "contract IERC721"
														}
													},
													"src": "30224:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$122",
														"typeString": "contract IERC721"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "30224:39:0"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "nftCollectionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "30274:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1212,
														"name": "_nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "30297:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30274:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "30274:37:0"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1215,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "30322:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$438",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1216,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "30337:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$438",
															"typeString": "contract IERC20"
														}
													},
													"src": "30322:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "30322:28:0"
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "30361:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "_rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "30378:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30361:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "30361:32:0"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "30404:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1224,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "30415:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30404:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "30404:20:0"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "30451:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1228,
														"name": "_lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "30465:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30451:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "30451:26:0"
											}
										]
									},
									"id": 1232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "_nftCollection",
												"nameLocation": "30041:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "30033:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "30073:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "30066:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$438",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1194,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 438,
														"src": "30066:6:0"
													},
													"referencedDeclaration": 438,
													"src": "30066:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$438",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_rewardsPerHour",
												"nameLocation": "30105:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "30097:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_lockEnabled",
												"nameLocation": "30136:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "30131:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "_lockTime",
												"nameLocation": "30178:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "30173:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30022:190:0"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30213:0:0"
									},
									"scope": 1771,
									"src": "30011:484:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "30576:45:0",
										"statements": [
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1239,
														"name": "lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "30587:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1240,
														"name": "_lockEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "30601:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "30587:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "30587:26:0"
											}
										]
									},
									"functionSelector": "6aa4439f",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "30566:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30566:9:0"
										}
									],
									"name": "setLockEnabled",
									"nameLocation": "30523:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "_lockEnabled",
												"nameLocation": "30543:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "30538:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30538:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30537:19:0"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30576:0:0"
									},
									"scope": 1771,
									"src": "30514:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "30697:39:0",
										"statements": [
											{
												"expression": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1251,
														"name": "lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "30708:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1252,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "30719:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30708:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "30708:20:0"
											}
										]
									},
									"functionSelector": "ae04d45d",
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1248,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "30687:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30687:9:0"
										}
									],
									"name": "setLockTime",
									"nameLocation": "30647:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "_lockTime",
												"nameLocation": "30667:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "30659:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30658:19:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30697:0:0"
									},
									"scope": 1771,
									"src": "30638:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "30813:51:0",
										"statements": [
											{
												"expression": {
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1263,
														"name": "rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "30824:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1264,
														"name": "_rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "30841:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30824:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "30824:32:0"
											}
										]
									},
									"functionSelector": "b5a5e509",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1260,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "30803:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "30803:9:0"
										}
									],
									"name": "setRewardsPerHour",
									"nameLocation": "30751:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_rewardsPerHour",
												"nameLocation": "30777:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "30769:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30768:25:0"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30813:0:0"
									},
									"scope": 1771,
									"src": "30742:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "30932:876:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1278,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1272,
																		"src": "30987:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1276,
																		"name": "nftCollection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "30965:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$122",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 55,
																	"src": "30965:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30965:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1280,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "31000:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30965:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31022:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30943:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "30943:117:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1285,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "31077:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1287,
															"indexExpression": {
																"id": 1286,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "31085:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31077:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "31077:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31077:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "31073:168:0",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "31112:129:0",
													"statements": [
														{
															"assignments": [
																1292
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1292,
																	"mutability": "mutable",
																	"name": "rewards",
																	"nameLocation": "31135:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1304,
																	"src": "31127:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1291,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31127:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1296,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1294,
																		"name": "_staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "31162:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1293,
																	"name": "calculateRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "31145:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31145:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31127:43:0"
														},
														{
															"expression": {
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1297,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "31185:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																				"typeString": "mapping(address => struct Farm.Staker storage ref)"
																			}
																		},
																		"id": 1299,
																		"indexExpression": {
																			"id": 1298,
																			"name": "_staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "31193:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31185:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1158_storage",
																			"typeString": "struct Farm.Staker storage ref"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "unclaimedRewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1157,
																	"src": "31185:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1301,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "31222:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31185:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1303,
															"nodeType": "ExpressionStatement",
															"src": "31185:44:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1309,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "31280:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1312,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31297:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1771",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1771",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1310,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31289:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31289:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1314,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "31304:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1306,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "31253:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$122",
																"typeString": "contract IERC721"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "31253:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31253:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "31253:60:0"
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "stakedToken",
														"nameLocation": "31345:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1362,
														"src": "31326:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$1147_memory_ptr",
															"typeString": "struct Farm.StakedToken"
														},
														"typeName": {
															"id": 1318,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1317,
																"name": "StakedToken",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1147,
																"src": "31326:11:0"
															},
															"referencedDeclaration": 1147,
															"src": "31326:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1147_storage_ptr",
																"typeString": "struct Farm.StakedToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"arguments": [
														{
															"id": 1321,
															"name": "_staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "31405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "31447:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1323,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "31490:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "31490:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1320,
														"name": "StakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "31359:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakedToken_$1147_storage_ptr_$",
															"typeString": "type(struct Farm.StakedToken storage pointer)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31359:164:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1147_memory_ptr",
														"typeString": "struct Farm.StakedToken memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31326:197:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1332,
															"name": "stakedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "31569:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1147_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakedToken_$1147_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1327,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "31534:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1329,
																"indexExpression": {
																	"id": 1328,
																	"name": "_staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "31542:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31534:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1153,
															"src": "31534:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "31534:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr_$_t_struct$_StakedToken_$1147_storage_$returns$__$bound_to$_t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Farm.StakedToken storage ref[] storage pointer,struct Farm.StakedToken storage ref)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31534:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "31534:47:0"
											},
											{
												"expression": {
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "31592:31:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1335,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "31592:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1337,
															"indexExpression": {
																"id": 1336,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "31600:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31592:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "31592:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "31592:31:0"
											},
											{
												"expression": {
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1341,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "31634:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1343,
														"indexExpression": {
															"id": 1342,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "31648:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31634:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1344,
														"name": "_staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "31660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31634:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "31634:33:0"
											},
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1347,
															"name": "tokenStartStakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "31678:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1349,
														"indexExpression": {
															"id": 1348,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "31698:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31678:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1350,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31710:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31710:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31678:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "31678:47:0"
											},
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1354,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "31749:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1356,
															"indexExpression": {
																"id": 1355,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "31757:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31749:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "31749:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1358,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31785:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31785:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31749:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "31749:51:0"
											}
										]
									},
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nameLocation": "30881:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "30896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "30888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "30913:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "30905:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30887:35:0"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30932:0:0"
									},
									"scope": 1771,
									"src": "30872:936:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "31878:133:0",
										"statements": [
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "_balance",
														"nameLocation": "31897:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1388,
														"src": "31889:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31939:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1771",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1771",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31931:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31931:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31931:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1372,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "31908:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 377,
														"src": "31908:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31908:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31889:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1383,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31982:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31982:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1385,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "31994:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1380,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "31956:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "31956:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$438_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31956:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "31956:47:0"
											}
										]
									},
									"functionSelector": "f995441b",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1365,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1046,
												"src": "31857:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31857:9:0"
										},
										{
											"id": 1368,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1367,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "31867:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31867:10:0"
										}
									],
									"name": "adminWithdrawRewards",
									"nameLocation": "31825:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31845:2:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31878:0:0"
									},
									"scope": 1771,
									"src": "31816:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "32088:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1399,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32106:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32106:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "32118:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1398,
														"name": "_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "32099:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32099:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "32099:28:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 588,
												"src": "32061:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32061:12:0"
										},
										{
											"id": 1396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1395,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "32074:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32074:13:0"
										}
									],
									"name": "stake",
									"nameLocation": "32028:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "32042:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "32034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32033:18:0"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32088:0:0"
									},
									"scope": 1771,
									"src": "32019:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "32201:1371:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1413,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "32234:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1416,
																	"indexExpression": {
																		"expression": {
																			"id": 1414,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32242:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32242:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32234:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amountStaked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1149,
																"src": "32234:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32269:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32234:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32285:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															},
															"value": "You have no tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32212:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32212:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "32212:111:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1424,
																	"name": "stakerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "32342:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1426,
																"indexExpression": {
																	"id": 1425,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "32356:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32342:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1427,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32369:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32369:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32342:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32381:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32334:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32334:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "32334:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1434,
																			"name": "lockEnabled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "32445:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1443,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1439,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"baseExpression": {
																										"id": 1435,
																										"name": "tokenStartStakeTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1191,
																										"src": "32462:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1437,
																									"indexExpression": {
																										"id": 1436,
																										"name": "_tokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1407,
																										"src": "32482:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "32462:29:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 1438,
																									"name": "lockTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1178,
																									"src": "32494:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "32462:40:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1440,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "32461:42:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"expression": {
																							"id": 1441,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "32506:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1442,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "32506:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "32461:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 1444,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "32460:62:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "32445:77:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1446,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32444:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "32527:12:0",
																"subExpression": {
																	"id": 1447,
																	"name": "lockEnabled",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "32528:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "32444:95:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206c6f636b2074696d6520686173206e6f74207965742065787069726564",
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32554:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063",
																"typeString": "literal_string \"Token lock time has not yet expired\""
															},
															"value": "Token lock time has not yet expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad5ff8d49cbff5e27ea18f03af37c9fe1a9fbd1874982f8b65ac738b72f44063",
																"typeString": "literal_string \"Token lock time has not yet expired\""
															}
														],
														"id": 1433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32422:180:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "32422:180:0"
											},
											{
												"assignments": [
													1454
												],
												"declarations": [
													{
														"constant": false,
														"id": 1454,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "32722:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1577,
														"src": "32714:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1456,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32749:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1455,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "32732:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32732:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32714:46:0"
											},
											{
												"expression": {
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1460,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "32771:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1463,
															"indexExpression": {
																"expression": {
																	"id": 1461,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32779:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32771:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "32771:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1465,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "32811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32771:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "32771:47:0"
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "32841:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1577,
														"src": "32833:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1471,
												"initialValue": {
													"hexValue": "30",
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32849:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32833:17:0"
											},
											{
												"body": {
													"id": 1518,
													"nodeType": "Block",
													"src": "32931:283:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1487,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1183,
																						"src": "32968:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																							"typeString": "mapping(address => struct Farm.Staker storage ref)"
																						}
																					},
																					"id": 1490,
																					"indexExpression": {
																						"expression": {
																							"id": 1488,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "32976:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "32976:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "32968:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1158_storage",
																						"typeString": "struct Farm.Staker storage ref"
																					}
																				},
																				"id": 1491,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakedTokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "32968:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																					"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																				}
																			},
																			"id": 1493,
																			"indexExpression": {
																				"id": 1492,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1473,
																				"src": "33001:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32968:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1147_storage",
																				"typeString": "struct Farm.StakedToken storage ref"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1144,
																		"src": "32968:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1495,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "33015:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "32968:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1497,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1183,
																						"src": "33063:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																							"typeString": "mapping(address => struct Farm.Staker storage ref)"
																						}
																					},
																					"id": 1500,
																					"indexExpression": {
																						"expression": {
																							"id": 1498,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "33071:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1499,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "33071:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "33063:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$1158_storage",
																						"typeString": "struct Farm.Staker storage ref"
																					}
																				},
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakedTokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "33063:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																					"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																				}
																			},
																			"id": 1503,
																			"indexExpression": {
																				"id": 1502,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1473,
																				"src": "33096:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33063:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1147_storage",
																				"typeString": "struct Farm.StakedToken storage ref"
																			}
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "staker",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1142,
																		"src": "33063:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33117:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33109:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1505,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33109:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33109:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "33063:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "32968:151:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1517,
															"nodeType": "IfStatement",
															"src": "32946:257:0",
															"trueBody": {
																"id": 1516,
																"nodeType": "Block",
																"src": "33135:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1511,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1469,
																				"src": "33154:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1512,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1473,
																				"src": "33162:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33154:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1514,
																		"nodeType": "ExpressionStatement",
																		"src": "33154:9:0"
																	},
																	{
																		"id": 1515,
																		"nodeType": "Break",
																		"src": "33182:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1476,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "32881:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1477,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "32885:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1480,
																"indexExpression": {
																	"expression": {
																		"id": 1478,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32893:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32893:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32885:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1158_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1153,
															"src": "32885:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32885:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32881:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1519,
												"initializationExpression": {
													"assignments": [
														1473
													],
													"declarations": [
														{
															"constant": false,
															"id": 1473,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "32874:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1519,
															"src": "32866:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1472,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32866:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1475,
													"initialValue": {
														"hexValue": "30",
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32878:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32866:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "32926:3:0",
														"subExpression": {
															"id": 1484,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "32926:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1486,
													"nodeType": "ExpressionStatement",
													"src": "32926:3:0"
												},
												"nodeType": "ForStatement",
												"src": "32861:353:0"
											},
											{
												"expression": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1520,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "33228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1523,
																	"indexExpression": {
																		"expression": {
																			"id": 1521,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "33236:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "33236:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33228:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1158_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1153,
																"src": "33228:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																	"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																}
															},
															"id": 1526,
															"indexExpression": {
																"id": 1525,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "33261:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33228:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1147_storage",
																"typeString": "struct Farm.StakedToken storage ref"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staker",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1142,
														"src": "33228:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33285:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1528,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33277:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33277:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33228:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "33228:59:0"
											},
											{
												"expression": {
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "33298:34:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1534,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "33298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1537,
															"indexExpression": {
																"expression": {
																	"id": 1535,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33306:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33306:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33298:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "33298:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "33298:34:0"
											},
											{
												"expression": {
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1541,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "33343:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1543,
														"indexExpression": {
															"id": 1542,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "33357:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33343:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33377:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33369:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1544,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33369:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33369:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33343:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "33343:36:0"
											},
											{
												"expression": {
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1550,
															"name": "tokenStartStakeTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "33390:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1552,
														"indexExpression": {
															"id": 1551,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "33410:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33390:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33422:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33390:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "33390:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1561,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "33471:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1771",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1771",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1559,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33463:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33463:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1563,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33478:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33478:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1565,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "33490:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1556,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "33436:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$122",
																"typeString": "contract IERC721"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 87,
														"src": "33436:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33436:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "33436:63:0"
											},
											{
												"expression": {
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1568,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "33510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1571,
															"indexExpression": {
																"expression": {
																	"id": 1569,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33518:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33518:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33510:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1572,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "33510:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1573,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "33549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "33549:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33510:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "33510:54:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1410,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1409,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 588,
												"src": "32188:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "32188:12:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "32152:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "32169:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "32161:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32160:18:0"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32201:0:0"
									},
									"scope": 1771,
									"src": "32143:1429:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "33696:184:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1597,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1591,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1585,
																												"name": "block",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967292,
																												"src": "33733:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_block",
																													"typeString": "block"
																												}
																											},
																											"id": 1586,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "timestamp",
																											"nodeType": "MemberAccess",
																											"src": "33733:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 1587,
																													"name": "stakers",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1183,
																													"src": "33751:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																														"typeString": "mapping(address => struct Farm.Staker storage ref)"
																													}
																												},
																												"id": 1589,
																												"indexExpression": {
																													"id": 1588,
																													"name": "_staker",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1580,
																													"src": "33759:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "33751:16:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Staker_$1158_storage",
																													"typeString": "struct Farm.Staker storage ref"
																												}
																											},
																											"id": 1590,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "timeOfLastUpdate",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1155,
																											"src": "33751:33:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "33733:51:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1592,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "33732:53:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1593,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1183,
																										"src": "33805:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																											"typeString": "mapping(address => struct Farm.Staker storage ref)"
																										}
																									},
																									"id": 1595,
																									"indexExpression": {
																										"id": 1594,
																										"name": "_staker",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1580,
																										"src": "33813:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "33805:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1158_storage",
																										"typeString": "struct Farm.Staker storage ref"
																									}
																								},
																								"id": 1596,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amountStaked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1149,
																								"src": "33805:29:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "33732:102:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1598,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "33731:104:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1599,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "33716:130:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1600,
																			"name": "rewardsPerHour",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1169,
																			"src": "33849:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33716:147:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1602,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33715:149:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "33363030",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33867:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															},
															"src": "33715:156:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1605,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "33714:158:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1606,
												"nodeType": "Return",
												"src": "33707:165:0"
											}
										]
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "33589:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "33614:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "33606:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33605:17:0"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "_rewards",
												"nameLocation": "33681:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "33673:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33672:18:0"
									},
									"scope": 1771,
									"src": "33580:300:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "33921:353:0",
										"statements": [
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "33940:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "33932:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1614,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33967:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33967:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1613,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "33950:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33950:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1617,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "33994:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1620,
															"indexExpression": {
																"expression": {
																	"id": 1618,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "34002:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34002:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33994:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "33994:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33950:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33932:98:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1625,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "34049:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34059:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34049:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f207265776172647320746f20636c61696d",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34062:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															},
															"value": "You have no rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															}
														],
														"id": 1624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34041:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "34041:52:0"
											},
											{
												"expression": {
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1631,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "34104:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1634,
															"indexExpression": {
																"expression": {
																	"id": 1632,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "34112:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34112:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34104:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1155,
														"src": "34104:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1636,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "34143:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "34143:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34104:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "34104:54:0"
											},
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1640,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "34169:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1643,
															"indexExpression": {
																"expression": {
																	"id": 1641,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "34177:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "34177:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34169:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "34169:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34169:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "34169:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1651,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34246:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34246:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "34258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1648,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "34220:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$438",
																"typeString": "contract IERC20"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 834,
														"src": "34220:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$438_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$438_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34220:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "34220:46:0"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "33897:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33909:2:0"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33921:0:0"
									},
									"scope": 1771,
									"src": "33888:386:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1748,
										"nodeType": "Block",
										"src": "34365:597:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1666,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "34380:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1668,
															"indexExpression": {
																"id": 1667,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "34388:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34380:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1669,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1149,
														"src": "34380:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34410:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34380:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1746,
													"nodeType": "Block",
													"src": "34901:54:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34941:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "34923:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct Farm.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1740,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1739,
																				"name": "StakedToken",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1147,
																				"src": "34927:11:0"
																			},
																			"referencedDeclaration": 1147,
																			"src": "34927:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1147_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1741,
																		"nodeType": "ArrayTypeName",
																		"src": "34927:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34923:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1665,
															"id": 1745,
															"nodeType": "Return",
															"src": "34916:27:0"
														}
													]
												},
												"id": 1747,
												"nodeType": "IfStatement",
												"src": "34376:579:0",
												"trueBody": {
													"id": 1738,
													"nodeType": "Block",
													"src": "34413:482:0",
													"statements": [
														{
															"assignments": [
																1676
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1676,
																	"mutability": "mutable",
																	"name": "_stakedTokens",
																	"nameLocation": "34449:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1738,
																	"src": "34428:34:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Farm.StakedToken[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1674,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1673,
																				"name": "StakedToken",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1147,
																				"src": "34428:11:0"
																			},
																			"referencedDeclaration": 1147,
																			"src": "34428:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1147_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1675,
																		"nodeType": "ArrayTypeName",
																		"src": "34428:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1686,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1681,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "34483:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																					"typeString": "mapping(address => struct Farm.Staker storage ref)"
																				}
																			},
																			"id": 1683,
																			"indexExpression": {
																				"id": 1682,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1659,
																				"src": "34491:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "34483:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1158_storage",
																				"typeString": "struct Farm.Staker storage ref"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amountStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1149,
																		"src": "34483:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "34465:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct Farm.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1678,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1677,
																				"name": "StakedToken",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1147,
																				"src": "34469:11:0"
																			},
																			"referencedDeclaration": 1147,
																			"src": "34469:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1147_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1679,
																		"nodeType": "ArrayTypeName",
																		"src": "34469:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34465:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34428:83:0"
														},
														{
															"assignments": [
																1688
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1688,
																	"mutability": "mutable",
																	"name": "_index",
																	"nameLocation": "34534:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1738,
																	"src": "34526:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1687,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "34526:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1690,
															"initialValue": {
																"hexValue": "30",
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "34526:18:0"
														},
														{
															"body": {
																"id": 1734,
																"nodeType": "Block",
																"src": "34626:221:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1705,
																								"name": "stakers",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1183,
																								"src": "34649:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																									"typeString": "mapping(address => struct Farm.Staker storage ref)"
																								}
																							},
																							"id": 1707,
																							"indexExpression": {
																								"id": 1706,
																								"name": "_user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1659,
																								"src": "34657:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "34649:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1158_storage",
																								"typeString": "struct Farm.Staker storage ref"
																							}
																						},
																						"id": 1708,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakedTokens",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1153,
																						"src": "34649:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																							"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																						}
																					},
																					"id": 1710,
																					"indexExpression": {
																						"id": 1709,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1692,
																						"src": "34677:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "34649:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakedToken_$1147_storage",
																						"typeString": "struct Farm.StakedToken storage ref"
																					}
																				},
																				"id": 1711,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "staker",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1142,
																				"src": "34649:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"components": [
																					{
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 1714,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "34699:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1713,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "34691:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1712,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "34691:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1715,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "34691:10:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"id": 1716,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "34690:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "34649:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1733,
																		"nodeType": "IfStatement",
																		"src": "34645:187:0",
																		"trueBody": {
																			"id": 1732,
																			"nodeType": "Block",
																			"src": "34704:128:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1727,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1718,
																								"name": "_stakedTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1676,
																								"src": "34727:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Farm.StakedToken memory[] memory"
																								}
																							},
																							"id": 1720,
																							"indexExpression": {
																								"id": 1719,
																								"name": "_index",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1688,
																								"src": "34741:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "34727:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$1147_memory_ptr",
																								"typeString": "struct Farm.StakedToken memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1721,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1183,
																										"src": "34751:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																											"typeString": "mapping(address => struct Farm.Staker storage ref)"
																										}
																									},
																									"id": 1723,
																									"indexExpression": {
																										"id": 1722,
																										"name": "_user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1659,
																										"src": "34759:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "34751:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1158_storage",
																										"typeString": "struct Farm.Staker storage ref"
																									}
																								},
																								"id": 1724,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "stakedTokens",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1153,
																								"src": "34751:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																									"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																								}
																							},
																							"id": 1726,
																							"indexExpression": {
																								"id": 1725,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1692,
																								"src": "34779:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "34751:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$1147_storage",
																								"typeString": "struct Farm.StakedToken storage ref"
																							}
																						},
																						"src": "34727:54:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakedToken_$1147_memory_ptr",
																							"typeString": "struct Farm.StakedToken memory"
																						}
																					},
																					"id": 1728,
																					"nodeType": "ExpressionStatement",
																					"src": "34727:54:0"
																				},
																				{
																					"expression": {
																						"id": 1730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "34804:8:0",
																						"subExpression": {
																							"id": 1729,
																							"name": "_index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1688,
																							"src": "34804:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1731,
																					"nodeType": "ExpressionStatement",
																					"src": "34804:8:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1695,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1692,
																	"src": "34581:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1696,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "34585:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																					"typeString": "mapping(address => struct Farm.Staker storage ref)"
																				}
																			},
																			"id": 1698,
																			"indexExpression": {
																				"id": 1697,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1659,
																				"src": "34593:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "34585:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1158_storage",
																				"typeString": "struct Farm.Staker storage ref"
																			}
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakedTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1153,
																		"src": "34585:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage",
																			"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																		}
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "34585:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34581:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1735,
															"initializationExpression": {
																"assignments": [
																	1692
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1692,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "34574:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 1735,
																		"src": "34566:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1691,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "34566:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1694,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "34566:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "34621:3:0",
																	"subExpression": {
																		"id": 1702,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "34621:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1704,
																"nodeType": "ExpressionStatement",
																"src": "34621:3:0"
															},
															"nodeType": "ForStatement",
															"src": "34561:286:0"
														},
														{
															"expression": {
																"id": 1736,
																"name": "_stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "34870:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1665,
															"id": 1737,
															"nodeType": "Return",
															"src": "34863:20:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "63c28db1",
									"id": 1749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedTokens",
									"nameLocation": "34291:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "34315:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "34307:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34306:15:0"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "34343:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Farm.StakedToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 1662,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1661,
															"name": "StakedToken",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1147,
															"src": "34343:11:0"
														},
														"referencedDeclaration": 1147,
														"src": "34343:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$1147_storage_ptr",
															"typeString": "struct Farm.StakedToken"
														}
													},
													"id": 1663,
													"nodeType": "ArrayTypeName",
													"src": "34343:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_$1147_storage_$dyn_storage_ptr",
														"typeString": "struct Farm.StakedToken[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34342:22:0"
									},
									"scope": 1771,
									"src": "34282:680:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "35043:136:0",
										"statements": [
											{
												"assignments": [
													1757
												],
												"declarations": [
													{
														"constant": false,
														"id": 1757,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "35062:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1769,
														"src": "35054:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1766,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1759,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "35089:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1758,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "35072:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "35072:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1761,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "35113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1158_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1763,
															"indexExpression": {
																"id": 1762,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "35121:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "35113:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1158_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1157,
														"src": "35113:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35072:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35054:92:0"
											},
											{
												"expression": {
													"id": 1767,
													"name": "rewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1757,
													"src": "35164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1768,
												"nodeType": "Return",
												"src": "35157:14:0"
											}
										]
									},
									"functionSelector": "f854a27f",
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableRewards",
									"nameLocation": "34979:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "35004:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "34996:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34995:17:0"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "35034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35033:9:0"
									},
									"scope": 1771,
									"src": "34970:209:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1772,
							"src": "28878:6306:0",
							"usedErrors": []
						}
					],
					"src": "38:35148:0"
				},
				"id": 0
			}
		}
	}
}